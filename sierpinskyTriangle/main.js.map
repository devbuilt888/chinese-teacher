{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./index.ts","webpack:///./styles/components.css","webpack:///./styles/main.css","webpack:///./node_modules/css-loader/dist/runtime/api.js","webpack:///./node_modules/css-loader/dist/runtime/cssWithMappingToString.js","webpack:///./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js","webpack:///./src/components/Dashboard.ts","webpack:///./src/components/FractalCardFactory.ts","webpack:///./src/components/FractalControlConfig.ts","webpack:///./src/components/FractalSection.ts","webpack:///./src/fractals/Complex.ts","webpack:///./src/fractals/FractalBase.ts","webpack:///./src/fractals/chaos-game/AdjacentRestrictionFractal.ts","webpack:///./src/fractals/chaos-game/ChaosGameBase.ts","webpack:///./src/fractals/chaos-game/ChaosGameModule.ts","webpack:///./src/fractals/chaos-game/FernFractal.ts","webpack:///./src/fractals/chaos-game/ModifiedSquareFractal.ts","webpack:///./src/fractals/chaos-game/NonRepeatSquareFractal.ts","webpack:///./src/fractals/chaos-game/PentagonFractal.ts","webpack:///./src/fractals/chaos-game/RestrictedSquareFractal.ts","webpack:///./src/fractals/chaos-game/SierpinskiCarpet.ts","webpack:///./src/fractals/chaos-game/TriangleFractal.ts","webpack:///./src/fractals/mathematical/BurningShipFractal.ts","webpack:///./src/fractals/mathematical/JuliaFractal.ts","webpack:///./src/fractals/mathematical/KochSnowflakeFractal.ts","webpack:///./src/fractals/mathematical/LyapunovFractal.ts","webpack:///./src/fractals/mathematical/MandelbrotFractal.ts","webpack:///./src/fractals/mathematical/MathFractalBase.ts","webpack:///./src/fractals/mathematical/MathFractalModule.ts","webpack:///./src/fractals/mathematical/NewtonFractal.ts","webpack:///./src/fractals/mathematical/PhoenixFractal.ts","webpack:///./src/fractals/mathematical/SierpinskiTriangleFractal.ts","webpack:///./src/services/NavigationService.ts","webpack:///./styles/components.css?a6dc","webpack:///./styles/main.css?42e1"],"names":[],"mappings":"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AAa,WAAW,YAAY,OAAO,KAAK,UAAU,UAAU,YAAY,aAAa,WAAW,UAAU,YAAY,OAAO,KAAK,YAAY,aAAa,OAAO,KAAK,YAAY,aAAa,OAAO,KAAK,YAAY,OAAO,KAAK,YAAY,OAAO,YAAY,MAAM,UAAU,YAAY,aAAa,aAAa,aAAa,OAAO,YAAY,MAAM,YAAY,WAAW,UAAU,YAAY,aAAa,aAAa,aAAa,aAAa,WAAW,YAAY,aAAa,aAAa,aAAa,aAAa,aAAa,WAAW,UAAU,MAAM,KAAK,YAAY,aAAa,aAAa,OAAO,KAAK,YAAY,aAAa,OAAO,KAAK,UAAU,YAAY,WAAW,UAAU,UAAU,UAAU,YAAY,WAAW,YAAY,OAAO,KAAK,UAAU,MAAM,YAAY,MAAM,YAAY,aAAa,aAAa,aAAa,aAAa,aAAa,aAAa,WAAW,YAAY,aAAa,OAAO,YAAY,MAAM,YAAY,OAAO,KAAK,UAAU,YAAY,WAAW,MAAM,YAAY,MAAM,UAAU,UAAU,UAAU,YAAY,WAAW,YAAY,aAAa,aAAa,aAAa,aAAa,aAAa,aAAa,WAAW,YAAY,aAAa,WAAW,YAAY,OAAO,KAAK,KAAK,UAAU,YAAY,MAAM,KAAK,UAAU,YAAY,MAAM,MAAM,KAAK,YAAY,aAAa,aAAa,WAAW,YAAY,aAAa,OAAO,KAAK,YAAY,aAAa,WAAW,YAAY,aAAa,aAAa,aAAa,aAAa,OAAO,KAAK,YAAY,WAAW,YAAY,aAAa,WAAW,UAAU,UAAU,UAAU,YAAY,aAAa,aAAa,aAAa,WAAW,UAAU,MAAM,KAAK,YAAY,aAAa,WAAW,YAAY,OAAO,KAAK,UAAU,YAAY,aAAa,OAAO,KAAK,YAAY,WAAW,YAAY,aAAa,aAAa,WAAW,YAAY,aAAa,OAAO,KAAK,YAAY,OAAO,KAAK,YAAY,OAAO,KAAK,YAAY,aAAa,WAAW,YAAY,aAAa,aAAa,OAAO,KAAK,YAAY,aAAa,aAAa,aAAa,WAAW,YAAY,WAAW,MAAM,KAAK,YAAY,aAAa,aAAa,aAAa,aAAa,aAAa,aAAa,WAAW,YAAY,aAAa,OAAO,KAAK,YAAY,WAAW,UAAU,YAAY,aAAa,aAAa,aAAa,aAAa,aAAa,WAAW,YAAY,WAAW,YAAY,WAAW,UAAU,MAAM,KAAK,YAAY,aAAa,W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","file":"main.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./index.ts\");\n","/**\n * Fractal Dashboard - Main application entry point\n */\n\nimport './styles/main.css';\nimport './styles/components.css';\nimport { initDashboard } from './src/components/Dashboard';\nimport { RestrictedSquareFractal } from './src/fractals/chaos-game/RestrictedSquareFractal';\nimport { TriangleFractal } from './src/fractals/chaos-game/TriangleFractal';\nimport { MandelbrotFractal } from './src/fractals/mathematical/MandelbrotFractal';\nimport { AdjacentRestrictionFractal } from './src/fractals/chaos-game/AdjacentRestrictionFractal';\nimport { ModifiedSquareFractal } from './src/fractals/chaos-game/ModifiedSquareFractal';\nimport { NonRepeatSquareFractal } from './src/fractals/chaos-game/NonRepeatSquareFractal';\nimport { SierpinskiCarpet } from './src/fractals/chaos-game/SierpinskiCarpet';\nimport { PentagonFractal } from './src/fractals/chaos-game/PentagonFractal';\nimport { FernFractal } from './src/fractals/chaos-game/FernFractal';\nimport { KochSnowflakeFractal } from './src/fractals/mathematical/KochSnowflakeFractal';\n\nconsole.log('Application starting...');\n\n// Initialize particles.js\nfunction initParticles() {\n    if (typeof (window as any).particlesJS !== 'undefined') {\n        console.log(\"Initializing particles.js\");\n        (window as any).particlesJS('particles-js', {\n            \"particles\": {\n                \"number\": { \"value\": 80, \"density\": { \"enable\": true, \"value_area\": 800 } },\n                \"color\": { \"value\": \"#ffffff\" },\n                \"shape\": {\n                    \"type\": \"circle\",\n                    \"stroke\": { \"width\": 0, \"color\": \"#000000\" },\n                    \"polygon\": { \"nb_sides\": 5 }\n                },\n                \"opacity\": {\n                    \"value\": 0.5,\n                    \"random\": false,\n                    \"anim\": { \"enable\": false, \"speed\": 1, \"opacity_min\": 0.1, \"sync\": false }\n                },\n                \"size\": {\n                    \"value\": 3,\n                    \"random\": true,\n                    \"anim\": { \"enable\": false, \"speed\": 40, \"size_min\": 0.1, \"sync\": false }\n                },\n                \"line_linked\": {\n                    \"enable\": true,\n                    \"distance\": 150,\n                    \"color\": \"#ffffff\",\n                    \"opacity\": 0.4,\n                    \"width\": 1\n                },\n                \"move\": {\n                    \"enable\": true,\n                    \"speed\": 2,\n                    \"direction\": \"none\",\n                    \"random\": true,\n                    \"straight\": false,\n                    \"out_mode\": \"out\",\n                    \"bounce\": false,\n                    \"attract\": { \"enable\": false, \"rotateX\": 600, \"rotateY\": 1200 }\n                }\n            },\n            \"interactivity\": {\n                \"detect_on\": \"canvas\",\n                \"events\": {\n                    \"onhover\": { \"enable\": true, \"mode\": \"grab\" },\n                    \"onclick\": { \"enable\": true, \"mode\": \"push\" },\n                    \"resize\": true\n                },\n                \"modes\": {\n                    \"grab\": { \"distance\": 140, \"line_linked\": { \"opacity\": 1 } },\n                    \"bubble\": { \"distance\": 400, \"size\": 40, \"duration\": 2, \"opacity\": 8, \"speed\": 3 },\n                    \"repulse\": { \"distance\": 200, \"duration\": 0.4 },\n                    \"push\": { \"particles_nb\": 4 },\n                    \"remove\": { \"particles_nb\": 2 }\n                }\n            },\n            \"retina_detect\": true\n        });\n    } else {\n        console.log(\"particlesJS is undefined\");\n    }\n}\n\n// Initialize the Restricted Square fractal on the editor page\nfunction initRestrictedSquareFractal(iterations: number = 10000): void {\n    const canvasId = 'restricted-canvas';\n    const canvas = document.getElementById(canvasId) as HTMLCanvasElement;\n    if (!canvas) {\n        console.error(`Canvas element with ID '${canvasId}' not found`);\n        return;\n    }\n    \n    console.log(`Initializing Restricted Square fractal with ${iterations} iterations`);\n    \n    const fractal = new RestrictedSquareFractal(canvasId, iterations);\n    fractal.initialize();\n    fractal.generate();\n}\n\n// Initialize the Sierpinski Triangle fractal on the editor page\nfunction initSierpinskiTriangle(iterations: number = 10000, animate: boolean = false, speed: number = 100): void {\n    const canvasId = 'triangle-canvas';\n    const canvas = document.getElementById(canvasId) as HTMLCanvasElement;\n    if (!canvas) {\n        console.error(`Canvas element with ID '${canvasId}' not found`);\n        return;\n    }\n    \n    console.log(`Initializing Sierpinski Triangle fractal with ${iterations} iterations${animate ? ' (animated)' : ''}`);\n    \n    const fractal = new TriangleFractal(canvasId, iterations);\n    fractal.initialize();\n    fractal.generate(animate, speed);\n}\n\n// Initialize the Mandelbrot Set fractal on the editor page\nfunction initMandelbrotSet(iterations: number = 100): void {\n    const canvasId = 'mandelbrot-canvas';\n    const canvas = document.getElementById(canvasId) as HTMLCanvasElement;\n    if (!canvas) {\n        console.error(`Canvas element with ID '${canvasId}' not found`);\n        return;\n    }\n    \n    console.log(`Initializing Mandelbrot Set fractal with ${iterations} iterations`);\n    \n    const fractal = new MandelbrotFractal(canvasId);\n    fractal.setMaxIterations(iterations);\n    fractal.initialize();\n    fractal.generate();\n}\n\n// Initialize the Adjacent Restriction fractal on the editor page\nfunction initAdjacentRestrictionFractal(iterations: number = 20000, animate: boolean = false, speed: number = 100): void {\n    const canvasId = 'adjacent-canvas';\n    const canvas = document.getElementById(canvasId) as HTMLCanvasElement;\n    if (!canvas) {\n        console.error(`Canvas element with ID '${canvasId}' not found`);\n        return;\n    }\n    \n    console.log(`Initializing Adjacent Restriction fractal with ${iterations} iterations${animate ? ' (animated)' : ''}`);\n    \n    const fractal = new AdjacentRestrictionFractal(canvasId, iterations);\n    fractal.initialize();\n    fractal.generate(animate, speed);\n}\n\n// Initialize the Modified Square fractal on the editor page\nfunction initModifiedSquareFractal(iterations: number = 50000): void {\n    const canvasId = 'modified-square-canvas';\n    const canvas = document.getElementById(canvasId) as HTMLCanvasElement;\n    if (!canvas) {\n        console.error(`Canvas element with ID '${canvasId}' not found`);\n        return;\n    }\n    \n    console.log(`Initializing Modified Square fractal with ${iterations} iterations`);\n    \n    const fractal = new ModifiedSquareFractal(canvasId, iterations);\n    fractal.initialize();\n    fractal.generate();\n}\n\n// Initialize the Non-Repeat Square fractal on the editor page\nfunction initNonRepeatSquareFractal(iterations: number = 20000): void {\n    const canvasId = 'nonrepeat-square-canvas';\n    const canvas = document.getElementById(canvasId) as HTMLCanvasElement;\n    if (!canvas) {\n        console.error(`Canvas element with ID '${canvasId}' not found`);\n        return;\n    }\n    \n    console.log(`Initializing Non-Repeat Square fractal with ${iterations} iterations`);\n    \n    const fractal = new NonRepeatSquareFractal(canvasId, iterations);\n    fractal.initialize();\n    fractal.generate();\n}\n\n// Initialize the Sierpinski Carpet fractal on the editor page\nfunction initSierpinskiCarpet(iterations: number = 50000): void {\n    const canvasId = 'sierpinski-carpet-canvas';\n    const canvas = document.getElementById(canvasId) as HTMLCanvasElement;\n    if (!canvas) {\n        console.error(`Canvas element with ID '${canvasId}' not found`);\n        return;\n    }\n    \n    console.log(`Initializing Sierpinski Carpet fractal with ${iterations} iterations`);\n    \n    const fractal = new SierpinskiCarpet(canvasId, iterations);\n    fractal.initialize();\n    fractal.generate();\n}\n\n// Initialize the Pentagon fractal on the editor page\nfunction initPentagonFractal(iterations: number = 40000): void {\n    const canvasId = 'pentagon-canvas';\n    const canvas = document.getElementById(canvasId) as HTMLCanvasElement;\n    if (!canvas) {\n        console.error(`Canvas element with ID '${canvasId}' not found`);\n        return;\n    }\n    \n    console.log(`Initializing Pentagon fractal with ${iterations} iterations`);\n    \n    const fractal = new PentagonFractal(canvasId, iterations);\n    fractal.initialize();\n    fractal.generate();\n}\n\n// Initialize the Barnsley Fern fractal on the editor page\nfunction initFernFractal(iterations: number = 50000): void {\n    const canvasId = 'fern-canvas';\n    const canvas = document.getElementById(canvasId) as HTMLCanvasElement;\n    if (!canvas) {\n        console.error(`Canvas element with ID '${canvasId}' not found`);\n        return;\n    }\n    \n    console.log(`Initializing Barnsley Fern fractal with ${iterations} iterations`);\n    \n    const fractal = new FernFractal(canvasId, iterations);\n    fractal.initialize();\n    fractal.generate();\n}\n\n// Initialize the Koch Snowflake fractal on the editor page\nfunction initKochSnowflake(iterations: number = 4): void {\n    const canvasId = 'koch-canvas';\n    const canvas = document.getElementById(canvasId) as HTMLCanvasElement;\n    if (!canvas) {\n        console.error(`Canvas element with ID '${canvasId}' not found`);\n        return;\n    }\n    \n    console.log(`Initializing Koch Snowflake fractal with ${iterations} iterations`);\n    \n    const fractal = new KochSnowflakeFractal(canvasId, iterations);\n    fractal.initialize();\n    fractal.generate();\n}\n\n// Initialize the Phoenix fractal on the editor page\nfunction initPhoenixFractal(iterations: number = 100): void {\n    const canvasId = 'phoenix-canvas';\n    const canvas = document.getElementById(canvasId) as HTMLCanvasElement;\n    if (!canvas) {\n        console.error(`Canvas element with ID '${canvasId}' not found`);\n        return;\n    }\n    \n    console.log(`Initializing Phoenix fractal with ${iterations} iterations`);\n    \n    const fractal = new PhoenixFractal(canvasId, iterations);\n    fractal.initialize();\n    fractal.generate();\n}\n\n// Initialize a fractal page based on the fractal type\nfunction initFractalPage(fractalType: string): void {\n    console.log(`Initializing fractal page for: ${fractalType}`);\n    \n    switch (fractalType) {\n        case 'restricted-square':\n            initRestrictedSquareFractal();\n            break;\n        case 'sierpinski-triangle':\n            initSierpinskiTriangle();\n            break;\n        case 'mandelbrot-set':\n            initMandelbrotSet();\n            break;\n        case 'adjacent-restriction':\n            initAdjacentRestrictionFractal();\n            break;\n        case 'modified-square':\n            initModifiedSquareFractal();\n            break;\n        case 'nonrepeat-square':\n            initNonRepeatSquareFractal();\n            break;\n        case 'sierpinski-carpet':\n            initSierpinskiCarpet();\n            break;\n        case 'pentagon-fractal':\n            initPentagonFractal();\n            break;\n        case 'barnsley-fern':\n            initFernFractal();\n            break;\n        case 'koch-snowflake':\n            initKochSnowflake();\n            break;\n        case 'phoenix-fractal':\n            initPhoenixFractal();\n            break;\n        default:\n            console.error(`Unknown fractal type: ${fractalType}`);\n    }\n}\n\n// Expose these functions to the global window object for use in HTML pages\n(window as any).initRestrictedSquareFractal = initRestrictedSquareFractal;\n(window as any).initSierpinskiTriangle = initSierpinskiTriangle;\n(window as any).initMandelbrotSet = initMandelbrotSet;\n(window as any).initAdjacentRestrictionFractal = initAdjacentRestrictionFractal;\n(window as any).initModifiedSquareFractal = initModifiedSquareFractal;\n(window as any).initNonRepeatSquareFractal = initNonRepeatSquareFractal;\n(window as any).initSierpinskiCarpet = initSierpinskiCarpet;\n(window as any).initPentagonFractal = initPentagonFractal;\n(window as any).initFernFractal = initFernFractal;\n(window as any).initKochSnowflake = initKochSnowflake;\n(window as any).initPhoenixFractal = initPhoenixFractal;\n(window as any).initFractalPage = initFractalPage;\n\n// Expose fractal classes to the window object for direct use in HTML pages\nimport { JuliaFractal } from './src/fractals/mathematical/JuliaFractal';\nimport { BurningShipFractal } from './src/fractals/mathematical/BurningShipFractal';\nimport { NewtonFractal } from './src/fractals/mathematical/NewtonFractal';\nimport { LyapunovFractal } from './src/fractals/mathematical/LyapunovFractal';\nimport { PhoenixFractal } from './src/fractals/mathematical/PhoenixFractal';\n\n(window as any).MandelbrotFractal = MandelbrotFractal;\n(window as any).JuliaFractal = JuliaFractal;\n(window as any).BurningShipFractal = BurningShipFractal;\n(window as any).NewtonFractal = NewtonFractal;\n(window as any).LyapunovFractal = LyapunovFractal;\n(window as any).KochSnowflakeFractal = KochSnowflakeFractal;\n(window as any).PhoenixFractal = PhoenixFractal;\n(window as any).AdjacentRestrictionFractal = AdjacentRestrictionFractal;\n\n// Wait for DOM to be fully loaded before initializing\ndocument.addEventListener('DOMContentLoaded', () => {\n    console.log('DOM fully loaded, initializing dashboard...');\n    \n    // Try initializing particles\n    try {\n        initParticles();\n    } catch (e) {\n        console.error('Error initializing particles:', e);\n    }\n    \n    // Initialize the dashboard with all fractal modules\n    initDashboard();\n    \n    console.log('Dashboard initialization triggered');\n}); ","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../node_modules/css-loader/dist/runtime/cssWithMappingToString.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \"/**\\r\\n * Component-specific styles for the Fractal Explorer\\r\\n */\\r\\n\\r\\n/* Input range styling */\\r\\ninput[type=\\\"range\\\"] {\\r\\n  -webkit-appearance: none;\\r\\n  appearance: none;\\r\\n  width: 100%;\\r\\n  height: 5px;\\r\\n  background: rgba(100, 116, 139, 0.2);\\r\\n  border-radius: 3px;\\r\\n  outline: none;\\r\\n  margin: 0.5rem 0;\\r\\n}\\r\\n\\r\\ninput[type=\\\"range\\\"]::-webkit-slider-thumb {\\r\\n  -webkit-appearance: none;\\r\\n  appearance: none;\\r\\n  width: 16px;\\r\\n  height: 16px;\\r\\n  background: var(--primary);\\r\\n  border-radius: 50%;\\r\\n  cursor: pointer;\\r\\n  transition: transform 0.2s, box-shadow 0.2s;\\r\\n}\\r\\n\\r\\ninput[type=\\\"range\\\"]::-moz-range-thumb {\\r\\n  width: 16px;\\r\\n  height: 16px;\\r\\n  background: var(--primary);\\r\\n  border-radius: 50%;\\r\\n  cursor: pointer;\\r\\n  border: none;\\r\\n  transition: transform 0.2s, box-shadow 0.2s;\\r\\n}\\r\\n\\r\\ninput[type=\\\"range\\\"]:hover::-webkit-slider-thumb {\\r\\n  transform: scale(1.2);\\r\\n  box-shadow: 0 0 10px rgba(79, 70, 229, 0.5);\\r\\n}\\r\\n\\r\\ninput[type=\\\"range\\\"]:hover::-moz-range-thumb {\\r\\n  transform: scale(1.2);\\r\\n  box-shadow: 0 0 10px rgba(79, 70, 229, 0.5);\\r\\n}\\r\\n\\r\\ninput[type=\\\"range\\\"]:focus::-webkit-slider-thumb {\\r\\n  box-shadow: 0 0 0 3px rgba(79, 70, 229, 0.3);\\r\\n}\\r\\n\\r\\ninput[type=\\\"range\\\"]:focus::-moz-range-thumb {\\r\\n  box-shadow: 0 0 0 3px rgba(79, 70, 229, 0.3);\\r\\n}\\r\\n\\r\\n/* Label styles */\\r\\nlabel {\\r\\n  display: block;\\r\\n  margin-bottom: 0.5rem;\\r\\n  color: var(--text-secondary);\\r\\n  font-size: 0.9rem;\\r\\n  font-weight: 500;\\r\\n}\\r\\n\\r\\n/* Button styling */\\r\\nbutton {\\r\\n  background: var(--primary);\\r\\n  color: white;\\r\\n  border: none;\\r\\n  border-radius: 8px;\\r\\n  padding: 0.75rem 1.25rem;\\r\\n  font-family: inherit;\\r\\n  font-weight: 500;\\r\\n  font-size: 0.95rem;\\r\\n  cursor: pointer;\\r\\n  transition: all 0.3s var(--ease-out);\\r\\n  position: relative;\\r\\n  overflow: hidden;\\r\\n  display: inline-flex;\\r\\n  align-items: center;\\r\\n  justify-content: center;\\r\\n  gap: 0.5rem;\\r\\n  z-index: 1;\\r\\n}\\r\\n\\r\\nbutton:hover {\\r\\n  background: var(--primary-hover);\\r\\n  transform: translateY(-2px);\\r\\n  box-shadow: var(--shadow-sm);\\r\\n}\\r\\n\\r\\nbutton:active {\\r\\n  transform: translateY(0);\\r\\n  background: var(--primary-active);\\r\\n}\\r\\n\\r\\nbutton::before {\\r\\n  content: '';\\r\\n  position: absolute;\\r\\n  top: 0;\\r\\n  left: -100%;\\r\\n  width: 100%;\\r\\n  height: 100%;\\r\\n  background: linear-gradient(90deg, transparent, rgba(255, 255, 255, 0.2), transparent);\\r\\n  z-index: -1;\\r\\n  transition: 0.5s;\\r\\n}\\r\\n\\r\\nbutton:hover::before {\\r\\n  left: 100%;\\r\\n}\\r\\n\\r\\n/* Range value display */\\r\\n.range-value {\\r\\n  display: inline-block;\\r\\n  font-family: monospace;\\r\\n  font-size: 0.9rem;\\r\\n  color: var(--text-primary);\\r\\n  background: var(--surface-1);\\r\\n  padding: 0.25rem 0.5rem;\\r\\n  border-radius: 4px;\\r\\n  min-width: 60px;\\r\\n  text-align: center;\\r\\n  margin-left: 0.5rem;\\r\\n}\\r\\n\\r\\n/* Input group styling */\\r\\n.input-group {\\r\\n  margin-bottom: 1.25rem;\\r\\n}\\r\\n\\r\\n.input-row {\\r\\n  display: flex;\\r\\n  align-items: center;\\r\\n  gap: 0.5rem;\\r\\n}\\r\\n\\r\\n/* Fractal tooltip/modal styles */\\r\\n.fractal-tooltip {\\r\\n  position: fixed;\\r\\n  top: 50%;\\r\\n  left: 50%;\\r\\n  transform: translate(-50%, -50%);\\r\\n  width: 90%;\\r\\n  max-width: 700px;\\r\\n  background: var(--panel-bg);\\r\\n  backdrop-filter: blur(20px);\\r\\n  -webkit-backdrop-filter: blur(20px);\\r\\n  border-radius: 16px;\\r\\n  border: 1px solid var(--border-medium);\\r\\n  box-shadow: var(--shadow-lg), var(--glow-primary);\\r\\n  z-index: 1000;\\r\\n  animation: modalFadeIn 0.3s var(--ease-spring);\\r\\n  overflow: hidden;\\r\\n  display: flex;\\r\\n  flex-direction: column;\\r\\n}\\r\\n\\r\\n@keyframes modalFadeIn {\\r\\n  from {\\r\\n    opacity: 0;\\r\\n    transform: translate(-50%, -48%) scale(0.95);\\r\\n  }\\r\\n  to {\\r\\n    opacity: 1;\\r\\n    transform: translate(-50%, -50%) scale(1);\\r\\n  }\\r\\n}\\r\\n\\r\\n.fractal-tooltip-header {\\r\\n  padding: 1.25rem 1.5rem;\\r\\n  background: rgba(0, 0, 0, 0.25);\\r\\n  border-bottom: 1px solid var(--border-medium);\\r\\n  display: flex;\\r\\n  justify-content: space-between;\\r\\n  align-items: center;\\r\\n}\\r\\n\\r\\n.fractal-tooltip-title {\\r\\n  font-size: 1.5rem;\\r\\n  font-weight: 600;\\r\\n  margin: 0;\\r\\n  color: var(--text-primary);\\r\\n  background: var(--gradient-1);\\r\\n  -webkit-background-clip: text;\\r\\n  background-clip: text;\\r\\n  color: transparent;\\r\\n}\\r\\n\\r\\n.fractal-tooltip-close {\\r\\n  background: none;\\r\\n  border: none;\\r\\n  color: var(--text-secondary);\\r\\n  font-size: 1.5rem;\\r\\n  cursor: pointer;\\r\\n  width: 2rem;\\r\\n  height: 2rem;\\r\\n  display: flex;\\r\\n  align-items: center;\\r\\n  justify-content: center;\\r\\n  border-radius: 50%;\\r\\n  transition: all 0.2s var(--ease-out);\\r\\n  margin: 0;\\r\\n  padding: 0;\\r\\n}\\r\\n\\r\\n.fractal-tooltip-close:hover {\\r\\n  background: rgba(236, 72, 153, 0.2);\\r\\n  color: var(--text-primary);\\r\\n  transform: none;\\r\\n  box-shadow: none;\\r\\n}\\r\\n\\r\\n.fractal-tooltip-content {\\r\\n  padding: 2rem;\\r\\n  overflow-y: auto;\\r\\n  max-height: 70vh;\\r\\n}\\r\\n\\r\\n.fractal-tooltip-description {\\r\\n  color: var(--text-secondary);\\r\\n  font-size: 1rem;\\r\\n  line-height: 1.6;\\r\\n  margin-bottom: 2rem;\\r\\n  background: rgba(15, 23, 42, 0.4);\\r\\n  padding: 1.5rem;\\r\\n  border-radius: 12px;\\r\\n  border: 1px solid var(--border-light);\\r\\n}\\r\\n\\r\\n.fractal-tooltip-description p {\\r\\n  margin: 0 0 1rem 0;\\r\\n}\\r\\n\\r\\n.fractal-tooltip-description p:last-child {\\r\\n  margin-bottom: 0;\\r\\n}\\r\\n\\r\\n.fractal-formula-container {\\r\\n  background: rgba(15, 23, 42, 0.4);\\r\\n  border-radius: 12px;\\r\\n  padding: 1.5rem;\\r\\n  position: relative;\\r\\n  margin-bottom: 1rem;\\r\\n  border: 1px solid var(--border-light);\\r\\n}\\r\\n\\r\\n.formula-title {\\r\\n  font-size: 0.9rem;\\r\\n  color: var(--text-secondary);\\r\\n  margin-bottom: 0.75rem;\\r\\n  font-weight: 600;\\r\\n  display: flex;\\r\\n  align-items: center;\\r\\n  gap: 0.5rem;\\r\\n}\\r\\n\\r\\n.fractal-formula {\\r\\n  font-family: monospace;\\r\\n  color: var(--primary);\\r\\n  font-size: 0.95rem;\\r\\n  line-height: 1.6;\\r\\n  white-space: pre-wrap;\\r\\n  overflow-x: auto;\\r\\n  background: rgba(15, 23, 42, 0.6);\\r\\n  padding: 1rem;\\r\\n  border-radius: 8px;\\r\\n  border: 1px solid var(--border-light);\\r\\n}\\r\\n\\r\\n.formula-copy-button {\\r\\n  position: absolute;\\r\\n  top: 0.75rem;\\r\\n  right: 0.75rem;\\r\\n  background: rgba(79, 70, 229, 0.2);\\r\\n  border: 1px solid rgba(79, 70, 229, 0.3);\\r\\n  color: var(--text-primary);\\r\\n  font-size: 0.8rem;\\r\\n  padding: 0.35rem 0.7rem;\\r\\n  border-radius: 6px;\\r\\n  cursor: pointer;\\r\\n  transition: all 0.2s var(--ease-out);\\r\\n  display: flex;\\r\\n  align-items: center;\\r\\n  gap: 0.25rem;\\r\\n  opacity: 0.8;\\r\\n}\\r\\n\\r\\n.formula-copy-button:hover {\\r\\n  background: rgba(79, 70, 229, 0.3);\\r\\n  transform: translateY(-2px);\\r\\n  opacity: 1;\\r\\n}\\r\\n\\r\\n.formula-copied {\\r\\n  position: absolute;\\r\\n  top: 0.75rem;\\r\\n  right: 0.75rem;\\r\\n  background: rgba(16, 185, 129, 0.2);\\r\\n  color: var(--success);\\r\\n  border: 1px solid rgba(16, 185, 129, 0.3);\\r\\n  font-size: 0.8rem;\\r\\n  padding: 0.35rem 0.7rem;\\r\\n  border-radius: 6px;\\r\\n  opacity: 0;\\r\\n  pointer-events: none;\\r\\n}\\r\\n\\r\\n.formula-copied.visible {\\r\\n  animation: fadeInOut 1.5s var(--ease-out);\\r\\n}\\r\\n\\r\\n@keyframes fadeInOut {\\r\\n  0% { opacity: 0; }\\r\\n  20% { opacity: 1; }\\r\\n  80% { opacity: 1; }\\r\\n  100% { opacity: 0; }\\r\\n}\\r\\n\\r\\n.fractal-modal-backdrop {\\r\\n  position: fixed;\\r\\n  top: 0;\\r\\n  left: 0;\\r\\n  width: 100%;\\r\\n  height: 100%;\\r\\n  background: rgba(0, 0, 0, 0.5);\\r\\n  backdrop-filter: blur(4px);\\r\\n  -webkit-backdrop-filter: blur(4px);\\r\\n  z-index: 999;\\r\\n  animation: backdropFadeIn 0.3s var(--ease-out);\\r\\n}\\r\\n\\r\\n@keyframes backdropFadeIn {\\r\\n  from { opacity: 0; }\\r\\n  to { opacity: 1; }\\r\\n}\\r\\n\\r\\n/* Editor styles */\\r\\n.editor-container {\\r\\n  display: grid;\\r\\n  grid-template-columns: 1fr 1fr;\\r\\n  gap: 2rem;\\r\\n  margin-bottom: 3rem;\\r\\n}\\r\\n\\r\\n.editor-panel {\\r\\n  background: var(--card-bg);\\r\\n  border-radius: 16px;\\r\\n  border: 1px solid var(--border-light);\\r\\n  overflow: hidden;\\r\\n}\\r\\n\\r\\n.editor-header {\\r\\n  padding: 1.25rem 1.5rem;\\r\\n  background: rgba(0, 0, 0, 0.2);\\r\\n  border-bottom: 1px solid var(--border-light);\\r\\n}\\r\\n\\r\\n.editor-header h3 {\\r\\n  margin: 0;\\r\\n  font-size: 1.2rem;\\r\\n  color: var(--text-primary);\\r\\n}\\r\\n\\r\\n.editor-controls {\\r\\n  padding: 1.5rem;\\r\\n}\\r\\n\\r\\n.editor-canvas-container {\\r\\n  width: 100%;\\r\\n  position: relative;\\r\\n}\\r\\n\\r\\n.editor-canvas {\\r\\n  width: 100%;\\r\\n  height: 350px;\\r\\n  display: block;\\r\\n  background-color: rgba(0, 0, 0, 0.3);\\r\\n}\\r\\n\\r\\n/* For tablet and below */\\r\\n@media (max-width: 1024px) {\\r\\n  .editor-container {\\r\\n    grid-template-columns: 1fr;\\r\\n  }\\r\\n}\\r\\n\\r\\n/* For small screens */\\r\\n@media (max-width: 640px) {\\r\\n  .fractal-tooltip {\\r\\n    width: 95%;\\r\\n    max-height: 90vh;\\r\\n  }\\r\\n  \\r\\n  .fractal-tooltip-content {\\r\\n    padding: 1.5rem;\\r\\n  }\\r\\n} \", \"\",{\"version\":3,\"sources\":[\"webpack://./styles/components.css\"],\"names\":[],\"mappings\":\"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\",\"sourcesContent\":[\"/**\\r\\n * Component-specific styles for the Fractal Explorer\\r\\n */\\r\\n\\r\\n/* Input range styling */\\r\\ninput[type=\\\"range\\\"] {\\r\\n  -webkit-appearance: none;\\r\\n  appearance: none;\\r\\n  width: 100%;\\r\\n  height: 5px;\\r\\n  background: rgba(100, 116, 139, 0.2);\\r\\n  border-radius: 3px;\\r\\n  outline: none;\\r\\n  margin: 0.5rem 0;\\r\\n}\\r\\n\\r\\ninput[type=\\\"range\\\"]::-webkit-slider-thumb {\\r\\n  -webkit-appearance: none;\\r\\n  appearance: none;\\r\\n  width: 16px;\\r\\n  height: 16px;\\r\\n  background: var(--primary);\\r\\n  border-radius: 50%;\\r\\n  cursor: pointer;\\r\\n  transition: transform 0.2s, box-shadow 0.2s;\\r\\n}\\r\\n\\r\\ninput[type=\\\"range\\\"]::-moz-range-thumb {\\r\\n  width: 16px;\\r\\n  height: 16px;\\r\\n  background: var(--primary);\\r\\n  border-radius: 50%;\\r\\n  cursor: pointer;\\r\\n  border: none;\\r\\n  transition: transform 0.2s, box-shadow 0.2s;\\r\\n}\\r\\n\\r\\ninput[type=\\\"range\\\"]:hover::-webkit-slider-thumb {\\r\\n  transform: scale(1.2);\\r\\n  box-shadow: 0 0 10px rgba(79, 70, 229, 0.5);\\r\\n}\\r\\n\\r\\ninput[type=\\\"range\\\"]:hover::-moz-range-thumb {\\r\\n  transform: scale(1.2);\\r\\n  box-shadow: 0 0 10px rgba(79, 70, 229, 0.5);\\r\\n}\\r\\n\\r\\ninput[type=\\\"range\\\"]:focus::-webkit-slider-thumb {\\r\\n  box-shadow: 0 0 0 3px rgba(79, 70, 229, 0.3);\\r\\n}\\r\\n\\r\\ninput[type=\\\"range\\\"]:focus::-moz-range-thumb {\\r\\n  box-shadow: 0 0 0 3px rgba(79, 70, 229, 0.3);\\r\\n}\\r\\n\\r\\n/* Label styles */\\r\\nlabel {\\r\\n  display: block;\\r\\n  margin-bottom: 0.5rem;\\r\\n  color: var(--text-secondary);\\r\\n  font-size: 0.9rem;\\r\\n  font-weight: 500;\\r\\n}\\r\\n\\r\\n/* Button styling */\\r\\nbutton {\\r\\n  background: var(--primary);\\r\\n  color: white;\\r\\n  border: none;\\r\\n  border-radius: 8px;\\r\\n  padding: 0.75rem 1.25rem;\\r\\n  font-family: inherit;\\r\\n  font-weight: 500;\\r\\n  font-size: 0.95rem;\\r\\n  cursor: pointer;\\r\\n  transition: all 0.3s var(--ease-out);\\r\\n  position: relative;\\r\\n  overflow: hidden;\\r\\n  display: inline-flex;\\r\\n  align-items: center;\\r\\n  justify-content: center;\\r\\n  gap: 0.5rem;\\r\\n  z-index: 1;\\r\\n}\\r\\n\\r\\nbutton:hover {\\r\\n  background: var(--primary-hover);\\r\\n  transform: translateY(-2px);\\r\\n  box-shadow: var(--shadow-sm);\\r\\n}\\r\\n\\r\\nbutton:active {\\r\\n  transform: translateY(0);\\r\\n  background: var(--primary-active);\\r\\n}\\r\\n\\r\\nbutton::before {\\r\\n  content: '';\\r\\n  position: absolute;\\r\\n  top: 0;\\r\\n  left: -100%;\\r\\n  width: 100%;\\r\\n  height: 100%;\\r\\n  background: linear-gradient(90deg, transparent, rgba(255, 255, 255, 0.2), transparent);\\r\\n  z-index: -1;\\r\\n  transition: 0.5s;\\r\\n}\\r\\n\\r\\nbutton:hover::before {\\r\\n  left: 100%;\\r\\n}\\r\\n\\r\\n/* Range value display */\\r\\n.range-value {\\r\\n  display: inline-block;\\r\\n  font-family: monospace;\\r\\n  font-size: 0.9rem;\\r\\n  color: var(--text-primary);\\r\\n  background: var(--surface-1);\\r\\n  padding: 0.25rem 0.5rem;\\r\\n  border-radius: 4px;\\r\\n  min-width: 60px;\\r\\n  text-align: center;\\r\\n  margin-left: 0.5rem;\\r\\n}\\r\\n\\r\\n/* Input group styling */\\r\\n.input-group {\\r\\n  margin-bottom: 1.25rem;\\r\\n}\\r\\n\\r\\n.input-row {\\r\\n  display: flex;\\r\\n  align-items: center;\\r\\n  gap: 0.5rem;\\r\\n}\\r\\n\\r\\n/* Fractal tooltip/modal styles */\\r\\n.fractal-tooltip {\\r\\n  position: fixed;\\r\\n  top: 50%;\\r\\n  left: 50%;\\r\\n  transform: translate(-50%, -50%);\\r\\n  width: 90%;\\r\\n  max-width: 700px;\\r\\n  background: var(--panel-bg);\\r\\n  backdrop-filter: blur(20px);\\r\\n  -webkit-backdrop-filter: blur(20px);\\r\\n  border-radius: 16px;\\r\\n  border: 1px solid var(--border-medium);\\r\\n  box-shadow: var(--shadow-lg), var(--glow-primary);\\r\\n  z-index: 1000;\\r\\n  animation: modalFadeIn 0.3s var(--ease-spring);\\r\\n  overflow: hidden;\\r\\n  display: flex;\\r\\n  flex-direction: column;\\r\\n}\\r\\n\\r\\n@keyframes modalFadeIn {\\r\\n  from {\\r\\n    opacity: 0;\\r\\n    transform: translate(-50%, -48%) scale(0.95);\\r\\n  }\\r\\n  to {\\r\\n    opacity: 1;\\r\\n    transform: translate(-50%, -50%) scale(1);\\r\\n  }\\r\\n}\\r\\n\\r\\n.fractal-tooltip-header {\\r\\n  padding: 1.25rem 1.5rem;\\r\\n  background: rgba(0, 0, 0, 0.25);\\r\\n  border-bottom: 1px solid var(--border-medium);\\r\\n  display: flex;\\r\\n  justify-content: space-between;\\r\\n  align-items: center;\\r\\n}\\r\\n\\r\\n.fractal-tooltip-title {\\r\\n  font-size: 1.5rem;\\r\\n  font-weight: 600;\\r\\n  margin: 0;\\r\\n  color: var(--text-primary);\\r\\n  background: var(--gradient-1);\\r\\n  -webkit-background-clip: text;\\r\\n  background-clip: text;\\r\\n  color: transparent;\\r\\n}\\r\\n\\r\\n.fractal-tooltip-close {\\r\\n  background: none;\\r\\n  border: none;\\r\\n  color: var(--text-secondary);\\r\\n  font-size: 1.5rem;\\r\\n  cursor: pointer;\\r\\n  width: 2rem;\\r\\n  height: 2rem;\\r\\n  display: flex;\\r\\n  align-items: center;\\r\\n  justify-content: center;\\r\\n  border-radius: 50%;\\r\\n  transition: all 0.2s var(--ease-out);\\r\\n  margin: 0;\\r\\n  padding: 0;\\r\\n}\\r\\n\\r\\n.fractal-tooltip-close:hover {\\r\\n  background: rgba(236, 72, 153, 0.2);\\r\\n  color: var(--text-primary);\\r\\n  transform: none;\\r\\n  box-shadow: none;\\r\\n}\\r\\n\\r\\n.fractal-tooltip-content {\\r\\n  padding: 2rem;\\r\\n  overflow-y: auto;\\r\\n  max-height: 70vh;\\r\\n}\\r\\n\\r\\n.fractal-tooltip-description {\\r\\n  color: var(--text-secondary);\\r\\n  font-size: 1rem;\\r\\n  line-height: 1.6;\\r\\n  margin-bottom: 2rem;\\r\\n  background: rgba(15, 23, 42, 0.4);\\r\\n  padding: 1.5rem;\\r\\n  border-radius: 12px;\\r\\n  border: 1px solid var(--border-light);\\r\\n}\\r\\n\\r\\n.fractal-tooltip-description p {\\r\\n  margin: 0 0 1rem 0;\\r\\n}\\r\\n\\r\\n.fractal-tooltip-description p:last-child {\\r\\n  margin-bottom: 0;\\r\\n}\\r\\n\\r\\n.fractal-formula-container {\\r\\n  background: rgba(15, 23, 42, 0.4);\\r\\n  border-radius: 12px;\\r\\n  padding: 1.5rem;\\r\\n  position: relative;\\r\\n  margin-bottom: 1rem;\\r\\n  border: 1px solid var(--border-light);\\r\\n}\\r\\n\\r\\n.formula-title {\\r\\n  font-size: 0.9rem;\\r\\n  color: var(--text-secondary);\\r\\n  margin-bottom: 0.75rem;\\r\\n  font-weight: 600;\\r\\n  display: flex;\\r\\n  align-items: center;\\r\\n  gap: 0.5rem;\\r\\n}\\r\\n\\r\\n.fractal-formula {\\r\\n  font-family: monospace;\\r\\n  color: var(--primary);\\r\\n  font-size: 0.95rem;\\r\\n  line-height: 1.6;\\r\\n  white-space: pre-wrap;\\r\\n  overflow-x: auto;\\r\\n  background: rgba(15, 23, 42, 0.6);\\r\\n  padding: 1rem;\\r\\n  border-radius: 8px;\\r\\n  border: 1px solid var(--border-light);\\r\\n}\\r\\n\\r\\n.formula-copy-button {\\r\\n  position: absolute;\\r\\n  top: 0.75rem;\\r\\n  right: 0.75rem;\\r\\n  background: rgba(79, 70, 229, 0.2);\\r\\n  border: 1px solid rgba(79, 70, 229, 0.3);\\r\\n  color: var(--text-primary);\\r\\n  font-size: 0.8rem;\\r\\n  padding: 0.35rem 0.7rem;\\r\\n  border-radius: 6px;\\r\\n  cursor: pointer;\\r\\n  transition: all 0.2s var(--ease-out);\\r\\n  display: flex;\\r\\n  align-items: center;\\r\\n  gap: 0.25rem;\\r\\n  opacity: 0.8;\\r\\n}\\r\\n\\r\\n.formula-copy-button:hover {\\r\\n  background: rgba(79, 70, 229, 0.3);\\r\\n  transform: translateY(-2px);\\r\\n  opacity: 1;\\r\\n}\\r\\n\\r\\n.formula-copied {\\r\\n  position: absolute;\\r\\n  top: 0.75rem;\\r\\n  right: 0.75rem;\\r\\n  background: rgba(16, 185, 129, 0.2);\\r\\n  color: var(--success);\\r\\n  border: 1px solid rgba(16, 185, 129, 0.3);\\r\\n  font-size: 0.8rem;\\r\\n  padding: 0.35rem 0.7rem;\\r\\n  border-radius: 6px;\\r\\n  opacity: 0;\\r\\n  pointer-events: none;\\r\\n}\\r\\n\\r\\n.formula-copied.visible {\\r\\n  animation: fadeInOut 1.5s var(--ease-out);\\r\\n}\\r\\n\\r\\n@keyframes fadeInOut {\\r\\n  0% { opacity: 0; }\\r\\n  20% { opacity: 1; }\\r\\n  80% { opacity: 1; }\\r\\n  100% { opacity: 0; }\\r\\n}\\r\\n\\r\\n.fractal-modal-backdrop {\\r\\n  position: fixed;\\r\\n  top: 0;\\r\\n  left: 0;\\r\\n  width: 100%;\\r\\n  height: 100%;\\r\\n  background: rgba(0, 0, 0, 0.5);\\r\\n  backdrop-filter: blur(4px);\\r\\n  -webkit-backdrop-filter: blur(4px);\\r\\n  z-index: 999;\\r\\n  animation: backdropFadeIn 0.3s var(--ease-out);\\r\\n}\\r\\n\\r\\n@keyframes backdropFadeIn {\\r\\n  from { opacity: 0; }\\r\\n  to { opacity: 1; }\\r\\n}\\r\\n\\r\\n/* Editor styles */\\r\\n.editor-container {\\r\\n  display: grid;\\r\\n  grid-template-columns: 1fr 1fr;\\r\\n  gap: 2rem;\\r\\n  margin-bottom: 3rem;\\r\\n}\\r\\n\\r\\n.editor-panel {\\r\\n  background: var(--card-bg);\\r\\n  border-radius: 16px;\\r\\n  border: 1px solid var(--border-light);\\r\\n  overflow: hidden;\\r\\n}\\r\\n\\r\\n.editor-header {\\r\\n  padding: 1.25rem 1.5rem;\\r\\n  background: rgba(0, 0, 0, 0.2);\\r\\n  border-bottom: 1px solid var(--border-light);\\r\\n}\\r\\n\\r\\n.editor-header h3 {\\r\\n  margin: 0;\\r\\n  font-size: 1.2rem;\\r\\n  color: var(--text-primary);\\r\\n}\\r\\n\\r\\n.editor-controls {\\r\\n  padding: 1.5rem;\\r\\n}\\r\\n\\r\\n.editor-canvas-container {\\r\\n  width: 100%;\\r\\n  position: relative;\\r\\n}\\r\\n\\r\\n.editor-canvas {\\r\\n  width: 100%;\\r\\n  height: 350px;\\r\\n  display: block;\\r\\n  background-color: rgba(0, 0, 0, 0.3);\\r\\n}\\r\\n\\r\\n/* For tablet and below */\\r\\n@media (max-width: 1024px) {\\r\\n  .editor-container {\\r\\n    grid-template-columns: 1fr;\\r\\n  }\\r\\n}\\r\\n\\r\\n/* For small screens */\\r\\n@media (max-width: 640px) {\\r\\n  .fractal-tooltip {\\r\\n    width: 95%;\\r\\n    max-height: 90vh;\\r\\n  }\\r\\n  \\r\\n  .fractal-tooltip-content {\\r\\n    padding: 1.5rem;\\r\\n  }\\r\\n} \"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../node_modules/css-loader/dist/runtime/cssWithMappingToString.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n___CSS_LOADER_EXPORT___.push([module.id, \"@import url(https://fonts.googleapis.com/css2?family=Manrope:wght@400;500;600;700&display=swap);\"]);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \"/**\\n * Main styles for the Fractal Explorer Dashboard\\n */\\n\\n:root {\\n    --primary: #4F46E5;\\n    --primary-hover: #4338CA;\\n    --primary-active: #3730A3;\\n    --secondary: #8B5CF6;\\n    --accent: #EC4899;\\n    --background: #0F172A;\\n    --card-bg: #1E293B;\\n    --card-hover: #182341;\\n    --panel-bg: rgba(23, 37, 64, 0.7);\\n    --text-primary: #F8FAFC;\\n    --text-secondary: #CBD5E1;\\n    --text-tertiary: #64748B;\\n    --border-light: rgba(100, 116, 139, 0.2);\\n    --border-medium: rgba(100, 116, 139, 0.3);\\n    --surface-1: #162036;\\n    --surface-2: #1E293B;\\n    --success: #10B981;\\n    --gradient-1: linear-gradient(110deg, #4F46E5, #8B5CF6, #48ecc9, #48ecc9, #48ecc9, #48ecc9);\\n    --gradient-2: linear-gradient(135deg, #0EA5E9, #8B5CF6);\\n    --gradient-subtle: linear-gradient(170deg, rgba(79, 70, 229, 0.1) 0%, rgba(236, 72, 153, 0.1) 100%);\\n    --shadow-sm: 0 1px 2px rgba(0, 0, 0, 0.2);\\n    --shadow-md: 0 4px 8px rgba(0, 0, 0, 0.25);\\n    --shadow-lg: 0 10px 20px rgba(0, 0, 0, 0.3);\\n    --glow-primary: 0 0 20px rgba(79, 70, 229, 0.5);\\n    \\n    --ease-spring: cubic-bezier(0.2, 0.8, 0.2, 1);\\n    --ease-out: cubic-bezier(0.2, 0, 0, 1);\\n    --ease-in: cubic-bezier(0.4, 0, 1, 1);\\n}\\n\\n*, *::before, *::after {\\n    box-sizing: border-box;\\n    margin: 0;\\n    padding: 0;\\n}\\n\\nhtml {\\n    font-size: 16px;\\n}\\n\\nbody {\\n    background-color: var(--background);\\n    background-image: \\n        radial-gradient(circle at 20% 35%, rgba(79, 70, 229, 0.15) 0%, transparent 40%),\\n        radial-gradient(circle at 75% 80%, rgba(236, 72, 153, 0.1) 0%, transparent 30%);\\n    background-attachment: fixed;\\n    color: var(--text-primary);\\n    font-family: 'Manrope', -apple-system, BlinkMacSystemFont, 'Segoe UI', sans-serif;\\n    margin: 0;\\n    padding: 0;\\n    line-height: 1.5;\\n    min-height: 100vh;\\n    font-weight: 400;\\n    letter-spacing: -0.015em;\\n    overflow-x: hidden;\\n}\\n\\n/* Glassmorphism effects */\\n.glassmorphism {\\n    background: var(--panel-bg);\\n    backdrop-filter: blur(10px);\\n    -webkit-backdrop-filter: blur(10px);\\n    border: 1px solid var(--border-light);\\n}\\n\\nheader {\\n    position: relative;\\n    padding: 3rem 0 5rem;\\n    margin-bottom: 2rem;\\n    overflow: hidden;\\n    isolation: isolate;\\n}\\n\\nheader::before {\\n    content: \\\"\\\";\\n    position: absolute;\\n    width: 100%;\\n    height: 100%;\\n    top: 0;\\n    left: 0;\\n    background-image: linear-gradient(110deg, #4F46E5, #8B5CF6, #48ecc9, #48ecc9, #48ecc9, #48ecc9);\\n    opacity: 0.5;\\n    z-index: -1;\\n}\\n\\nheader::after {\\n    content: \\\"\\\";\\n    position: absolute;\\n    width: 100%;\\n    height: 70px;\\n    bottom: -1px;\\n    left: 0;\\n    background-image: linear-gradient(to top, var(--background), transparent);\\n    z-index: -1;\\n}\\n\\nh1, h2, h3 {\\n    font-weight: 700;\\n    letter-spacing: -0.025em;\\n}\\n\\nh1 {\\n    font-size: 3.5rem;\\n    background: linear-gradient(to right, #fff, #cbd5e1);\\n    -webkit-background-clip: text;\\n    background-clip: text;\\n    color: transparent;\\n    margin: 0;\\n    text-align: center;\\n    animation: fadeUp 1s var(--ease-out) forwards;\\n}\\n\\n@keyframes fadeUp {\\n    from {\\n        opacity: 0;\\n        transform: translateY(20px);\\n    }\\n    to {\\n        opacity: 1;\\n        transform: translateY(0);\\n    }\\n}\\n\\nh2 {\\n    font-size: 1.8rem;\\n    color: var(--text-primary);\\n    margin-bottom: 1.5rem;\\n    position: relative;\\n    display: inline-block;\\n    animation: fadeIn 0.8s var(--ease-out) forwards;\\n}\\n\\n@keyframes fadeIn {\\n    from { opacity: 0; }\\n    to { opacity: 1; }\\n}\\n\\nh2::after {\\n    content: '';\\n    position: absolute;\\n    width: 60px;\\n    height: 3px;\\n    background: var(--gradient-2);\\n    bottom: -8px;\\n    left: 0;\\n    border-radius: 3px;\\n    transition: width 0.3s var(--ease-out);\\n}\\n\\nh2:hover::after {\\n    width: 100%;\\n    background: var(--gradient-1);\\n}\\n\\n.container {\\n    max-width: 1280px;\\n    margin: 0 auto;\\n    padding: 0 2rem;\\n}\\n\\n.dashboard {\\n    display: flex;\\n    flex-direction: column;\\n    gap: 3rem;\\n    padding-bottom: 4rem;\\n    position: relative;\\n}\\n\\n.fractal-section {\\n    margin-bottom: 2rem;\\n    animation: slideUpFade 0.7s var(--ease-spring) both;\\n}\\n\\n@keyframes slideUpFade {\\n    from {\\n        opacity: 0;\\n        transform: translateY(40px);\\n    }\\n    to {\\n        opacity: 1;\\n        transform: translateY(0);\\n    }\\n}\\n\\n.section-header {\\n    display: flex;\\n    justify-content: space-between;\\n    align-items: center;\\n    margin-bottom: 2rem;\\n}\\n\\n.fractal-grid {\\n    display: grid;\\n    grid-template-columns: repeat(auto-fill, minmax(350px, 1fr));\\n    gap: 2rem;\\n    perspective: 1000px;\\n}\\n\\n.fractal-card {\\n    background-color: var(--card-bg);\\n    border-radius: 16px;\\n    overflow: hidden;\\n    transition: transform 0.5s var(--ease-spring), \\n                box-shadow 0.4s var(--ease-out), \\n                background-color 0.3s var(--ease-out);\\n    border: 1px solid var(--border-light);\\n    transform-origin: center bottom;\\n    position: relative;\\n    isolation: isolate;\\n    animation: floatUp 5s ease-in-out infinite;\\n}\\n\\n@keyframes floatUp {\\n    0% { transform: translateY(0px); }\\n    50% { transform: translateY(-15px); }\\n    100% { transform: translateY(0px); }\\n}\\n\\n.fractal-card:nth-child(2n) {\\n    animation-delay: 0.5s;\\n}\\n\\n.fractal-card:nth-child(3n) {\\n    animation-delay: 1s;\\n}\\n\\n.fractal-card:nth-child(4n) {\\n    animation-delay: 0.3s;\\n}\\n\\n.card-header {\\n    padding: 1.25rem 1.5rem;\\n    background-color: rgba(0, 0, 0, 0.2);\\n    border-bottom: 1px solid var(--border-light);\\n    position: relative;\\n}\\n\\n.card-header h3 {\\n    margin: 0;\\n    font-size: 1.1rem;\\n    color: var(--text-primary);\\n}\\n\\n.card-header::after {\\n    content: '';\\n    position: absolute;\\n    left: 0;\\n    bottom: -1px;\\n    width: 0;\\n    height: 1px;\\n    background: var(--gradient-2);\\n    transition: width 0.3s var(--ease-out);\\n}\\n\\n.fractal-card:hover .card-header::after {\\n    width: 100%;\\n}\\n\\ncanvas {\\n    width: 100%;\\n    height: 250px;\\n    display: block;\\n    background-color: rgba(0, 0, 0, 0.3);\\n    transition: transform 0.3s var(--ease-out), filter 0.3s var(--ease-out);\\n}\\n\\n.fractal-card:hover canvas {\\n    filter: brightness(1.1) contrast(1.05);\\n}\\n\\n.fractal-controls {\\n    padding: 1.25rem 1.5rem;\\n    border-top: 1px solid var(--border-light);\\n    transition: background-color 0.3s;\\n}\\n\\n.control-group {\\n    margin-bottom: 1rem;\\n    transition: transform 0.2s var(--ease-out);\\n}\\n\\n.fractal-card:hover .control-group {\\n    transform: translateY(-3px);\\n}\\n\\n.control-group:last-child {\\n    margin-bottom: 1.25rem;\\n}\\n\\n.header-content {\\n    max-width: 800px;\\n    margin: 0 auto;\\n    text-align: center;\\n    position: relative;\\n    z-index: 2;\\n}\\n\\n.subtitle {\\n    font-size: 1.2rem;\\n    opacity: 0.9;\\n    margin-top: 1.5rem;\\n}\\n\\n.header-decoration {\\n    width: 100%;\\n    max-width: 500px;\\n    height: 2px;\\n    background: var(--accent);\\n    margin: 1.5rem auto;\\n    position: relative;\\n    overflow: hidden;\\n    opacity: 0.6;\\n}\\n\\n.grid-overlay {\\n    position: fixed;\\n    top: 0;\\n    left: 0;\\n    width: 100%;\\n    height: 100%;\\n    background-image: linear-gradient(to right, rgba(255, 255, 255, 0.05) 1px, transparent 1px),\\n                    linear-gradient(to bottom, rgba(255, 255, 255, 0.05) 1px, transparent 1px);\\n    background-size: 40px 40px;\\n    z-index: -1;\\n    opacity: 0.4;\\n    pointer-events: none;\\n}\\n\\n.corner-decoration {\\n    position: fixed;\\n    width: 200px;\\n    height: 200px;\\n    z-index: -1;\\n    opacity: 0.2;\\n    pointer-events: none;\\n}\\n\\n.corner-top-left {\\n    top: 0;\\n    left: 0;\\n    border-top: 2px solid var(--accent);\\n    border-left: 2px solid var(--accent);\\n    border-top-left-radius: 12px;\\n}\\n\\n.corner-top-right {\\n    top: 0;\\n    right: 0;\\n    border-top: 2px solid var(--secondary);\\n    border-right: 2px solid var(--secondary);\\n    border-top-right-radius: 12px;\\n}\\n\\n.corner-bottom-left {\\n    bottom: 0;\\n    left: 0;\\n    border-bottom: 2px solid var(--secondary);\\n    border-left: 2px solid var(--secondary);\\n    border-bottom-left-radius: 12px;\\n}\\n\\n.corner-bottom-right {\\n    bottom: 0;\\n    right: 0;\\n    border-bottom: 2px solid var(--accent);\\n    border-right: 2px solid var(--accent);\\n    border-bottom-right-radius: 12px;\\n}\\n\\n.highlight {\\n    color: var(--accent);\\n    font-weight: 600;\\n    position: relative;\\n    z-index: 1;\\n}\\n\\n.footer {\\n    padding: 3rem 0;\\n    margin-top: 2rem;\\n    text-align: center;\\n    color: var(--text-secondary);\\n    position: relative;\\n}\\n\\n.footer-line {\\n    height: 1px;\\n    width: 100%;\\n    background: linear-gradient(to right, transparent, var(--border-light), transparent);\\n    margin-bottom: 2rem;\\n}\\n\\n@media (max-width: 768px) {\\n    .fractal-grid {\\n        grid-template-columns: 1fr;\\n    }\\n    \\n    h1 {\\n        font-size: 2.25rem;\\n    }\\n    \\n    h2 {\\n        font-size: 1.5rem;\\n    }\\n    \\n    header {\\n        padding: 2rem 0 4rem;\\n    }\\n    \\n    .container {\\n        padding: 0 1.25rem;\\n    }\\n} \", \"\",{\"version\":3,\"sources\":[\"webpack://./styles/main.css\"],\"names\":[],\"mappings\":\"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\",\"sourcesContent\":[\"/**\\n * Main styles for the Fractal Explorer Dashboard\\n */\\n\\n@import url('https://fonts.googleapis.com/css2?family=Manrope:wght@400;500;600;700&display=swap');\\n\\n:root {\\n    --primary: #4F46E5;\\n    --primary-hover: #4338CA;\\n    --primary-active: #3730A3;\\n    --secondary: #8B5CF6;\\n    --accent: #EC4899;\\n    --background: #0F172A;\\n    --card-bg: #1E293B;\\n    --card-hover: #182341;\\n    --panel-bg: rgba(23, 37, 64, 0.7);\\n    --text-primary: #F8FAFC;\\n    --text-secondary: #CBD5E1;\\n    --text-tertiary: #64748B;\\n    --border-light: rgba(100, 116, 139, 0.2);\\n    --border-medium: rgba(100, 116, 139, 0.3);\\n    --surface-1: #162036;\\n    --surface-2: #1E293B;\\n    --success: #10B981;\\n    --gradient-1: linear-gradient(110deg, #4F46E5, #8B5CF6, #48ecc9, #48ecc9, #48ecc9, #48ecc9);\\n    --gradient-2: linear-gradient(135deg, #0EA5E9, #8B5CF6);\\n    --gradient-subtle: linear-gradient(170deg, rgba(79, 70, 229, 0.1) 0%, rgba(236, 72, 153, 0.1) 100%);\\n    --shadow-sm: 0 1px 2px rgba(0, 0, 0, 0.2);\\n    --shadow-md: 0 4px 8px rgba(0, 0, 0, 0.25);\\n    --shadow-lg: 0 10px 20px rgba(0, 0, 0, 0.3);\\n    --glow-primary: 0 0 20px rgba(79, 70, 229, 0.5);\\n    \\n    --ease-spring: cubic-bezier(0.2, 0.8, 0.2, 1);\\n    --ease-out: cubic-bezier(0.2, 0, 0, 1);\\n    --ease-in: cubic-bezier(0.4, 0, 1, 1);\\n}\\n\\n*, *::before, *::after {\\n    box-sizing: border-box;\\n    margin: 0;\\n    padding: 0;\\n}\\n\\nhtml {\\n    font-size: 16px;\\n}\\n\\nbody {\\n    background-color: var(--background);\\n    background-image: \\n        radial-gradient(circle at 20% 35%, rgba(79, 70, 229, 0.15) 0%, transparent 40%),\\n        radial-gradient(circle at 75% 80%, rgba(236, 72, 153, 0.1) 0%, transparent 30%);\\n    background-attachment: fixed;\\n    color: var(--text-primary);\\n    font-family: 'Manrope', -apple-system, BlinkMacSystemFont, 'Segoe UI', sans-serif;\\n    margin: 0;\\n    padding: 0;\\n    line-height: 1.5;\\n    min-height: 100vh;\\n    font-weight: 400;\\n    letter-spacing: -0.015em;\\n    overflow-x: hidden;\\n}\\n\\n/* Glassmorphism effects */\\n.glassmorphism {\\n    background: var(--panel-bg);\\n    backdrop-filter: blur(10px);\\n    -webkit-backdrop-filter: blur(10px);\\n    border: 1px solid var(--border-light);\\n}\\n\\nheader {\\n    position: relative;\\n    padding: 3rem 0 5rem;\\n    margin-bottom: 2rem;\\n    overflow: hidden;\\n    isolation: isolate;\\n}\\n\\nheader::before {\\n    content: \\\"\\\";\\n    position: absolute;\\n    width: 100%;\\n    height: 100%;\\n    top: 0;\\n    left: 0;\\n    background-image: linear-gradient(110deg, #4F46E5, #8B5CF6, #48ecc9, #48ecc9, #48ecc9, #48ecc9);\\n    opacity: 0.5;\\n    z-index: -1;\\n}\\n\\nheader::after {\\n    content: \\\"\\\";\\n    position: absolute;\\n    width: 100%;\\n    height: 70px;\\n    bottom: -1px;\\n    left: 0;\\n    background-image: linear-gradient(to top, var(--background), transparent);\\n    z-index: -1;\\n}\\n\\nh1, h2, h3 {\\n    font-weight: 700;\\n    letter-spacing: -0.025em;\\n}\\n\\nh1 {\\n    font-size: 3.5rem;\\n    background: linear-gradient(to right, #fff, #cbd5e1);\\n    -webkit-background-clip: text;\\n    background-clip: text;\\n    color: transparent;\\n    margin: 0;\\n    text-align: center;\\n    animation: fadeUp 1s var(--ease-out) forwards;\\n}\\n\\n@keyframes fadeUp {\\n    from {\\n        opacity: 0;\\n        transform: translateY(20px);\\n    }\\n    to {\\n        opacity: 1;\\n        transform: translateY(0);\\n    }\\n}\\n\\nh2 {\\n    font-size: 1.8rem;\\n    color: var(--text-primary);\\n    margin-bottom: 1.5rem;\\n    position: relative;\\n    display: inline-block;\\n    animation: fadeIn 0.8s var(--ease-out) forwards;\\n}\\n\\n@keyframes fadeIn {\\n    from { opacity: 0; }\\n    to { opacity: 1; }\\n}\\n\\nh2::after {\\n    content: '';\\n    position: absolute;\\n    width: 60px;\\n    height: 3px;\\n    background: var(--gradient-2);\\n    bottom: -8px;\\n    left: 0;\\n    border-radius: 3px;\\n    transition: width 0.3s var(--ease-out);\\n}\\n\\nh2:hover::after {\\n    width: 100%;\\n    background: var(--gradient-1);\\n}\\n\\n.container {\\n    max-width: 1280px;\\n    margin: 0 auto;\\n    padding: 0 2rem;\\n}\\n\\n.dashboard {\\n    display: flex;\\n    flex-direction: column;\\n    gap: 3rem;\\n    padding-bottom: 4rem;\\n    position: relative;\\n}\\n\\n.fractal-section {\\n    margin-bottom: 2rem;\\n    animation: slideUpFade 0.7s var(--ease-spring) both;\\n}\\n\\n@keyframes slideUpFade {\\n    from {\\n        opacity: 0;\\n        transform: translateY(40px);\\n    }\\n    to {\\n        opacity: 1;\\n        transform: translateY(0);\\n    }\\n}\\n\\n.section-header {\\n    display: flex;\\n    justify-content: space-between;\\n    align-items: center;\\n    margin-bottom: 2rem;\\n}\\n\\n.fractal-grid {\\n    display: grid;\\n    grid-template-columns: repeat(auto-fill, minmax(350px, 1fr));\\n    gap: 2rem;\\n    perspective: 1000px;\\n}\\n\\n.fractal-card {\\n    background-color: var(--card-bg);\\n    border-radius: 16px;\\n    overflow: hidden;\\n    transition: transform 0.5s var(--ease-spring), \\n                box-shadow 0.4s var(--ease-out), \\n                background-color 0.3s var(--ease-out);\\n    border: 1px solid var(--border-light);\\n    transform-origin: center bottom;\\n    position: relative;\\n    isolation: isolate;\\n    animation: floatUp 5s ease-in-out infinite;\\n}\\n\\n@keyframes floatUp {\\n    0% { transform: translateY(0px); }\\n    50% { transform: translateY(-15px); }\\n    100% { transform: translateY(0px); }\\n}\\n\\n.fractal-card:nth-child(2n) {\\n    animation-delay: 0.5s;\\n}\\n\\n.fractal-card:nth-child(3n) {\\n    animation-delay: 1s;\\n}\\n\\n.fractal-card:nth-child(4n) {\\n    animation-delay: 0.3s;\\n}\\n\\n.card-header {\\n    padding: 1.25rem 1.5rem;\\n    background-color: rgba(0, 0, 0, 0.2);\\n    border-bottom: 1px solid var(--border-light);\\n    position: relative;\\n}\\n\\n.card-header h3 {\\n    margin: 0;\\n    font-size: 1.1rem;\\n    color: var(--text-primary);\\n}\\n\\n.card-header::after {\\n    content: '';\\n    position: absolute;\\n    left: 0;\\n    bottom: -1px;\\n    width: 0;\\n    height: 1px;\\n    background: var(--gradient-2);\\n    transition: width 0.3s var(--ease-out);\\n}\\n\\n.fractal-card:hover .card-header::after {\\n    width: 100%;\\n}\\n\\ncanvas {\\n    width: 100%;\\n    height: 250px;\\n    display: block;\\n    background-color: rgba(0, 0, 0, 0.3);\\n    transition: transform 0.3s var(--ease-out), filter 0.3s var(--ease-out);\\n}\\n\\n.fractal-card:hover canvas {\\n    filter: brightness(1.1) contrast(1.05);\\n}\\n\\n.fractal-controls {\\n    padding: 1.25rem 1.5rem;\\n    border-top: 1px solid var(--border-light);\\n    transition: background-color 0.3s;\\n}\\n\\n.control-group {\\n    margin-bottom: 1rem;\\n    transition: transform 0.2s var(--ease-out);\\n}\\n\\n.fractal-card:hover .control-group {\\n    transform: translateY(-3px);\\n}\\n\\n.control-group:last-child {\\n    margin-bottom: 1.25rem;\\n}\\n\\n.header-content {\\n    max-width: 800px;\\n    margin: 0 auto;\\n    text-align: center;\\n    position: relative;\\n    z-index: 2;\\n}\\n\\n.subtitle {\\n    font-size: 1.2rem;\\n    opacity: 0.9;\\n    margin-top: 1.5rem;\\n}\\n\\n.header-decoration {\\n    width: 100%;\\n    max-width: 500px;\\n    height: 2px;\\n    background: var(--accent);\\n    margin: 1.5rem auto;\\n    position: relative;\\n    overflow: hidden;\\n    opacity: 0.6;\\n}\\n\\n.grid-overlay {\\n    position: fixed;\\n    top: 0;\\n    left: 0;\\n    width: 100%;\\n    height: 100%;\\n    background-image: linear-gradient(to right, rgba(255, 255, 255, 0.05) 1px, transparent 1px),\\n                    linear-gradient(to bottom, rgba(255, 255, 255, 0.05) 1px, transparent 1px);\\n    background-size: 40px 40px;\\n    z-index: -1;\\n    opacity: 0.4;\\n    pointer-events: none;\\n}\\n\\n.corner-decoration {\\n    position: fixed;\\n    width: 200px;\\n    height: 200px;\\n    z-index: -1;\\n    opacity: 0.2;\\n    pointer-events: none;\\n}\\n\\n.corner-top-left {\\n    top: 0;\\n    left: 0;\\n    border-top: 2px solid var(--accent);\\n    border-left: 2px solid var(--accent);\\n    border-top-left-radius: 12px;\\n}\\n\\n.corner-top-right {\\n    top: 0;\\n    right: 0;\\n    border-top: 2px solid var(--secondary);\\n    border-right: 2px solid var(--secondary);\\n    border-top-right-radius: 12px;\\n}\\n\\n.corner-bottom-left {\\n    bottom: 0;\\n    left: 0;\\n    border-bottom: 2px solid var(--secondary);\\n    border-left: 2px solid var(--secondary);\\n    border-bottom-left-radius: 12px;\\n}\\n\\n.corner-bottom-right {\\n    bottom: 0;\\n    right: 0;\\n    border-bottom: 2px solid var(--accent);\\n    border-right: 2px solid var(--accent);\\n    border-bottom-right-radius: 12px;\\n}\\n\\n.highlight {\\n    color: var(--accent);\\n    font-weight: 600;\\n    position: relative;\\n    z-index: 1;\\n}\\n\\n.footer {\\n    padding: 3rem 0;\\n    margin-top: 2rem;\\n    text-align: center;\\n    color: var(--text-secondary);\\n    position: relative;\\n}\\n\\n.footer-line {\\n    height: 1px;\\n    width: 100%;\\n    background: linear-gradient(to right, transparent, var(--border-light), transparent);\\n    margin-bottom: 2rem;\\n}\\n\\n@media (max-width: 768px) {\\n    .fractal-grid {\\n        grid-template-columns: 1fr;\\n    }\\n    \\n    h1 {\\n        font-size: 2.25rem;\\n    }\\n    \\n    h2 {\\n        font-size: 1.5rem;\\n    }\\n    \\n    header {\\n        padding: 2rem 0 4rem;\\n    }\\n    \\n    .container {\\n        padding: 0 1.25rem;\\n    }\\n} \"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","\"use strict\";\n\n/*\n  MIT License http://www.opensource.org/licenses/mit-license.php\n  Author Tobias Koppers @sokra\n*/\n// css base code, injected by the css-loader\n// eslint-disable-next-line func-names\nmodule.exports = function (cssWithMappingToString) {\n  var list = []; // return the list of modules as css string\n\n  list.toString = function toString() {\n    return this.map(function (item) {\n      var content = cssWithMappingToString(item);\n\n      if (item[2]) {\n        return \"@media \".concat(item[2], \" {\").concat(content, \"}\");\n      }\n\n      return content;\n    }).join(\"\");\n  }; // import a list of modules into the list\n  // eslint-disable-next-line func-names\n\n\n  list.i = function (modules, mediaQuery, dedupe) {\n    if (typeof modules === \"string\") {\n      // eslint-disable-next-line no-param-reassign\n      modules = [[null, modules, \"\"]];\n    }\n\n    var alreadyImportedModules = {};\n\n    if (dedupe) {\n      for (var i = 0; i < this.length; i++) {\n        // eslint-disable-next-line prefer-destructuring\n        var id = this[i][0];\n\n        if (id != null) {\n          alreadyImportedModules[id] = true;\n        }\n      }\n    }\n\n    for (var _i = 0; _i < modules.length; _i++) {\n      var item = [].concat(modules[_i]);\n\n      if (dedupe && alreadyImportedModules[item[0]]) {\n        // eslint-disable-next-line no-continue\n        continue;\n      }\n\n      if (mediaQuery) {\n        if (!item[2]) {\n          item[2] = mediaQuery;\n        } else {\n          item[2] = \"\".concat(mediaQuery, \" and \").concat(item[2]);\n        }\n      }\n\n      list.push(item);\n    }\n  };\n\n  return list;\n};","\"use strict\";\n\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\n\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction _iterableToArrayLimit(arr, i) { var _i = arr && (typeof Symbol !== \"undefined\" && arr[Symbol.iterator] || arr[\"@@iterator\"]); if (_i == null) return; var _arr = []; var _n = true; var _d = false; var _s, _e; try { for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\nmodule.exports = function cssWithMappingToString(item) {\n  var _item = _slicedToArray(item, 4),\n      content = _item[1],\n      cssMapping = _item[3];\n\n  if (!cssMapping) {\n    return content;\n  }\n\n  if (typeof btoa === \"function\") {\n    // eslint-disable-next-line no-undef\n    var base64 = btoa(unescape(encodeURIComponent(JSON.stringify(cssMapping))));\n    var data = \"sourceMappingURL=data:application/json;charset=utf-8;base64,\".concat(base64);\n    var sourceMapping = \"/*# \".concat(data, \" */\");\n    var sourceURLs = cssMapping.sources.map(function (source) {\n      return \"/*# sourceURL=\".concat(cssMapping.sourceRoot || \"\").concat(source, \" */\");\n    });\n    return [content].concat(sourceURLs).concat([sourceMapping]).join(\"\\n\");\n  }\n\n  return [content].join(\"\\n\");\n};","\"use strict\";\n\nvar isOldIE = function isOldIE() {\n  var memo;\n  return function memorize() {\n    if (typeof memo === 'undefined') {\n      // Test for IE <= 9 as proposed by Browserhacks\n      // @see http://browserhacks.com/#hack-e71d8692f65334173fee715c222cb805\n      // Tests for existence of standard globals is to allow style-loader\n      // to operate correctly into non-standard environments\n      // @see https://github.com/webpack-contrib/style-loader/issues/177\n      memo = Boolean(window && document && document.all && !window.atob);\n    }\n\n    return memo;\n  };\n}();\n\nvar getTarget = function getTarget() {\n  var memo = {};\n  return function memorize(target) {\n    if (typeof memo[target] === 'undefined') {\n      var styleTarget = document.querySelector(target); // Special case to return head of iframe instead of iframe itself\n\n      if (window.HTMLIFrameElement && styleTarget instanceof window.HTMLIFrameElement) {\n        try {\n          // This will throw an exception if access to iframe is blocked\n          // due to cross-origin restrictions\n          styleTarget = styleTarget.contentDocument.head;\n        } catch (e) {\n          // istanbul ignore next\n          styleTarget = null;\n        }\n      }\n\n      memo[target] = styleTarget;\n    }\n\n    return memo[target];\n  };\n}();\n\nvar stylesInDom = [];\n\nfunction getIndexByIdentifier(identifier) {\n  var result = -1;\n\n  for (var i = 0; i < stylesInDom.length; i++) {\n    if (stylesInDom[i].identifier === identifier) {\n      result = i;\n      break;\n    }\n  }\n\n  return result;\n}\n\nfunction modulesToDom(list, options) {\n  var idCountMap = {};\n  var identifiers = [];\n\n  for (var i = 0; i < list.length; i++) {\n    var item = list[i];\n    var id = options.base ? item[0] + options.base : item[0];\n    var count = idCountMap[id] || 0;\n    var identifier = \"\".concat(id, \" \").concat(count);\n    idCountMap[id] = count + 1;\n    var index = getIndexByIdentifier(identifier);\n    var obj = {\n      css: item[1],\n      media: item[2],\n      sourceMap: item[3]\n    };\n\n    if (index !== -1) {\n      stylesInDom[index].references++;\n      stylesInDom[index].updater(obj);\n    } else {\n      stylesInDom.push({\n        identifier: identifier,\n        updater: addStyle(obj, options),\n        references: 1\n      });\n    }\n\n    identifiers.push(identifier);\n  }\n\n  return identifiers;\n}\n\nfunction insertStyleElement(options) {\n  var style = document.createElement('style');\n  var attributes = options.attributes || {};\n\n  if (typeof attributes.nonce === 'undefined') {\n    var nonce = typeof __webpack_nonce__ !== 'undefined' ? __webpack_nonce__ : null;\n\n    if (nonce) {\n      attributes.nonce = nonce;\n    }\n  }\n\n  Object.keys(attributes).forEach(function (key) {\n    style.setAttribute(key, attributes[key]);\n  });\n\n  if (typeof options.insert === 'function') {\n    options.insert(style);\n  } else {\n    var target = getTarget(options.insert || 'head');\n\n    if (!target) {\n      throw new Error(\"Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.\");\n    }\n\n    target.appendChild(style);\n  }\n\n  return style;\n}\n\nfunction removeStyleElement(style) {\n  // istanbul ignore if\n  if (style.parentNode === null) {\n    return false;\n  }\n\n  style.parentNode.removeChild(style);\n}\n/* istanbul ignore next  */\n\n\nvar replaceText = function replaceText() {\n  var textStore = [];\n  return function replace(index, replacement) {\n    textStore[index] = replacement;\n    return textStore.filter(Boolean).join('\\n');\n  };\n}();\n\nfunction applyToSingletonTag(style, index, remove, obj) {\n  var css = remove ? '' : obj.media ? \"@media \".concat(obj.media, \" {\").concat(obj.css, \"}\") : obj.css; // For old IE\n\n  /* istanbul ignore if  */\n\n  if (style.styleSheet) {\n    style.styleSheet.cssText = replaceText(index, css);\n  } else {\n    var cssNode = document.createTextNode(css);\n    var childNodes = style.childNodes;\n\n    if (childNodes[index]) {\n      style.removeChild(childNodes[index]);\n    }\n\n    if (childNodes.length) {\n      style.insertBefore(cssNode, childNodes[index]);\n    } else {\n      style.appendChild(cssNode);\n    }\n  }\n}\n\nfunction applyToTag(style, options, obj) {\n  var css = obj.css;\n  var media = obj.media;\n  var sourceMap = obj.sourceMap;\n\n  if (media) {\n    style.setAttribute('media', media);\n  } else {\n    style.removeAttribute('media');\n  }\n\n  if (sourceMap && typeof btoa !== 'undefined') {\n    css += \"\\n/*# sourceMappingURL=data:application/json;base64,\".concat(btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))), \" */\");\n  } // For old IE\n\n  /* istanbul ignore if  */\n\n\n  if (style.styleSheet) {\n    style.styleSheet.cssText = css;\n  } else {\n    while (style.firstChild) {\n      style.removeChild(style.firstChild);\n    }\n\n    style.appendChild(document.createTextNode(css));\n  }\n}\n\nvar singleton = null;\nvar singletonCounter = 0;\n\nfunction addStyle(obj, options) {\n  var style;\n  var update;\n  var remove;\n\n  if (options.singleton) {\n    var styleIndex = singletonCounter++;\n    style = singleton || (singleton = insertStyleElement(options));\n    update = applyToSingletonTag.bind(null, style, styleIndex, false);\n    remove = applyToSingletonTag.bind(null, style, styleIndex, true);\n  } else {\n    style = insertStyleElement(options);\n    update = applyToTag.bind(null, style, options);\n\n    remove = function remove() {\n      removeStyleElement(style);\n    };\n  }\n\n  update(obj);\n  return function updateStyle(newObj) {\n    if (newObj) {\n      if (newObj.css === obj.css && newObj.media === obj.media && newObj.sourceMap === obj.sourceMap) {\n        return;\n      }\n\n      update(obj = newObj);\n    } else {\n      remove();\n    }\n  };\n}\n\nmodule.exports = function (list, options) {\n  options = options || {}; // Force single-tag solution on IE6-9, which has a hard limit on the # of <style>\n  // tags it will allow on a page\n\n  if (!options.singleton && typeof options.singleton !== 'boolean') {\n    options.singleton = isOldIE();\n  }\n\n  list = list || [];\n  var lastIdentifiers = modulesToDom(list, options);\n  return function update(newList) {\n    newList = newList || [];\n\n    if (Object.prototype.toString.call(newList) !== '[object Array]') {\n      return;\n    }\n\n    for (var i = 0; i < lastIdentifiers.length; i++) {\n      var identifier = lastIdentifiers[i];\n      var index = getIndexByIdentifier(identifier);\n      stylesInDom[index].references--;\n    }\n\n    var newLastIdentifiers = modulesToDom(newList, options);\n\n    for (var _i = 0; _i < lastIdentifiers.length; _i++) {\n      var _identifier = lastIdentifiers[_i];\n\n      var _index = getIndexByIdentifier(_identifier);\n\n      if (stylesInDom[_index].references === 0) {\n        stylesInDom[_index].updater();\n\n        stylesInDom.splice(_index, 1);\n      }\n    }\n\n    lastIdentifiers = newLastIdentifiers;\n  };\n};","/**\r\n * Dashboard Module - Main container for the fractal dashboard \r\n */\r\n\r\nimport { createFractalSection } from './FractalSection';\r\nimport { initChaosGameFractals } from '../fractals/chaos-game/ChaosGameModule';\r\nimport { initMathFractals } from '../fractals/mathematical/MathFractalModule';\r\n\r\n/**\r\n * Initialize the dashboard with all fractal sections\r\n */\r\nexport function initDashboard(): void {\r\n    console.log('Initializing dashboard...');\r\n    \r\n    // Create the main dashboard structure\r\n    createHeader();\r\n    console.log('Header created');\r\n    \r\n    const chaosGameContainer = createFractalSection('Chaos Game Fractals');\r\n    console.log('Chaos Game section container created');\r\n    \r\n    const mathFractalContainer = createFractalSection('Complex Mathematical Fractals');\r\n    console.log('Math Fractal section container created');\r\n    \r\n    createFooter();\r\n    console.log('Footer created');\r\n\r\n    // Create decorative elements\r\n    createGridOverlay();\r\n    createCornerDecorations();\r\n    console.log('Decorations created');\r\n    \r\n    // Initialize the fractal sections\r\n    console.log('Initializing Chaos Game fractals...');\r\n    initChaosGameFractals(chaosGameContainer);\r\n    console.log('Chaos Game fractals initialized');\r\n    \r\n    console.log('Initializing Math fractals...');\r\n    initMathFractals(mathFractalContainer);\r\n    console.log('Math fractals initialized');\r\n    \r\n    console.log('Dashboard initialization complete');\r\n}\r\n\r\n/**\r\n * Creates the header element with title and subtitle\r\n */\r\nfunction createHeader(): void {\r\n    const dashboard = document.getElementById('dashboard');\r\n    if (!dashboard) return;\r\n    \r\n    const header = document.createElement('header');\r\n    \r\n    // Don't create particles container - already added in HTML\r\n    // const particles = document.createElement('div');\r\n    // particles.id = 'particles-js';\r\n    // header.appendChild(particles);\r\n    \r\n    // Create header content wrapper\r\n    const headerContent = document.createElement('div');\r\n    headerContent.className = 'header-content';\r\n    \r\n    // Create title with data-text attribute for glow effect\r\n    const title = document.createElement('h1');\r\n    const titleText = 'Fractal Explorer';\r\n    title.textContent = titleText;\r\n    title.setAttribute('data-text', titleText);\r\n    \r\n    // Create subtitle with modern styling\r\n    const subtitle = document.createElement('div');\r\n    subtitle.className = 'subtitle';\r\n    subtitle.innerHTML = 'Interactive visualization of <span class=\"highlight\">chaos game fractals</span> and <span class=\"highlight\">complex mathematical patterns</span>';\r\n    \r\n    // Create a decorative line under the title\r\n    const decorLine = document.createElement('div');\r\n    decorLine.className = 'header-decoration';\r\n    \r\n    headerContent.appendChild(title);\r\n    headerContent.appendChild(decorLine);\r\n    headerContent.appendChild(subtitle);\r\n    header.appendChild(headerContent);\r\n    \r\n    dashboard.appendChild(header);\r\n}\r\n\r\n/**\r\n * Creates the footer element\r\n */\r\nfunction createFooter(): void {\r\n    const dashboard = document.getElementById('dashboard');\r\n    if (!dashboard) return;\r\n    \r\n    const footer = document.createElement('div');\r\n    footer.className = 'footer';\r\n    \r\n    const footerLine = document.createElement('div');\r\n    footerLine.className = 'footer-line';\r\n    \r\n    const footerContent = document.createElement('div');\r\n    footerContent.className = 'footer-content';\r\n    \r\n    const footerText = document.createElement('div');\r\n    footerText.className = 'footer-text';\r\n    footerText.textContent = 'Fractal Explorer - Visualizing infinite complexity through mathematics';\r\n    \r\n    footerContent.appendChild(footerText);\r\n    footer.appendChild(footerLine);\r\n    footer.appendChild(footerContent);\r\n    \r\n    dashboard.appendChild(footer);\r\n}\r\n\r\n/**\r\n * Creates the grid overlay element (decorative background)\r\n */\r\nfunction createGridOverlay(): void {\r\n    const body = document.body;\r\n    \r\n    const gridOverlay = document.createElement('div');\r\n    gridOverlay.className = 'grid-overlay';\r\n    \r\n    body.appendChild(gridOverlay);\r\n}\r\n\r\n/**\r\n * Creates corner decoration elements\r\n */\r\nfunction createCornerDecorations(): void {\r\n    const body = document.body;\r\n    \r\n    const corners = [\r\n        'corner-top-left',\r\n        'corner-top-right',\r\n        'corner-bottom-left',\r\n        'corner-bottom-right'\r\n    ];\r\n    \r\n    corners.forEach(corner => {\r\n        const decoration = document.createElement('div');\r\n        decoration.className = `corner-decoration ${corner}`;\r\n        body.appendChild(decoration);\r\n    });\r\n} ","/**\n * FractalCardFactory - Factory for creating fractal cards\n */\n\nimport { FractalBase } from '../fractals/FractalBase';\nimport { FractalControlConfig } from './FractalControlConfig';\nimport { navigateToFractalEditor } from '../services/NavigationService';\nimport { TooltipManager } from './TooltipManager';\n\n/**\n * Interface for fractal card creation options\n */\nexport interface FractalCardOptions {\n    title: string;\n    description: string;\n    formula: string;\n    controlConfigs: FractalControlConfig[];\n    canvasId: string;\n    container: HTMLElement;\n    fractal: FractalBase;\n}\n\n/**\n * Creates a new fractal card and adds it to the specified container\n * @param options Options for creating the fractal card\n */\nexport function createFractalCard(options: FractalCardOptions): void {\n    const { \n        title, \n        description, \n        formula, \n        controlConfigs, \n        canvasId, \n        container, \n        fractal \n    } = options;\n    \n    // Create the card container\n    const card = document.createElement('div');\n    card.className = 'fractal-card';\n    \n    // Create the header\n    const header = document.createElement('div');\n    header.className = 'card-header';\n    \n    const titleElement = document.createElement('h3');\n    titleElement.textContent = title;\n    header.appendChild(titleElement);\n    \n    card.appendChild(header);\n    \n    // Create canvas container\n    const canvasContainer = document.createElement('div');\n    canvasContainer.className = 'canvas-container';\n    \n    // Create canvas element\n    const canvas = document.createElement('canvas');\n    canvas.id = canvasId;\n    canvas.width = 400;\n    canvas.height = 300;\n    canvasContainer.appendChild(canvas);\n    \n    card.appendChild(canvasContainer);\n    \n    // Create controls container\n    const controlsContainer = document.createElement('div');\n    controlsContainer.className = 'fractal-controls';\n    \n    // Add controls\n    controlConfigs.forEach(config => {\n        const controlGroup = document.createElement('div');\n        controlGroup.className = 'control-group';\n        \n        const label = document.createElement('label');\n        label.textContent = config.label || '';\n        label.htmlFor = `${canvasId}-${config.id}`;\n        controlGroup.appendChild(label);\n        \n        const input = document.createElement('input');\n        input.id = `${canvasId}-${config.id}`;\n        \n        if (typeof config.defaultValue === 'number') {\n            // Numeric input type\n            if (config.min !== undefined && config.max !== undefined) {\n                input.type = 'range';\n                input.min = config.min.toString();\n                input.max = config.max.toString();\n                \n                if (config.step !== undefined) {\n                    input.step = config.step.toString();\n                }\n                \n                // Add value display\n                const valueDisplay = document.createElement('span');\n                valueDisplay.className = 'value-display';\n                valueDisplay.textContent = config.defaultValue.toString();\n                controlGroup.appendChild(valueDisplay);\n                \n                // Update value display when input changes\n                input.addEventListener('input', () => {\n                    valueDisplay.textContent = input.value;\n                });\n            } else {\n                input.type = 'number';\n            }\n            \n            input.value = config.defaultValue.toString();\n        } else {\n            // String input type (for select, text, etc.)\n            input.type = 'text';\n            input.value = config.defaultValue.toString();\n        }\n        \n        // Add change handler and automatically generate when value changes\n        input.addEventListener('change', () => {\n            const value = input.type === 'number' || input.type === 'range' \n                ? parseFloat(input.value) \n                : input.value;\n            \n            if (config.onChange) {\n                config.onChange(value);\n                // Automatically generate when value changes (no button needed)\n                fractal.generate();\n            }\n        });\n        \n        // Also generate on input for sliders to provide immediate feedback\n        if (input.type === 'range') {\n            input.addEventListener('input', () => {\n                if (config.onChange) {\n                    config.onChange(parseFloat(input.value));\n                    fractal.generate();\n                }\n            });\n        }\n        \n        controlGroup.appendChild(input);\n        controlsContainer.appendChild(controlGroup);\n    });\n    \n    card.appendChild(controlsContainer);\n    \n    // Add description tooltip\n    const tooltip = document.createElement('div');\n    tooltip.className = 'fractal-tooltip';\n    tooltip.style.display = 'none';\n    \n    const descriptionElement = document.createElement('p');\n    descriptionElement.textContent = description;\n    tooltip.appendChild(descriptionElement);\n    \n    // Create the fractal formula container with improved structure\n    const formulaContainer = document.createElement('div');\n    formulaContainer.className = 'fractal-formula-container';\n    \n    // Add formula title\n    const formulaTitle = document.createElement('div');\n    formulaTitle.className = 'formula-title';\n    formulaTitle.textContent = 'Mathematical Formula';\n    formulaContainer.appendChild(formulaTitle);\n    \n    const formulaElement = document.createElement('pre');\n    formulaElement.className = 'fractal-formula';\n    formulaElement.textContent = formula;\n    formulaContainer.appendChild(formulaElement);\n    \n    // Add copy formula button with smaller size\n    const copyFormulaBtn = document.createElement('button');\n    copyFormulaBtn.className = 'formula-copy-button';\n    copyFormulaBtn.innerHTML = '<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"12\" height=\"12\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\"><rect x=\"9\" y=\"9\" width=\"13\" height=\"13\" rx=\"2\" ry=\"2\"></rect><path d=\"M5 15H4a2 2 0 0 1-2-2V4a2 2 0 0 1 2-2h9a2 2 0 0 1 2 2v1\"></path></svg> Copy';\n    \n    // Add copy success notification element\n    const copySuccess = document.createElement('div');\n    copySuccess.className = 'formula-copied';\n    copySuccess.textContent = 'Copied!';\n    \n    // Add copy formula functionality\n    copyFormulaBtn.addEventListener('click', (e) => {\n        e.stopPropagation(); // Prevent tooltip from closing when clicking the button\n        \n        navigator.clipboard.writeText(formula).then(() => {\n            // Show success notification\n            copySuccess.classList.add('visible');\n            \n            // Remove the class after animation completes\n            setTimeout(() => {\n                copySuccess.classList.remove('visible');\n            }, 1500);\n        }).catch(err => {\n            console.error('Could not copy formula:', err);\n        });\n    });\n    \n    // Add elements to formula container\n    formulaContainer.appendChild(copyFormulaBtn);\n    formulaContainer.appendChild(copySuccess);\n    tooltip.appendChild(formulaContainer);\n    \n    card.appendChild(tooltip);\n    \n    // Add hover/click effect for tooltip\n    card.addEventListener('click', (e) => {\n        // Don't show tooltip when clicking on controls\n        if ((e.target as Element).closest('.fractal-controls')) {\n            return;\n        }\n        \n        tooltip.style.display = tooltip.style.display === 'none' ? 'block' : 'none';\n    });\n    \n    // Add editor button at the bottom of the card\n    const editorButton = document.createElement('button');\n    editorButton.className = 'fractal-editor-button-bottom';\n    editorButton.innerHTML = '<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\"><path d=\"M11 4H4a2 2 0 0 0-2 2v14a2 2 0 0 0 2 2h14a2 2 0 0 0 2-2v-7\"></path><path d=\"M18.5 2.5a2.121 2.121 0 0 1 3 3L12 15l-4 1 1-4 9.5-9.5z\"></path></svg> Open Fractal Editor';\n    editorButton.addEventListener('click', (e) => {\n        e.stopPropagation(); // Prevent the card click from showing the tooltip\n        // Convert title to URL-friendly ID\n        let fractalId = title.toLowerCase().replace(/\\s+/g, '-');\n        \n        // Fix for non-repeat square fractal\n        if (fractalId === 'non-repeat-square-fractal' || fractalId === 'non-repeat-square') {\n            fractalId = 'nonrepeat-square';\n        }\n        \n        navigateToFractalEditor(fractalId);\n    });\n    card.appendChild(editorButton);\n    \n    // Add card to container\n    container.appendChild(card);\n    \n    // Initialize the fractal\n    fractal.initialize();\n    fractal.generate();\n} ","/**\r\n * FractalControlConfig - Extended control configuration for fractal UI\r\n */\r\n\r\nimport { ControlConfig } from './ControlConfig';\r\n\r\n/**\r\n * Extended control configuration with onChange handler for fractal UI\r\n */\r\nexport interface FractalControlConfig extends ControlConfig {\r\n    /**\r\n     * Change handler function\r\n     * @param value The new value of the control\r\n     */\r\n    onChange?: (value: any) => void;\r\n}\r\n\r\n/**\r\n * Creates a standard iteration control\r\n * @param onChange Callback function when value changes\r\n * @returns Control configuration for iterations\r\n */\r\nexport function createIterationsControl(onChange: (value: number) => void): FractalControlConfig {\r\n    return {\r\n        id: 'iterations',\r\n        label: 'Iterations',\r\n        min: 1000,\r\n        max: 100000,\r\n        step: 1000,\r\n        defaultValue: 10000,\r\n        type: 'range',\r\n        onChange: onChange\r\n    };\r\n}\r\n\r\n/**\r\n * Creates a standard max iterations control for mathematical fractals\r\n * @param onChange Callback function when value changes\r\n * @returns Control configuration for max iterations\r\n */\r\nexport function createMaxIterationsControl(onChange: (value: number) => void): FractalControlConfig {\r\n    return {\r\n        id: 'maxIterations',\r\n        label: 'Max Iterations',\r\n        min: 10,\r\n        max: 1000,\r\n        step: 10,\r\n        defaultValue: 100,\r\n        type: 'range',\r\n        onChange: onChange\r\n    };\r\n}\r\n\r\n/**\r\n * Creates a standard zoom control for mathematical fractals\r\n * @param onChange Callback function when value changes\r\n * @returns Control configuration for zoom\r\n */\r\nexport function createZoomControl(onChange: (value: number) => void): FractalControlConfig {\r\n    return {\r\n        id: 'zoom',\r\n        label: 'Zoom Level',\r\n        min: 0.1,\r\n        max: 10,\r\n        step: 0.1,\r\n        defaultValue: 1,\r\n        type: 'range',\r\n        onChange: onChange\r\n    };\r\n}\r\n\r\n/**\r\n * Creates a complex parameter control\r\n * @param id Control identifier\r\n * @param label Display label\r\n * @param defaultValue Default value\r\n * @param onChange Callback function when value changes\r\n * @returns Control configuration for complex parameter\r\n */\r\nexport function createComplexParamControl(\r\n    id: string,\r\n    label: string,\r\n    defaultValue: number,\r\n    onChange: (value: number) => void\r\n): FractalControlConfig {\r\n    return {\r\n        id,\r\n        label,\r\n        min: -2,\r\n        max: 2,\r\n        step: 0.01,\r\n        defaultValue,\r\n        type: 'range',\r\n        onChange\r\n    };\r\n}\r\n\r\n/**\r\n * Interface for slider control options\r\n */\r\nexport interface SliderControlOptions {\r\n    id: string;\r\n    label: string;\r\n    min: number;\r\n    max: number;\r\n    step: number;\r\n    defaultValue: number;\r\n    callback: (value: number) => void;\r\n}\r\n\r\n/**\r\n * Creates a custom slider control with specified parameters\r\n * @param options The slider control options\r\n * @returns Control configuration for custom slider\r\n */\r\nexport function createSliderControl(options: SliderControlOptions): FractalControlConfig {\r\n    return {\r\n        id: options.id,\r\n        label: options.label,\r\n        min: options.min,\r\n        max: options.max,\r\n        step: options.step,\r\n        defaultValue: options.defaultValue,\r\n        type: 'range',\r\n        onChange: options.callback\r\n    };\r\n} ","/**\r\n * FractalSection Module - Creates and manages a section of fractals\r\n */\r\n\r\n/**\r\n * Creates a new section for a group of fractals\r\n * @param title The title of the section\r\n * @returns The container element where fractal cards will be added\r\n */\r\nexport function createFractalSection(title: string): HTMLElement {\r\n    const dashboard = document.getElementById('dashboard');\r\n    if (!dashboard) {\r\n        throw new Error('Dashboard element not found');\r\n    }\r\n    \r\n    // Create section container\r\n    const section = document.createElement('div');\r\n    section.className = 'fractal-section';\r\n    \r\n    // Create container div with appropriate class\r\n    const container = document.createElement('div');\r\n    container.className = 'container';\r\n    section.appendChild(container);\r\n    \r\n    // Create section header\r\n    const sectionHeader = document.createElement('div');\r\n    sectionHeader.className = 'section-header';\r\n    container.appendChild(sectionHeader);\r\n    \r\n    // Create section title\r\n    const sectionTitle = document.createElement('h2');\r\n    sectionTitle.textContent = title;\r\n    sectionHeader.appendChild(sectionTitle);\r\n    \r\n    // Create grid for fractal cards\r\n    const grid = document.createElement('div');\r\n    grid.className = 'fractal-grid';\r\n    container.appendChild(grid);\r\n    \r\n    // Add to dashboard\r\n    dashboard.appendChild(section);\r\n    \r\n    // Log section creation for debugging\r\n    console.log(`Created fractal section: ${title}`);\r\n    \r\n    return grid;\r\n} ","/**\r\n * Complex number implementation for mathematical fractals\r\n */\r\nexport class Complex {\r\n    public real: number;\r\n    public imag: number;\r\n    \r\n    constructor(real: number, imag: number) {\r\n        this.real = real;\r\n        this.imag = imag;\r\n    }\r\n    \r\n    /**\r\n     * Creates a copy of this complex number\r\n     */\r\n    public copy(): Complex {\r\n        return new Complex(this.real, this.imag);\r\n    }\r\n    \r\n    /**\r\n     * Adds another complex number to this one\r\n     */\r\n    public add(other: Complex): Complex {\r\n        return new Complex(\r\n            this.real + other.real,\r\n            this.imag + other.imag\r\n        );\r\n    }\r\n    \r\n    /**\r\n     * Subtracts another complex number from this one\r\n     */\r\n    public subtract(other: Complex): Complex {\r\n        return new Complex(\r\n            this.real - other.real,\r\n            this.imag - other.imag\r\n        );\r\n    }\r\n    \r\n    /**\r\n     * Multiplies this complex number by another\r\n     */\r\n    public multiply(other: Complex): Complex {\r\n        return new Complex(\r\n            this.real * other.real - this.imag * other.imag,\r\n            this.real * other.imag + this.imag * other.real\r\n        );\r\n    }\r\n    \r\n    /**\r\n     * Squares this complex number (z^2)\r\n     */\r\n    public square(): Complex {\r\n        return new Complex(\r\n            this.real * this.real - this.imag * this.imag,\r\n            2 * this.real * this.imag\r\n        );\r\n    }\r\n    \r\n    /**\r\n     * Returns the absolute value (magnitude) of this complex number\r\n     */\r\n    public abs(): number {\r\n        return Math.sqrt(this.real * this.real + this.imag * this.imag);\r\n    }\r\n    \r\n    /**\r\n     * Raises this complex number to a power\r\n     */\r\n    public pow(n: number): Complex {\r\n        let r = Math.pow(this.abs(), n);\r\n        let theta = Math.atan2(this.imag, this.real) * n;\r\n        return new Complex(r * Math.cos(theta), r * Math.sin(theta));\r\n    }\r\n    \r\n    /**\r\n     * Returns the complex conjugate\r\n     */\r\n    public conjugate(): Complex {\r\n        return new Complex(this.real, -this.imag);\r\n    }\r\n    \r\n    /**\r\n     * Divides this complex number by another\r\n     */\r\n    public divide(other: Complex): Complex {\r\n        const denominator = other.real * other.real + other.imag * other.imag;\r\n        return new Complex(\r\n            (this.real * other.real + this.imag * other.imag) / denominator,\r\n            (this.imag * other.real - this.real * other.imag) / denominator\r\n        );\r\n    }\r\n    \r\n    /**\r\n     * Creates a complex number from exponential function\r\n     */\r\n    public static exp(z: Complex): Complex {\r\n        const exp_real = Math.exp(z.real);\r\n        return new Complex(\r\n            exp_real * Math.cos(z.imag),\r\n            exp_real * Math.sin(z.imag)\r\n        );\r\n    }\r\n    \r\n    /**\r\n     * Creates a string representation of this complex number\r\n     */\r\n    public toString(): string {\r\n        if (this.imag === 0) {\r\n            return this.real.toString();\r\n        } else if (this.real === 0) {\r\n            return this.imag === 1 ? 'i' : this.imag === -1 ? '-i' : `${this.imag}i`;\r\n        } else {\r\n            const sign = this.imag < 0 ? '-' : '+';\r\n            const absImag = Math.abs(this.imag);\r\n            return `${this.real} ${sign} ${absImag === 1 ? '' : absImag}i`;\r\n        }\r\n    }\r\n} ","/**\r\n * Base class for all fractals\r\n */\r\nexport abstract class FractalBase {\r\n    protected canvas: HTMLCanvasElement;\r\n    protected ctx: CanvasRenderingContext2D;\r\n    public canvasId: string;\r\n\r\n    /**\r\n     * Constructor for the base fractal class\r\n     * \r\n     * @param canvasId - The ID of the canvas element to render on\r\n     */\r\n    constructor(canvasId: string) {\r\n        this.canvasId = canvasId;\r\n    }\r\n\r\n    /**\r\n     * Initialize the canvas element and context\r\n     * This is called after the canvas is created by the FractalCard\r\n     */\r\n    public initialize(): void {\r\n        this.canvas = document.getElementById(this.canvasId) as HTMLCanvasElement;\r\n        if (!this.canvas) {\r\n            throw new Error(`Canvas element with ID ${this.canvasId} not found`);\r\n        }\r\n        \r\n        const context = this.canvas.getContext('2d');\r\n        if (!context) {\r\n            throw new Error(`Could not get 2D context for canvas ${this.canvasId}`);\r\n        }\r\n        \r\n        this.ctx = context;\r\n        this.clear();\r\n    }\r\n\r\n    /**\r\n     * Clears the canvas with a black background\r\n     */\r\n    public clear(): void {\r\n        if (!this.ctx) {\r\n            this.initialize();\r\n        }\r\n        \r\n        this.ctx.clearRect(0, 0, this.canvas.width, this.canvas.height);\r\n        this.ctx.fillStyle = 'rgba(0, 0, 0, 0.7)';\r\n        this.ctx.fillRect(0, 0, this.canvas.width, this.canvas.height);\r\n    }\r\n\r\n    /**\r\n     * Abstract method to generate the fractal\r\n     * Must be implemented by all derived classes\r\n     */\r\n    public abstract generate(): void;\r\n\r\n    /**\r\n     * Get description data for this fractal\r\n     * Should be implemented by derived classes to provide information\r\n     */\r\n    public abstract getInfo(): FractalInfo;\r\n}\r\n\r\n/**\r\n * Interface for fractal information\r\n */\r\nexport interface FractalInfo {\r\n    title: string;\r\n    description: string;\r\n    formula: string;\r\n} ","import { ChaosGameBase, Point } from './ChaosGameBase';\r\nimport { FractalInfo } from '../FractalBase';\r\n\r\n/**\r\n * Implements a hexagon-based chaos game with the restriction that\r\n * consecutive vertex selections cannot be adjacent vertices\r\n */\r\nexport class AdjacentRestrictionFractal extends ChaosGameBase {\r\n    private lastVertexIndex: number = -1;\r\n    private vertices: Point[] = [];\r\n    private vertexCount: number = 6; // Hexagon\r\n    private currentPoint: Point;\r\n    private animationId: number | null = null;\r\n    private animationStep: number = 0;\r\n    private contractionRatio: number = 0.5; // Default contraction ratio (halfway)\r\n    \r\n    /**\r\n     * Constructor for the Adjacent Restriction fractal\r\n     * \r\n     * @param canvasId - The ID of the canvas element to render on\r\n     * @param iterations - The number of iterations to perform\r\n     */\r\n    constructor(canvasId: string, iterations: number = 20000) {\r\n        super(canvasId, iterations);\r\n        // Enhanced color palette for better visualization\r\n        this.colorPalette = [\"#0088ff\", \"#00ff88\", \"#ff0088\", \"#ffff00\", \"#ff8800\", \"#8800ff\"];\r\n        this.currentPoint = [0, 0]; // Will be set in initialize\r\n    }\r\n    \r\n    /**\r\n     * Initialize the fractal\r\n     * Override to set up hexagon vertices\r\n     */\r\n    public initialize(): void {\r\n        super.initialize();\r\n        \r\n        const width = this.canvas.width;\r\n        const height = this.canvas.height;\r\n        const radius = Math.min(width, height) * 0.45;\r\n        const centerX = width / 2;\r\n        const centerY = height / 2;\r\n        \r\n        // Create hexagon vertices\r\n        this.vertices = [];\r\n        for (let i = 0; i < this.vertexCount; i++) {\r\n            const angle = (Math.PI / 3) * i; // 60° between vertices (360° / 6 = 60°)\r\n            const x = centerX + radius * Math.cos(angle);\r\n            const y = centerY + radius * Math.sin(angle);\r\n            this.vertices.push([x, y]);\r\n        }\r\n        \r\n        // Clear canvas before plotting vertices\r\n        this.clear();\r\n        \r\n        // Draw the hexagon boundary\r\n        this.ctx.strokeStyle = \"#FFFFFF\";\r\n        this.ctx.lineWidth = 1.5;\r\n        this.ctx.beginPath();\r\n        this.ctx.moveTo(this.vertices[0][0], this.vertices[0][1]);\r\n        for (let i = 1; i <= this.vertexCount; i++) {\r\n            const idx = i % this.vertexCount;\r\n            this.ctx.lineTo(this.vertices[idx][0], this.vertices[idx][1]);\r\n        }\r\n        this.ctx.closePath();\r\n        this.ctx.stroke();\r\n        \r\n        // Draw the vertices with their respective colors\r\n        this.vertices.forEach((p, idx) => {\r\n            this.ctx.fillStyle = this.colorPalette[idx % this.colorPalette.length];\r\n            this.ctx.beginPath();\r\n            this.ctx.arc(p[0], p[1], 4, 0, Math.PI * 2);\r\n            this.ctx.fill();\r\n        });\r\n        \r\n        // Reset animation state\r\n        this.animationStep = 0;\r\n        this.lastVertexIndex = -1;\r\n        \r\n        // Set starting point to center of canvas\r\n        this.currentPoint = this.startingPoint;\r\n    }\r\n    \r\n    /**\r\n     * Sets the color scheme for the fractal\r\n     * @param colorScheme An array of hex color strings\r\n     */\r\n    public setColorScheme(colorScheme: string[]): void {\r\n        this.colorPalette = colorScheme;\r\n    }\r\n    \r\n    /**\r\n     * Sets the contraction ratio (how far to move towards the chosen vertex)\r\n     * @param ratio A value between 0 and 1\r\n     */\r\n    public setContractionRatio(ratio: number): void {\r\n        this.contractionRatio = Math.max(0.1, Math.min(0.9, ratio));\r\n    }\r\n    \r\n    /**\r\n     * Moves a point towards the target by the specified contraction ratio\r\n     */\r\n    protected moveTowardsTarget(p1: Point, p2: Point): Point {\r\n        return [\r\n            p1[0] + this.contractionRatio * (p2[0] - p1[0]),\r\n            p1[1] + this.contractionRatio * (p2[1] - p1[1])\r\n        ];\r\n    }\r\n    \r\n    /**\r\n     * Generate the fractal using adjacent vertex restriction\r\n     * @param animate Whether to animate the generation\r\n     * @param batchSize The number of points to generate per animation frame\r\n     */\r\n    public generate(animate: boolean = false, batchSize: number = 100): void {\r\n        // If already animating, stop current animation\r\n        this.stopAnimation();\r\n        \r\n        this.initialize();\r\n        \r\n        if (animate) {\r\n            // Start animation\r\n            this.animate(batchSize);\r\n        } else {\r\n            // Generate all at once\r\n            this.generatePoints(this.iterationsCount);\r\n        }\r\n    }\r\n    \r\n    /**\r\n     * Stop the animation if it's running\r\n     */\r\n    public stopAnimation(): void {\r\n        if (this.animationId !== null) {\r\n            cancelAnimationFrame(this.animationId);\r\n            this.animationId = null;\r\n        }\r\n    }\r\n    \r\n    /**\r\n     * Animate the fractal generation\r\n     */\r\n    private animate(batchSize: number): void {\r\n        const animateStep = () => {\r\n            if (this.animationStep >= this.iterationsCount) {\r\n                this.animationId = null;\r\n                return;\r\n            }\r\n            \r\n            // Draw a batch of points\r\n            this.generatePoints(Math.min(batchSize, this.iterationsCount - this.animationStep));\r\n            \r\n            // Request next animation frame\r\n            this.animationId = requestAnimationFrame(animateStep);\r\n        };\r\n        \r\n        // Start animation\r\n        this.animationId = requestAnimationFrame(animateStep);\r\n    }\r\n    \r\n    /**\r\n     * Generate a specific number of points for the fractal\r\n     */\r\n    private generatePoints(count: number): void {\r\n        for (let i = 0; i < count; i++) {\r\n            // Get random vertex that's not adjacent to last vertex\r\n            let vertexIndex: number;\r\n            do {\r\n                vertexIndex = Math.floor(Math.random() * this.vertexCount);\r\n            } while (\r\n                this.lastVertexIndex !== -1 && \r\n                (vertexIndex === this.lastVertexIndex || \r\n                 vertexIndex === (this.lastVertexIndex + 1) % this.vertexCount ||\r\n                 vertexIndex === (this.lastVertexIndex + this.vertexCount - 1) % this.vertexCount)\r\n            );\r\n            \r\n            // Move towards the selected vertex by the contraction ratio\r\n            const selectedVertex = this.vertices[vertexIndex];\r\n            this.currentPoint = this.moveTowardsTarget(this.currentPoint, selectedVertex);\r\n            \r\n            // Plot the point with color based on vertex\r\n            this.ctx.fillStyle = this.colorPalette[vertexIndex % this.colorPalette.length];\r\n            \r\n            // Draw a small circle for better visual appeal (anti-aliased)\r\n            const size = 1.2; // Slightly larger point for better visibility\r\n            this.ctx.beginPath();\r\n            this.ctx.arc(this.currentPoint[0], this.currentPoint[1], size/2, 0, Math.PI * 2);\r\n            this.ctx.fill();\r\n            \r\n            // Remember this vertex for next iteration\r\n            this.lastVertexIndex = vertexIndex;\r\n            this.animationStep++;\r\n        }\r\n    }\r\n    \r\n    /**\r\n     * Return information about this fractal\r\n     */\r\n    public getInfo(): FractalInfo {\r\n        return {\r\n            title: \"Adjacent Restriction Fractal\",\r\n            description: \"This fractal is generated using a chaos game on a regular hexagon with the restriction that consecutive vertex selections cannot be adjacent. This creates intricate patterns with interesting symmetry and complexity.\",\r\n            formula: \"Let v be a vertex chosen at random, but not adjacent to the previous vertex. Then x_{n+1} = x_n + r * (v - x_n) where we move a portion of the way to the chosen vertex\"\r\n        };\r\n    }\r\n} ","import { FractalBase } from '../FractalBase';\n\n/**\n * Type for representing a 2D point\n */\nexport type Point = [number, number];\n\n/**\n * Base class for chaos game fractals\n */\nexport abstract class ChaosGameBase extends FractalBase {\n    protected iterationsCount: number;\n    protected startingPoint: Point;\n    protected colorPalette: string[];\n    \n    /**\n     * Constructor for the chaos game fractal base class\n     * \n     * @param canvasId - The ID of the canvas element to render on\n     * @param iterations - The number of iterations to perform\n     */\n    constructor(canvasId: string, iterations: number = 10000) {\n        super(canvasId);\n        this.iterationsCount = iterations;\n        this.colorPalette = [\"#0ff\", \"#f0f\", \"#0f0\"];\n    }\n    \n    /**\n     * Initialize the fractal\n     * Override parent method to add setup specific to chaos game fractals\n     */\n    public initialize(): void {\n        super.initialize();\n        \n        // Set the starting point to center of canvas\n        this.startingPoint = [this.canvas.width / 2, this.canvas.height / 2];\n    }\n    \n    /**\n     * Sets the number of iterations for the fractal\n     */\n    public setIterations(iterations: number): void {\n        this.iterationsCount = iterations;\n        this.generate();\n    }\n    \n    /**\n     * Plots a point on the canvas\n     */\n    protected plot(point: Point, size: number = 1): void {\n        const [x, y] = point;\n        const currentColor = Math.floor(Math.random() * this.colorPalette.length);\n        this.ctx.fillStyle = this.colorPalette[currentColor];\n        this.ctx.fillRect(x - size/2, y - size/2, size, size);\n    }\n    \n    /**\n     * Calculates the midpoint between two points\n     */\n    protected midpoint(p1: Point, p2: Point): Point {\n        return [\n            (p1[0] + p2[0]) / 2,\n            (p1[1] + p2[1]) / 2\n        ];\n    }\n} ","/**\r\n * Chaos Game Module - Initializes and manages chaos game fractals\r\n */\r\n\r\nimport { TriangleFractal } from './TriangleFractal';\r\nimport { RestrictedSquareFractal } from './RestrictedSquareFractal';\r\n// import { DiamondFractal } from './DiamondFractal'; // Removed Diamond Fractal\r\nimport { NonRepeatSquareFractal } from './NonRepeatSquareFractal';\r\nimport { ModifiedSquareFractal } from './ModifiedSquareFractal';\r\nimport { AdjacentRestrictionFractal } from './AdjacentRestrictionFractal';\r\n// import { HexagonSpiralFractal } from './HexagonSpiralFractal';  // Removed HexagonSpiralFractal\r\nimport { SierpinskiCarpet } from './SierpinskiCarpet';\r\nimport { PentagonFractal } from './PentagonFractal';\r\nimport { FernFractal } from './FernFractal';\r\nimport { createFractalCard } from '../../components/FractalCardFactory';\r\nimport { createIterationsControl, createSliderControl, FractalControlConfig } from '../../components/FractalControlConfig';\r\n\r\n/**\r\n * Initialize all chaos game fractals\r\n * @param container The container element where fractal cards will be added\r\n */\r\nexport function initChaosGameFractals(container: HTMLElement): void {\r\n    // Triangle Fractal\r\n    initTriangleFractal(container);\r\n    \r\n    // Restricted Square Fractal\r\n    initRestrictedSquareFractal(container);\r\n    \r\n    // Non-Repeat Square Fractal\r\n    initNonRepeatSquareFractal(container);\r\n    \r\n    // Modified Square Fractal\r\n    initModifiedSquareFractal(container);\r\n    \r\n    // Adjacent Restriction Fractal\r\n    initAdjacentRestrictionFractal(container);\r\n    \r\n    // Hexagon Spiral Fractal (replacing Adjacency Mover) - Removed\r\n    \r\n    // Sierpinski Carpet Fractal\r\n    initSierpinskiCarpet(container);\r\n    \r\n    // Pentagon Fractal\r\n    initPentagonFractal(container);\r\n    \r\n    // Fern Fractal\r\n    initFernFractal(container);\r\n}\r\n\r\n/**\r\n * Initialize the Sierpinski Triangle fractal\r\n */\r\nfunction initTriangleFractal(container: HTMLElement): void {\r\n    const fractal = new TriangleFractal('triangle-canvas');\r\n    \r\n    const controls: FractalControlConfig[] = [\r\n        createIterationsControl((value) => fractal.setIterations(value))\r\n    ];\r\n    \r\n    createFractalCard({\r\n        title: 'Sierpinski Triangle',\r\n        description: 'The classic triangle chaos game fractal where points move halfway to randomly chosen vertices.',\r\n        formula: 'P_{n+1} = (P_n + V_i) / 2\\nwhere V_i is a randomly chosen vertex',\r\n        controlConfigs: controls,\r\n        canvasId: 'triangle-canvas',\r\n        container: container,\r\n        fractal: fractal\r\n    });\r\n}\r\n\r\n/**\r\n * Initialize the Restricted Square fractal\r\n */\r\nfunction initRestrictedSquareFractal(container: HTMLElement): void {\r\n    const fractal = new RestrictedSquareFractal('restricted-canvas');\r\n    \r\n    const controls: FractalControlConfig[] = [\r\n        createIterationsControl((value) => fractal.setIterations(value))\r\n    ];\r\n    \r\n    createFractalCard({\r\n        title: 'Restricted Square',\r\n        description: 'A square fractal with restrictions that prevent certain vertex combinations.',\r\n        formula: 'P_{n+1} = (P_n + V_i) / 2\\nwhere V_i cannot be opposite to the previous vertex',\r\n        controlConfigs: controls,\r\n        canvasId: 'restricted-canvas',\r\n        container: container,\r\n        fractal: fractal\r\n    });\r\n}\r\n\r\n/**\r\n * Initialize the Diamond fractal\r\n * @deprecated Diamond fractal has been removed from the dashboard\r\n */\r\nfunction initDiamondFractal(container: HTMLElement): void {\r\n    // Function body removed as this fractal has been removed from the dashboard\r\n}\r\n\r\n/**\r\n * Initialize the Non-Repeat Square fractal\r\n */\r\nfunction initNonRepeatSquareFractal(container: HTMLElement): void {\r\n    const fractal = new NonRepeatSquareFractal('non-repeat-canvas');\r\n    \r\n    const controls: FractalControlConfig[] = [\r\n        createIterationsControl((value) => fractal.setIterations(value))\r\n    ];\r\n    \r\n    createFractalCard({\r\n        title: 'Non-Repeat Square',\r\n        description: 'A variant that prevents consecutive selection of the same vertex, creating more diverse patterns.',\r\n        formula: 'P_{n+1} = (P_n + V_i) / 2\\nwhere V_i is determined by a non-repeating dice roll',\r\n        controlConfigs: controls,\r\n        canvasId: 'non-repeat-canvas',\r\n        container: container,\r\n        fractal: fractal\r\n    });\r\n}\r\n\r\n/**\r\n * Initialize the Modified Square fractal\r\n */\r\nfunction initModifiedSquareFractal(container: HTMLElement): void {\r\n    const fractal = new ModifiedSquareFractal('modified-square-canvas');\r\n    \r\n    const controls: FractalControlConfig[] = [\r\n        createIterationsControl((value) => fractal.setIterations(value))\r\n    ];\r\n    \r\n    createFractalCard({\r\n        title: 'Modified Square',\r\n        description: 'A modified square fractal with altered vertex positions and selection rules.',\r\n        formula: 'P_{n+1} = (P_n + V_i) / 2\\nwith altered vertex positions and selection rules',\r\n        controlConfigs: controls,\r\n        canvasId: 'modified-square-canvas',\r\n        container: container,\r\n        fractal: fractal\r\n    });\r\n}\r\n\r\n/**\r\n * Initialize the Adjacent Restriction fractal\r\n */\r\nfunction initAdjacentRestrictionFractal(container: HTMLElement): void {\r\n    const fractal = new AdjacentRestrictionFractal('adjacent-canvas');\r\n    \r\n    const controls: FractalControlConfig[] = [\r\n        createIterationsControl((value) => fractal.setIterations(value)),\r\n        createSliderControl({\r\n            id: 'contraction-ratio',\r\n            label: 'Contraction Ratio',\r\n            min: 0.1,\r\n            max: 0.9,\r\n            step: 0.05,\r\n            defaultValue: 0.5,\r\n            callback: (value) => fractal.setContractionRatio(value)\r\n        })\r\n    ];\r\n    \r\n    createFractalCard({\r\n        title: 'Adjacent Restriction',\r\n        description: 'A fractal that restricts movement to non-adjacent vertices, creating distinct geometric patterns.',\r\n        formula: 'P_{n+1} = P_n + r * (V_i - P_n)\\nwhere V_i cannot be adjacent to the previously chosen vertex',\r\n        controlConfigs: controls,\r\n        canvasId: 'adjacent-canvas',\r\n        container: container,\r\n        fractal: fractal\r\n    });\r\n}\r\n\r\n/**\r\n * Initialize the Sierpinski Carpet fractal\r\n */\r\nfunction initSierpinskiCarpet(container: HTMLElement): void {\r\n    const fractal = new SierpinskiCarpet('sierpinski-carpet-canvas');\r\n    \r\n    const controls: FractalControlConfig[] = [\r\n        createIterationsControl((value) => fractal.setIterations(value))\r\n    ];\r\n    \r\n    createFractalCard({\r\n        title: 'Sierpinski Carpet',\r\n        description: 'A 2D generalization of the Sierpinski Triangle using 8 vertices arranged in a square pattern with a 2/3 contraction ratio.',\r\n        formula: 'P_{n+1} = P_n + 2/3(V_i - P_n)\\nwhere V_i is a randomly chosen vertex from the 8 vertices',\r\n        controlConfigs: controls,\r\n        canvasId: 'sierpinski-carpet-canvas',\r\n        container: container,\r\n        fractal: fractal\r\n    });\r\n}\r\n\r\n/**\r\n * Initialize the Pentagon fractal\r\n */\r\nfunction initPentagonFractal(container: HTMLElement): void {\r\n    const fractal = new PentagonFractal('pentagon-canvas');\r\n    \r\n    const controls: FractalControlConfig[] = [\r\n        createIterationsControl((value) => fractal.setIterations(value)),\r\n        createSliderControl({\r\n            id: 'pentagon-ratio',\r\n            label: 'Contraction Ratio',\r\n            min: 0.4,\r\n            max: 0.8,\r\n            step: 0.01,\r\n            defaultValue: 0.618,\r\n            callback: (value) => fractal.setContractionRatio(value)\r\n        })\r\n    ];\r\n    \r\n    createFractalCard({\r\n        title: 'Pentagon Fractal',\r\n        description: 'A pentagon-based chaos game with variable contraction ratios that create intricate patterns.',\r\n        formula: 'P_{n+1} = P_n + r_i(V_i - P_n)\\nwhere r_i varies based on vertex V_i',\r\n        controlConfigs: controls,\r\n        canvasId: 'pentagon-canvas',\r\n        container: container,\r\n        fractal: fractal\r\n    });\r\n}\r\n\r\n/**\r\n * Initialize the Fern fractal\r\n */\r\nfunction initFernFractal(container: HTMLElement): void {\r\n    const fractal = new FernFractal('fern-canvas');\r\n    \r\n    const controls: FractalControlConfig[] = [\r\n        createIterationsControl((value) => fractal.setIterations(value))\r\n    ];\r\n    \r\n    createFractalCard({\r\n        title: 'Barnsley Fern',\r\n        description: 'A fern-like fractal generated using a chaos game with probabilistic affine transformations.',\r\n        formula: 'x_{n+1} = a_i·x_n + b_i·y_n + e_i\\ny_{n+1} = c_i·x_n + d_i·y_n + f_i\\nwhere i is chosen with probability p_i',\r\n        controlConfigs: controls,\r\n        canvasId: 'fern-canvas',\r\n        container: container,\r\n        fractal: fractal\r\n    });\r\n} ","import { ChaosGameBase, Point } from './ChaosGameBase';\r\nimport { FractalInfo } from '../FractalBase';\r\n\r\n/**\r\n * Implementation of a Fern-like fractal using weighted chaos game\r\n */\r\nexport class FernFractal extends ChaosGameBase {\r\n    private transformations: Array<{\r\n        prob: number;\r\n        a: number;\r\n        b: number;\r\n        c: number;\r\n        d: number;\r\n        e: number;\r\n        f: number;\r\n        color: string;\r\n    }>;\r\n    \r\n    /**\r\n     * Constructor for the Fern fractal\r\n     * \r\n     * @param canvasId - The ID of the canvas element to render on\r\n     * @param iterations - The number of iterations to perform\r\n     */\r\n    constructor(canvasId: string, iterations: number = 50000) {\r\n        super(canvasId, iterations);\r\n        \r\n        // Define the transformations for the Barnsley fern\r\n        this.transformations = [\r\n            { prob: 0.01, a: 0.00, b: 0.00, c: 0.00, d: 0.16, e: 0.00, f: 0.00, color: '#1AFF1A' }, // Stem\r\n            { prob: 0.85, a: 0.85, b: 0.04, c: -0.04, d: 0.85, e: 0.00, f: 1.60, color: '#00CC00' }, // Successive smaller leaflets\r\n            { prob: 0.07, a: 0.20, b: -0.26, c: 0.23, d: 0.22, e: 0.00, f: 1.60, color: '#33FF33' }, // Largest left leaflet\r\n            { prob: 0.07, a: -0.15, b: 0.28, c: 0.26, d: 0.24, e: 0.00, f: 0.44, color: '#00FF00' }  // Largest right leaflet\r\n        ];\r\n        \r\n        // Override the color palette\r\n        this.colorPalette = [\"#00FF00\", \"#33FF33\", \"#66FF66\", \"#99FF99\"];\r\n    }\r\n    \r\n    /**\r\n     * Initialize the Fern fractal\r\n     */\r\n    public initialize(): void {\r\n        super.initialize();\r\n        \r\n        // Clear the canvas\r\n        this.clear();\r\n        \r\n        // Set initial point\r\n        this.startingPoint = [0, 0];\r\n    }\r\n    \r\n    /**\r\n     * Apply a transformation to a point\r\n     */\r\n    private transform(point: Point, tx: any): Point {\r\n        const [x, y] = point;\r\n        return [\r\n            tx.a * x + tx.b * y + tx.e,\r\n            tx.c * x + tx.d * y + tx.f\r\n        ];\r\n    }\r\n    \r\n    /**\r\n     * Gets a random transformation based on probability weights\r\n     */\r\n    private getRandomTransformation(): any {\r\n        const r = Math.random();\r\n        let sumProb = 0;\r\n        \r\n        for (const tx of this.transformations) {\r\n            sumProb += tx.prob;\r\n            if (r <= sumProb) {\r\n                return tx;\r\n            }\r\n        }\r\n        \r\n        return this.transformations[0];  // Fallback\r\n    }\r\n    \r\n    /**\r\n     * Generates the Fern fractal using the chaos game algorithm with affine transformations\r\n     */\r\n    public generate(): void {\r\n        this.initialize();\r\n        \r\n        let currentPoint = this.startingPoint;\r\n        \r\n        // Skip first 20 iterations (transient phase)\r\n        for (let i = 0; i < 20; i++) {\r\n            const tx = this.getRandomTransformation();\r\n            currentPoint = this.transform(currentPoint, tx);\r\n        }\r\n        \r\n        // Calculate scaling to fit the canvas\r\n        const w = this.canvas.width;\r\n        const h = this.canvas.height;\r\n        const scale = h / 12;  // Fern's height is about 10 units\r\n        const offsetX = w / 2;\r\n        const offsetY = h - 20;  // Position at bottom of canvas\r\n        \r\n        // Main iteration loop\r\n        for (let i = 0; i < this.iterationsCount; i++) {\r\n            // Pick a random transformation based on probability weights\r\n            const tx = this.getRandomTransformation();\r\n            \r\n            // Apply the transformation\r\n            currentPoint = this.transform(currentPoint, tx);\r\n            \r\n            // Map the point to the canvas space\r\n            const canvasX = offsetX + scale * currentPoint[0];\r\n            const canvasY = offsetY - scale * currentPoint[1];  // Y is inverted in canvas\r\n            \r\n            // Use the color associated with the transformation\r\n            this.ctx.fillStyle = tx.color;\r\n            \r\n            // Draw a small point\r\n            this.ctx.beginPath();\r\n            this.ctx.rect(canvasX, canvasY, 1, 1);\r\n            this.ctx.fill();\r\n        }\r\n    }\r\n    \r\n    /**\r\n     * Returns information about the Fern fractal\r\n     */\r\n    public getInfo(): FractalInfo {\r\n        return {\r\n            title: 'Barnsley Fern',\r\n            description: 'A fern-like fractal generated using a chaos game with probabilistic affine transformations. Each part of the fern (stem, leaflets) is created by applying specific transformations with varying probabilities.',\r\n            formula: 'x_{n+1} = a_i·x_n + b_i·y_n + e_i\\ny_{n+1} = c_i·x_n + d_i·y_n + f_i\\nwhere i is chosen with probability p_i'\r\n        };\r\n    }\r\n} ","import { ChaosGameBase } from './ChaosGameBase';\r\nimport { FractalInfo } from '../FractalBase';\r\n\r\n/**\r\n * Implementation of a Modified Square fractal with altered positioning rules\r\n */\r\nexport class ModifiedSquareFractal extends ChaosGameBase {\r\n    /**\r\n     * Constructor for the Modified Square fractal\r\n     * \r\n     * @param canvasId - The ID of the canvas element to render on\r\n     * @param iterations - The number of iterations to perform\r\n     */\r\n    constructor(canvasId: string, iterations: number = 50000) {\r\n        super(canvasId, iterations);\r\n    }\r\n    \r\n    /**\r\n     * Generates the Modified Square fractal\r\n     */\r\n    public generate(): void {\r\n        this.clear();\r\n        \r\n        if (!this.canvas || !this.ctx) {\r\n            this.initialize();\r\n        }\r\n        \r\n        const width = this.canvas.width;\r\n        const height = this.canvas.height;\r\n        \r\n        // Define the vertices of a modified square (slightly offset from regular square)\r\n        const padding = 50;\r\n        const vertices = [\r\n            { x: padding, y: padding }, // top-left\r\n            { x: width - padding, y: padding * 1.2 }, // top-right\r\n            { x: width - padding * 1.2, y: height - padding }, // bottom-right\r\n            { x: padding * 1.1, y: height - padding * 1.1 } // bottom-left\r\n        ];\r\n        \r\n        // Draw the vertices\r\n        this.ctx.fillStyle = '#FF5555';\r\n        vertices.forEach(vertex => {\r\n            this.ctx.beginPath();\r\n            this.ctx.arc(vertex.x, vertex.y, 3, 0, Math.PI * 2);\r\n            this.ctx.fill();\r\n        });\r\n        \r\n        // Choose random initial point\r\n        let x = Math.random() * width;\r\n        let y = Math.random() * height;\r\n        \r\n        // Set drawing style\r\n        this.ctx.fillStyle = 'rgba(0, 255, 255, 0.5)';\r\n        \r\n        // Track the previous vertex index\r\n        let prevIndex = -1;\r\n        \r\n        // Run the chaos game with a twist\r\n        for (let i = 0; i < this.iterationsCount; i++) {\r\n            // Choose a random vertex with constraints\r\n            let randomIndex;\r\n            \r\n            // Modified selection rule: vertices are chosen with varying probabilities and constraints\r\n            if (prevIndex === -1) {\r\n                // First iteration - choose any vertex\r\n                randomIndex = Math.floor(Math.random() * vertices.length);\r\n            } else if (prevIndex === 0) {\r\n                // If previous was top-left, can't go to bottom-right\r\n                randomIndex = Math.floor(Math.random() * 3);\r\n                if (randomIndex >= 2) randomIndex = 3; // Skip the forbidden vertex\r\n            } else if (prevIndex === 2) {\r\n                // If previous was bottom-right, can't go to top-left\r\n                randomIndex = 1 + Math.floor(Math.random() * 3);\r\n                if (randomIndex >= 4) randomIndex = 0; // Wrap around\r\n            } else {\r\n                // Otherwise, any vertex is possible, but with different probabilities\r\n                const r = Math.random();\r\n                if (r < 0.4) {\r\n                    // 40% chance of choosing the vertex opposite to the previous\r\n                    randomIndex = (prevIndex + 2) % 4;\r\n                } else {\r\n                    // 60% chance of choosing one of the adjacent vertices\r\n                    randomIndex = (prevIndex + (Math.random() < 0.5 ? 1 : 3)) % 4;\r\n                }\r\n            }\r\n            \r\n            prevIndex = randomIndex;\r\n            const vertex = vertices[randomIndex];\r\n            \r\n            // Different contraction rates for different vertices\r\n            const rate = randomIndex % 2 === 0 ? 0.5 : 0.55; // Different rates for different corners\r\n            x = (1 - rate) * x + rate * vertex.x;\r\n            y = (1 - rate) * y + rate * vertex.y;\r\n            \r\n            // Skip the first 20 iterations (transient phase)\r\n            if (i > 20) {\r\n                // Draw a point with different sizes based on vertex\r\n                const pointSize = randomIndex % 2 === 0 ? 1 : 1.5;\r\n                this.ctx.beginPath();\r\n                this.ctx.rect(x, y, pointSize, pointSize);\r\n                this.ctx.fill();\r\n            }\r\n        }\r\n    }\r\n    \r\n    /**\r\n     * Returns information about the Modified Square fractal\r\n     */\r\n    public getInfo(): FractalInfo {\r\n        return {\r\n            title: 'Modified Square',\r\n            description: 'A modified square fractal with altered vertex positions and selection rules, creating asymmetric patterns.',\r\n            formula: 'P_{n+1} = (1-r) * P_n + r * V_i\\nwith altered vertex positions and variable contraction rates'\r\n        };\r\n    }\r\n} ","import { ChaosGameBase } from './ChaosGameBase';\nimport { FractalInfo } from '../FractalBase';\n\n/**\n * Implementation of a Square fractal with non-repeating vertex selection\n */\nexport class NonRepeatSquareFractal extends ChaosGameBase {\n    /**\n     * Constructor for the Non-Repeat Square fractal\n     * \n     * @param canvasId - The ID of the canvas element to render on\n     * @param iterations - The number of iterations to perform\n     */\n    constructor(canvasId: string, iterations: number = 50000) {\n        super(canvasId, iterations);\n    }\n    \n    /**\n     * Generates the Non-Repeat Square fractal\n     */\n    public generate(): void {\n        this.clear();\n        \n        if (!this.canvas || !this.ctx) {\n            this.initialize();\n        }\n        \n        const width = this.canvas.width;\n        const height = this.canvas.height;\n        \n        // Define the vertices of a square\n        const padding = 50;\n        const vertices = [\n            { x: padding, y: padding }, // top-left\n            { x: width - padding, y: padding }, // top-right\n            { x: width - padding, y: height - padding }, // bottom-right\n            { x: padding, y: height - padding } // bottom-left\n        ];\n        \n        // Draw the vertices\n        this.ctx.fillStyle = '#FF5555';\n        vertices.forEach(vertex => {\n            this.ctx.beginPath();\n            this.ctx.arc(vertex.x, vertex.y, 3, 0, Math.PI * 2);\n            this.ctx.fill();\n        });\n        \n        // Choose random initial point\n        let x = Math.random() * width;\n        let y = Math.random() * height;\n        \n        // Track the previous vertex index\n        let prevIndex = -1;\n        \n        // Set drawing style\n        this.ctx.fillStyle = 'rgba(0, 255, 255, 0.5)';\n        \n        // Run the chaos game\n        for (let i = 0; i < this.iterationsCount; i++) {\n            // Choose a random vertex (not the same as the previous one)\n            let randomIndex;\n            do {\n                randomIndex = Math.floor(Math.random() * vertices.length);\n            } while (randomIndex === prevIndex);\n            \n            prevIndex = randomIndex;\n            const vertex = vertices[randomIndex];\n            \n            // Move halfway to the chosen vertex\n            x = (x + vertex.x) / 2;\n            y = (y + vertex.y) / 2;\n            \n            // Skip the first 20 iterations (transient phase)\n            if (i > 20) {\n                // Draw a point\n                this.ctx.beginPath();\n                this.ctx.rect(x, y, 1, 1);\n                this.ctx.fill();\n            }\n        }\n    }\n    \n    /**\n     * Returns information about the Non-Repeat Square fractal\n     */\n    public getInfo(): FractalInfo {\n        return {\n            title: 'Non-Repeat Square',\n            description: 'A variant that prevents consecutive selection of the same vertex, creating more diverse patterns.',\n            formula: 'P_{n+1} = (P_n + V_i) / 2\\nwhere V_i is determined by a non-repeating dice roll'\n        };\n    }\n} ","import { ChaosGameBase, Point } from './ChaosGameBase';\r\nimport { FractalInfo } from '../FractalBase';\r\n\r\n/**\r\n * Pentagon Fractal - Creates a fractal using the chaos game method on a regular pentagon\r\n */\r\nexport class PentagonFractal extends ChaosGameBase {\r\n    // Vertices of the pentagon\r\n    private pentagonPoints: Point[] = [];\r\n    private currentPoint: Point;\r\n    private contractionRatio: number = 0.618; // Golden ratio\r\n    private iterations: number = 0;\r\n    \r\n    /**\r\n     * Creates a new Pentagon fractal\r\n     * @param canvasId The canvas ID to draw on\r\n     * @param iterations The number of iterations\r\n     */\r\n    constructor(canvasId: string, iterations: number = 40000) {\r\n        super(canvasId, iterations);\r\n        this.iterationsCount = iterations;\r\n        this.colorPalette = [\r\n            '#3F51B5',\r\n            '#5E35B1',\r\n            '#7B1FA2',\r\n            '#8E24AA',\r\n            '#9C27B0'\r\n        ];\r\n    }\r\n    \r\n    /**\r\n     * Sets the contraction ratio for the pentagon fractal\r\n     */\r\n    public setContractionRatio(ratio: number): void {\r\n        this.contractionRatio = ratio;\r\n        this.generate();\r\n    }\r\n    \r\n    /**\r\n     * Initialize the pentagon vertices and starting point\r\n     */\r\n    public initialize(): void {\r\n        super.initialize();\r\n        \r\n        const centerX = this.canvas.width / 2;\r\n        const centerY = this.canvas.height / 2;\r\n        const radius = Math.min(this.canvas.width, this.canvas.height) * 0.4;\r\n        \r\n        // Create the pentagon vertices (5 points evenly distributed in a circle)\r\n        this.pentagonPoints = [];\r\n        for (let i = 0; i < 5; i++) {\r\n            // Calculate angle for each vertex - starting from the top\r\n            const angle = (Math.PI / 2) + (2 * Math.PI * i / 5);\r\n            this.pentagonPoints.push([\r\n                centerX + radius * Math.cos(angle),\r\n                centerY - radius * Math.sin(angle)\r\n            ]);\r\n        }\r\n        \r\n        // Set starting point to center\r\n        this.currentPoint = [centerX, centerY];\r\n        this.startingPoint = this.currentPoint;\r\n    }\r\n    \r\n    /**\r\n     * Generate the fractal using the chaos game algorithm\r\n     */\r\n    public generate(): void {\r\n        if (!this.ctx) return;\r\n        \r\n        this.initialize();\r\n        this.iterations = 0;\r\n        \r\n        // Skip a few iterations for convergence\r\n        for (let i = 0; i < 20; i++) {\r\n            const randomIndex = Math.floor(Math.random() * 5);\r\n            const target = this.pentagonPoints[randomIndex];\r\n            \r\n            // Apply the chaos game rule: move toward the chosen vertex by contraction ratio\r\n            this.currentPoint = [\r\n                this.currentPoint[0] + this.contractionRatio * (target[0] - this.currentPoint[0]),\r\n                this.currentPoint[1] + this.contractionRatio * (target[1] - this.currentPoint[1])\r\n            ];\r\n        }\r\n        \r\n        // Generate the fractal\r\n        for (let i = 0; i < this.iterationsCount; i++) {\r\n            // Choose a random vertex\r\n            const randomIndex = Math.floor(Math.random() * 5);\r\n            const target = this.pentagonPoints[randomIndex];\r\n            \r\n            // Apply the chaos game rule: move toward the chosen vertex by contraction ratio\r\n            this.currentPoint = [\r\n                this.currentPoint[0] + this.contractionRatio * (target[0] - this.currentPoint[0]),\r\n                this.currentPoint[1] + this.contractionRatio * (target[1] - this.currentPoint[1])\r\n            ];\r\n            \r\n            // Plot the point\r\n            const colorIndex = randomIndex % this.colorPalette.length;\r\n            this.plot(this.currentPoint, 1, this.colorPalette[colorIndex]);\r\n            \r\n            this.iterations++;\r\n        }\r\n    }\r\n    \r\n    /**\r\n     * Plot a point with specific color\r\n     */\r\n    protected plot(point: Point, size: number = 1, color?: string): void {\r\n        const [x, y] = point;\r\n        this.ctx.fillStyle = color || this.colorPalette[Math.floor(Math.random() * this.colorPalette.length)];\r\n        this.ctx.fillRect(x - size/2, y - size/2, size, size);\r\n    }\r\n    \r\n    /**\r\n     * Return information about the fractal\r\n     */\r\n    public getInfo(): FractalInfo {\r\n        return {\r\n            title: 'Pentagon Fractal',\r\n            description: 'The Pentagon Fractal is created using the chaos game algorithm on a regular pentagon. '\r\n                + 'Starting from a random point, each iteration involves randomly selecting one of the five vertices '\r\n                + 'of the pentagon and moving a fraction of the distance from the current point toward that vertex. '\r\n                + 'This process creates an intricate pattern with five-fold symmetry.\\n\\n'\r\n                + 'With a contraction ratio around 0.618 (the golden ratio), the resulting pattern reveals fascinating '\r\n                + 'pentagonal symmetry and self-similar structures that emerge from the simple iterative process.',\r\n            formula: 'P_{n+1} = P_n + r(V_i - P_n)\\n\\n'\r\n                + 'Where:\\n'\r\n                + '- P_n is the current point\\n'\r\n                + '- V_i is a randomly chosen vertex from the 5 vertices of the pentagon\\n'\r\n                + '- r is the contraction ratio (0.618, the golden ratio)\\n'\r\n                + '- Starting from a point within the pentagon'\r\n        };\r\n    }\r\n} ","import { ChaosGameBase, Point } from './ChaosGameBase';\r\nimport { FractalInfo } from '../FractalBase';\r\n\r\n/**\r\n * Implementation of the Restricted Square Fractal using chaos game\r\n */\r\nexport class RestrictedSquareFractal extends ChaosGameBase {\r\n    private points: Point[];\r\n    \r\n    /**\r\n     * Constructor for the Restricted Square fractal\r\n     * \r\n     * @param canvasId - The ID of the canvas element to render on\r\n     * @param iterations - The number of iterations to perform\r\n     */\r\n    constructor(canvasId: string, iterations: number = 10000) {\r\n        super(canvasId, iterations);\r\n        this.points = [];\r\n    }\r\n    \r\n    /**\r\n     * Initialize the Restricted Square fractal\r\n     * Override to set up square vertices\r\n     */\r\n    public initialize(): void {\r\n        super.initialize();\r\n        \r\n        const w = this.canvas.width;\r\n        const h = this.canvas.height;\r\n        \r\n        // Set up square points\r\n        this.points = [\r\n            [20, 20],          // top-left (0)\r\n            [w - 20, 20],      // top-right (1)\r\n            [20, h - 20],      // bottom-left (2)\r\n            [w - 20, h - 20]   // bottom-right (3)\r\n        ];\r\n        \r\n        // Clear canvas before plotting vertices\r\n        this.clear();\r\n        \r\n        // Draw the vertices\r\n        this.points.forEach(p => this.plot(p, 3));\r\n    }\r\n    \r\n    /**\r\n     * Generates the Restricted Square fractal using the chaos game algorithm\r\n     * with restrictions that prevent movement to opposite corners\r\n     */\r\n    public generate(): void {\r\n        this.initialize();\r\n        \r\n        let currentPoint = this.startingPoint;\r\n        this.plot(currentPoint);\r\n        let previousVertex = -1;\r\n        \r\n        // Restriction rules - cannot move to opposite corner\r\n        const restrictions: {[key: number]: number} = {\r\n            0: 3, // can't go from top-left to bottom-right\r\n            1: 2, // can't go from top-right to bottom-left\r\n            2: 1, // can't go from bottom-left to top-right\r\n            3: 0  // can't go from bottom-right to top-left\r\n        };\r\n        \r\n        for (let i = 0; i < this.iterationsCount; i++) {\r\n            // Pick a random vertex that isn't restricted\r\n            let randomIndex: number;\r\n            do {\r\n                randomIndex = Math.floor(Math.random() * 4);\r\n            } while (previousVertex !== -1 && randomIndex === restrictions[previousVertex]);\r\n            \r\n            const targetPoint = this.points[randomIndex];\r\n            \r\n            // Move halfway to that vertex\r\n            currentPoint = this.midpoint(currentPoint, targetPoint);\r\n            this.plot(currentPoint);\r\n            previousVertex = randomIndex;\r\n        }\r\n    }\r\n    \r\n    /**\r\n     * Returns information about the Restricted Square fractal\r\n     */\r\n    public getInfo(): FractalInfo {\r\n        return {\r\n            title: 'Restricted Square Fractal',\r\n            description: 'A square fractal with restrictions that prevent certain vertex combinations, creating interesting patterns.',\r\n            formula: 'P_{n+1} = (P_n + V_i) / 2\\nwhere V_i cannot be opposite to the previously chosen vertex'\r\n        };\r\n    }\r\n} ","import { ChaosGameBase, Point } from './ChaosGameBase';\r\nimport { FractalInfo } from '../FractalBase';\r\n\r\n/**\r\n * Implementation of the Sierpinski Carpet using chaos game\r\n */\r\nexport class SierpinskiCarpet extends ChaosGameBase {\r\n    private points: Point[];\r\n    \r\n    /**\r\n     * Constructor for the Sierpinski Carpet fractal\r\n     * \r\n     * @param canvasId - The ID of the canvas element to render on\r\n     * @param iterations - The number of iterations to perform\r\n     */\r\n    constructor(canvasId: string, iterations: number = 50000) {\r\n        super(canvasId, iterations);\r\n        this.points = [];\r\n        this.colorPalette = [\"#00FFFF\", \"#FF00FF\", \"#FFFF00\", \"#00FF00\"];\r\n    }\r\n    \r\n    /**\r\n     * Initialize the Sierpinski Carpet fractal\r\n     * Override to set up the 8 vertices of the carpet\r\n     */\r\n    public initialize(): void {\r\n        super.initialize();\r\n        \r\n        const w = this.canvas.width;\r\n        const h = this.canvas.height;\r\n        const padding = 20;\r\n        \r\n        // Set up 8 points around a square (excluding the center)\r\n        this.points = [\r\n            [padding, padding],                   // top-left (0)\r\n            [w/2, padding],                       // top-middle (1)\r\n            [w - padding, padding],               // top-right (2)\r\n            [w - padding, h/2],                   // middle-right (3)\r\n            [w - padding, h - padding],           // bottom-right (4)\r\n            [w/2, h - padding],                   // bottom-middle (5)\r\n            [padding, h - padding],               // bottom-left (6)\r\n            [padding, h/2]                        // middle-left (7)\r\n        ];\r\n        \r\n        // Clear canvas before plotting vertices\r\n        this.clear();\r\n        \r\n        // Draw the vertices\r\n        this.points.forEach((p, i) => {\r\n            this.ctx.fillStyle = this.colorPalette[i % this.colorPalette.length];\r\n            this.ctx.beginPath();\r\n            this.ctx.arc(p[0], p[1], 3, 0, Math.PI * 2);\r\n            this.ctx.fill();\r\n        });\r\n    }\r\n    \r\n    /**\r\n     * Generates the Sierpinski Carpet fractal using the chaos game algorithm\r\n     * with a 2/3 ratio instead of 1/2\r\n     */\r\n    public generate(): void {\r\n        this.initialize();\r\n        \r\n        let currentPoint = this.startingPoint;\r\n        let previousVertex = -1;\r\n        \r\n        // Skip first 20 iterations (transient phase)\r\n        for (let i = 0; i < 20; i++) {\r\n            const randomIndex = Math.floor(Math.random() * 8);\r\n            const targetPoint = this.points[randomIndex];\r\n            \r\n            // Move 2/3 of the way to the chosen vertex\r\n            currentPoint = [\r\n                currentPoint[0] + (targetPoint[0] - currentPoint[0]) * (2/3),\r\n                currentPoint[1] + (targetPoint[1] - currentPoint[1]) * (2/3)\r\n            ];\r\n            previousVertex = randomIndex;\r\n        }\r\n        \r\n        // Main iteration loop\r\n        for (let i = 0; i < this.iterationsCount; i++) {\r\n            // Pick a random vertex\r\n            const randomIndex = Math.floor(Math.random() * 8);\r\n            const targetPoint = this.points[randomIndex];\r\n            \r\n            // Move 2/3 of the way to the chosen vertex\r\n            currentPoint = [\r\n                currentPoint[0] + (targetPoint[0] - currentPoint[0]) * (2/3),\r\n                currentPoint[1] + (targetPoint[1] - currentPoint[1]) * (2/3)\r\n            ];\r\n            \r\n            // Use a color that relates to the vertex chosen\r\n            this.ctx.fillStyle = this.colorPalette[randomIndex % this.colorPalette.length];\r\n            \r\n            // Draw a point (smaller for more detail)\r\n            this.ctx.beginPath();\r\n            this.ctx.rect(currentPoint[0], currentPoint[1], 1, 1);\r\n            this.ctx.fill();\r\n            \r\n            previousVertex = randomIndex;\r\n        }\r\n    }\r\n    \r\n    /**\r\n     * Returns information about the Sierpinski Carpet fractal\r\n     */\r\n    public getInfo(): FractalInfo {\r\n        return {\r\n            title: 'Sierpinski Carpet',\r\n            description: 'A 2D generalization of the Sierpinski Triangle. This fractal uses 8 vertices arranged in a square pattern and a 2/3 contraction ratio to create a self-similar pattern with a square hole in the middle.',\r\n            formula: 'P_{n+1} = P_n + 2/3(V_i - P_n)\\nwhere V_i is a randomly chosen vertex from the 8 vertices'\r\n        };\r\n    }\r\n} ","import { ChaosGameBase, Point } from './ChaosGameBase';\r\nimport { FractalInfo } from '../FractalBase';\r\n\r\n/**\r\n * Implementation of the Sierpinski Triangle fractal using chaos game\r\n */\r\nexport class TriangleFractal extends ChaosGameBase {\r\n    private points: Point[];\r\n    private animationId: number | null = null;\r\n    private isAnimating: boolean = false;\r\n    \r\n    /**\r\n     * Constructor for the Triangle fractal\r\n     * \r\n     * @param canvasId - The ID of the canvas element to render on\r\n     * @param iterations - The number of iterations to perform\r\n     */\r\n    constructor(canvasId: string, iterations: number = 10000) {\r\n        super(canvasId, iterations);\r\n        this.points = [];\r\n    }\r\n    \r\n    /**\r\n     * Initialize the Triangle fractal\r\n     * Override to set up triangle vertices\r\n     */\r\n    public initialize(): void {\r\n        super.initialize();\r\n        \r\n        const w = this.canvas.width;\r\n        const h = this.canvas.height;\r\n        \r\n        // Set up triangle points\r\n        this.points = [\r\n            [w / 2, 20],           // top\r\n            [20, h - 20],          // bottom left\r\n            [w - 20, h - 20]       // bottom right\r\n        ];\r\n        \r\n        // Clear canvas before plotting vertices\r\n        this.clear();\r\n        \r\n        // Draw the vertices\r\n        this.points.forEach(p => this.plot(p, 3));\r\n    }\r\n    \r\n    /**\r\n     * Generates the Triangle fractal using the chaos game algorithm\r\n     * @param animate - Whether to animate the generation or not\r\n     * @param speed - Animation speed (points per frame)\r\n     */\r\n    public generate(animate: boolean = false, speed: number = 100): void {\r\n        // Stop any ongoing animation\r\n        this.stopAnimation();\r\n        \r\n        this.initialize();\r\n        \r\n        if (animate) {\r\n            this.animateGeneration(speed);\r\n        } else {\r\n            // Non-animated generation\r\n            let currentPoint = this.startingPoint;\r\n            this.plot(currentPoint);\r\n            \r\n            for (let i = 0; i < this.iterationsCount; i++) {\r\n                // Pick a random vertex\r\n                const randomIndex = Math.floor(Math.random() * this.points.length);\r\n                const targetPoint = this.points[randomIndex];\r\n                \r\n                // Move halfway to that vertex\r\n                currentPoint = this.midpoint(currentPoint, targetPoint);\r\n                this.plot(currentPoint);\r\n            }\r\n        }\r\n    }\r\n    \r\n    /**\r\n     * Animates the generation of the fractal\r\n     * @param pointsPerFrame - Number of points to draw per animation frame\r\n     */\r\n    private animateGeneration(pointsPerFrame: number = 100): void {\r\n        let currentPoint = this.startingPoint;\r\n        let step = 0;\r\n        \r\n        this.plot(currentPoint);\r\n        this.isAnimating = true;\r\n        \r\n        const animate = () => {\r\n            if (step >= this.iterationsCount || !this.isAnimating) {\r\n                this.isAnimating = false;\r\n                this.animationId = null;\r\n                return;\r\n            }\r\n            \r\n            // Draw multiple points per frame for better performance\r\n            for (let i = 0; i < pointsPerFrame && step < this.iterationsCount; i++, step++) {\r\n                // Pick a random vertex\r\n                const randomIndex = Math.floor(Math.random() * this.points.length);\r\n                const targetPoint = this.points[randomIndex];\r\n                \r\n                // Move halfway to that vertex\r\n                currentPoint = this.midpoint(currentPoint, targetPoint);\r\n                this.plot(currentPoint);\r\n            }\r\n            \r\n            this.animationId = requestAnimationFrame(animate);\r\n        };\r\n        \r\n        this.animationId = requestAnimationFrame(animate);\r\n    }\r\n    \r\n    /**\r\n     * Stops any ongoing animation\r\n     */\r\n    public stopAnimation(): void {\r\n        if (this.animationId !== null) {\r\n            cancelAnimationFrame(this.animationId);\r\n            this.animationId = null;\r\n        }\r\n        this.isAnimating = false;\r\n    }\r\n    \r\n    /**\r\n     * Returns whether the fractal is currently animating\r\n     */\r\n    public isCurrentlyAnimating(): boolean {\r\n        return this.isAnimating;\r\n    }\r\n    \r\n    /**\r\n     * Returns information about the Triangle fractal\r\n     */\r\n    public getInfo(): FractalInfo {\r\n        return {\r\n            title: 'Triangle Fractal',\r\n            description: 'The Sierpinski Triangle emerges from a simple chaos game: repeatedly move halfway towards a randomly chosen vertex of a triangle.',\r\n            formula: 'P_{n+1} = (P_n + V_i) / 2\\nwhere V_i is a randomly chosen vertex'\r\n        };\r\n    }\r\n} ","import { MathFractalBase } from './MathFractalBase';\nimport { Complex } from '../Complex';\nimport { FractalInfo } from '../FractalBase';\n\n/**\n * Implementation of the Burning Ship Fractal\n */\nexport class BurningShipFractal extends MathFractalBase {\n    /**\n     * Constructor for the Burning Ship fractal\n     * \n     * @param canvasId - The ID of the canvas element to render on\n     * @param maxIterations - The maximum number of iterations to perform\n     */\n    constructor(canvasId: string, maxIterations: number = 100) {\n        super(canvasId, maxIterations);\n        this.centerX = -0.5;\n        this.centerY = -0.5;\n    }\n    \n    /**\n     * Generates the Burning Ship fractal\n     */\n    public generate(): void {\n        this.clear();\n        \n        if (!this.canvas || !this.ctx) {\n            this.initialize();\n        }\n        \n        const width = this.canvas.width;\n        const height = this.canvas.height;\n        const imageData = this.ctx.createImageData(width, height);\n        const data = imageData.data;\n        \n        for (let y = 0; y < height; y++) {\n            for (let x = 0; x < width; x++) {\n                const c = this.mapToComplex(x, y);\n                let z = new Complex(0, 0);\n                \n                let iterations = 0;\n                \n                // Burning Ship iteration: z = (|Re(z)| + i|Im(z)|)^2 + c\n                while (iterations < this.maxIterations && z.abs() < 2) {\n                    // Take absolute value of real and imaginary parts before squaring\n                    const absRe = Math.abs(z.real);\n                    const absIm = Math.abs(z.imag);\n                    \n                    const zAbs = new Complex(absRe, absIm);\n                    z = zAbs.square().add(c);\n                    \n                    iterations++;\n                }\n                \n                if (iterations === this.maxIterations) {\n                    // Point is in the set - black\n                    this.setPixelDirectColor(data, x, y, width, 0, 0, 0);\n                } else {\n                    // Point is outside the set - create a fiery color scheme\n                    // Use a smooth coloring algorithm\n                    const smoothColor = iterations + 1 - Math.log2(Math.log2(z.abs()));\n                    const normalized = smoothColor / this.maxIterations;\n                    \n                    // Fiery color scheme\n                    let r, g, b;\n                    \n                    if (normalized < 0.5) {\n                        // Black to red\n                        r = Math.floor(normalized * 2 * 255);\n                        g = 0;\n                        b = 0;\n                    } else if (normalized < 0.75) {\n                        // Red to yellow\n                        r = 255;\n                        g = Math.floor((normalized - 0.5) * 4 * 255);\n                        b = 0;\n                    } else {\n                        // Yellow to white\n                        r = 255;\n                        g = 255;\n                        b = Math.floor((normalized - 0.75) * 4 * 255);\n                    }\n                    \n                    this.setPixelDirectColor(data, x, y, width, r, g, b);\n                }\n            }\n        }\n        \n        this.ctx.putImageData(imageData, 0, 0);\n    }\n    \n    /**\n     * Returns information about the Burning Ship fractal\n     */\n    public getInfo(): FractalInfo {\n        return {\n            title: 'Burning Ship Fractal',\n            description: 'The Burning Ship fractal modifies the Mandelbrot formula by taking the absolute value of real and imaginary components before squaring.',\n            formula: 'z_{n+1} = (|Re(z_n)| + i|Im(z_n)|)^2 + c\\nz_0 = 0'\n        };\n    }\n} ","import { MathFractalBase } from './MathFractalBase';\nimport { Complex } from '../Complex';\nimport { FractalInfo } from '../FractalBase';\n\n/**\n * Implementation of the Julia Set fractal\n */\nexport class JuliaFractal extends MathFractalBase {\n    private juliaConstant: Complex;\n    \n    /**\n     * Constructor for the Julia fractal\n     * \n     * @param canvasId - The ID of the canvas element to render on\n     * @param maxIterations - The maximum number of iterations to perform\n     */\n    constructor(canvasId: string, maxIterations: number = 100) {\n        super(canvasId, maxIterations);\n        this.juliaConstant = new Complex(-0.7, 0.27); // Default value for interesting Julia set\n    }\n    \n    /**\n     * Sets the complex parameter for the Julia set\n     * \n     * @param real - Real part of the complex parameter\n     * @param imag - Imaginary part of the complex parameter\n     */\n    public setParameters(real: number, imag: number): void {\n        this.juliaConstant = new Complex(real, imag);\n        this.generate();\n    }\n    \n    /**\n     * Generates the Julia set fractal\n     */\n    public generate(): void {\n        this.clear();\n        \n        if (!this.canvas || !this.ctx) {\n            this.initialize();\n        }\n        \n        const width = this.canvas.width;\n        const height = this.canvas.height;\n        const imageData = this.ctx.createImageData(width, height);\n        const data = imageData.data;\n        \n        for (let y = 0; y < height; y++) {\n            for (let x = 0; x < width; x++) {\n                // Map canvas coordinates to complex plane\n                let z = this.mapToComplex(x, y);\n                \n                let iterations = 0;\n                \n                // Julia set iteration: z = z^2 + c, where c is a constant\n                while (iterations < this.maxIterations && z.abs() < 2) {\n                    z = z.square().add(this.juliaConstant);\n                    iterations++;\n                }\n                \n                if (iterations === this.maxIterations) {\n                    // Point is in the set - black\n                    this.setPixelDirectColor(data, x, y, width, 0, 0, 0);\n                } else {\n                    // Point is outside the set - color based on how quickly it escaped\n                    // Use a smooth coloring algorithm\n                    const smoothColor = (iterations + 1 - Math.log2(Math.log2(z.abs()))) / this.maxIterations;\n                    const hue = ((360 * smoothColor) % 360) / 360;\n                    const saturation = 0.8;\n                    const lightness = 0.5;\n                    \n                    // Convert HSL to RGB for direct color setting\n                    const [r, g, b] = this.hslToRgb(hue, saturation, lightness);\n                    \n                    this.setPixelDirectColor(data, x, y, width, \n                        Math.round(r * 255), \n                        Math.round(g * 255), \n                        Math.round(b * 255));\n                }\n            }\n        }\n        \n        this.ctx.putImageData(imageData, 0, 0);\n    }\n    \n    /**\n     * Returns information about the Julia fractal\n     */\n    public getInfo(): FractalInfo {\n        return {\n            title: 'Julia Set',\n            description: 'Julia sets are related to the Mandelbrot set, but with a fixed complex parameter. Different parameters create wildly different patterns.',\n            formula: 'z_{n+1} = z_n^2 + c\\nwhere c is fixed and z_0 is the point being tested'\n        };\n    }\n} ","import { MathFractalBase } from './MathFractalBase';\r\nimport { FractalInfo } from '../FractalBase';\r\n\r\n/**\r\n * Implementation of the Koch Snowflake fractal\r\n */\r\nexport class KochSnowflakeFractal extends MathFractalBase {\r\n    private depth: number = 4;\r\n    private size: number = 300;\r\n    protected needsRedraw: boolean = true;\r\n    \r\n    /**\r\n     * Constructor for the Koch Snowflake fractal\r\n     * \r\n     * @param canvasId - The ID of the canvas element to render on\r\n     * @param depth - The recursion depth of the Koch snowflake\r\n     */\r\n    constructor(canvasId: string, depth: number = 4) {\r\n        super(canvasId, depth);\r\n        this.depth = depth;\r\n        this.zoom = 1.0; // Default zoom level\r\n    }\r\n    \r\n    /**\r\n     * Set the size of the snowflake\r\n     * @param size - The size value\r\n     */\r\n    public setSize(size: number): void {\r\n        this.size = size;\r\n        this.needsRedraw = true;\r\n    }\r\n    \r\n    /**\r\n     * Draw a single Koch curve segment\r\n     * @param ctx - The rendering context\r\n     * @param x1 - Start x coordinate\r\n     * @param y1 - Start y coordinate\r\n     * @param x2 - End x coordinate\r\n     * @param y2 - End y coordinate\r\n     * @param depth - Current recursion depth\r\n     */\r\n    private drawKochCurve(\r\n        ctx: CanvasRenderingContext2D, \r\n        x1: number, \r\n        y1: number, \r\n        x2: number, \r\n        y2: number, \r\n        depth: number\r\n    ): void {\r\n        if (depth === 0) {\r\n            // Base case: draw a straight line\r\n            ctx.beginPath();\r\n            ctx.moveTo(x1, y1);\r\n            ctx.lineTo(x2, y2);\r\n            ctx.stroke();\r\n            return;\r\n        }\r\n        \r\n        // Calculate the positions of the 4 new points\r\n        // Vector from start to end\r\n        const dx = x2 - x1;\r\n        const dy = y2 - y1;\r\n        \r\n        // First third point\r\n        const x3 = x1 + dx / 3;\r\n        const y3 = y1 + dy / 3;\r\n        \r\n        // Last third point\r\n        const x4 = x1 + 2 * dx / 3;\r\n        const y4 = y1 + 2 * dy / 3;\r\n        \r\n        // Middle point (creating the \"bump\")\r\n        // Rotate the vector (dx/3, dy/3) by 60 degrees counterclockwise\r\n        const angle = Math.PI / 3; // 60 degrees\r\n        const xMiddle = x3 + Math.cos(angle) * dx / 3 - Math.sin(angle) * dy / 3;\r\n        const yMiddle = y3 + Math.sin(angle) * dx / 3 + Math.cos(angle) * dy / 3;\r\n        \r\n        // Recursively draw the 4 segments\r\n        this.drawKochCurve(ctx, x1, y1, x3, y3, depth - 1);\r\n        this.drawKochCurve(ctx, x3, y3, xMiddle, yMiddle, depth - 1);\r\n        this.drawKochCurve(ctx, xMiddle, yMiddle, x4, y4, depth - 1);\r\n        this.drawKochCurve(ctx, x4, y4, x2, y2, depth - 1);\r\n    }\r\n    \r\n    /**\r\n     * Generates the Koch Snowflake fractal\r\n     */\r\n    public generate(): void {\r\n        this.clear();\r\n        \r\n        if (!this.canvas || !this.ctx) {\r\n            this.initialize();\r\n        }\r\n        \r\n        const width = this.canvas.width;\r\n        const height = this.canvas.height;\r\n        \r\n        // Calculate the size based on zoom\r\n        const size = Math.min(width, height) * 0.7 * this.zoom;\r\n        \r\n        // Calculate the vertices of the equilateral triangle\r\n        const centerX = width / 2;\r\n        const centerY = height / 2;\r\n        \r\n        // Height of the equilateral triangle = size * sin(60°)\r\n        const triangleHeight = size * Math.sin(Math.PI / 3);\r\n        \r\n        // The three points of the initial equilateral triangle\r\n        const x1 = centerX;                     // Top point\r\n        const y1 = centerY - triangleHeight / 2;\r\n        \r\n        const x2 = centerX - size / 2;          // Bottom left\r\n        const y2 = centerY + triangleHeight / 2;\r\n        \r\n        const x3 = centerX + size / 2;          // Bottom right\r\n        const y3 = centerY + triangleHeight / 2;\r\n        \r\n        // Set stroke style\r\n        this.ctx.strokeStyle = '#00ffff';\r\n        this.ctx.lineWidth = 1;\r\n        \r\n        // Draw the three sides of the triangle\r\n        this.drawKochCurve(this.ctx, x1, y1, x2, y2, this.depth);\r\n        this.drawKochCurve(this.ctx, x2, y2, x3, y3, this.depth);\r\n        this.drawKochCurve(this.ctx, x3, y3, x1, y1, this.depth);\r\n    }\r\n    \r\n    /**\r\n     * Get information about this fractal\r\n     */\r\n    public getInfo(): FractalInfo {\r\n        return {\r\n            title: 'Koch Snowflake',\r\n            description: 'A classic fractal that starts with an equilateral triangle and recursively replaces the middle third of each line segment with a triangular bump.',\r\n            formula: 'Recursive geometric construction'\r\n        };\r\n    }\r\n} ","import { MathFractalBase } from './MathFractalBase';\r\nimport { FractalInfo } from '../FractalBase';\r\n\r\n/**\r\n * Implementation of the Lyapunov fractal\r\n */\r\nexport class LyapunovFractal extends MathFractalBase {\r\n    private sequence: string = 'AB';\r\n    \r\n    /**\r\n     * Constructor for the Lyapunov fractal\r\n     * \r\n     * @param canvasId - The ID of the canvas element to render on\r\n     * @param maxIterations - The maximum number of iterations to perform\r\n     */\r\n    constructor(canvasId: string, maxIterations: number = 100) {\r\n        super(canvasId, maxIterations);\r\n        this.centerX = 0;\r\n        this.centerY = 0;\r\n    }\r\n    \r\n    /**\r\n     * Set the sequence string\r\n     */\r\n    public setSequence(sequence: string): void {\r\n        this.sequence = sequence.toUpperCase();\r\n        this.generate();\r\n    }\r\n    \r\n    /**\r\n     * Generates the Lyapunov fractal\r\n     */\r\n    public generate(): void {\r\n        this.clear();\r\n        \r\n        if (!this.canvas || !this.ctx) {\r\n            this.initialize();\r\n        }\r\n        \r\n        const width = this.canvas.width;\r\n        const height = this.canvas.height;\r\n        const imageData = this.ctx.createImageData(width, height);\r\n        const data = imageData.data;\r\n        \r\n        // Define the range for r values\r\n        const minA = 2.0;\r\n        const maxA = 4.0;\r\n        const minB = 2.0;\r\n        const maxB = 4.0;\r\n        \r\n        for (let y = 0; y < height; y++) {\r\n            for (let x = 0; x < width; x++) {\r\n                // Map canvas coordinates to parameter space\r\n                const a = minA + (maxA - minA) * x / width;\r\n                const b = minB + (maxB - minB) * (height - y) / height;\r\n                \r\n                // Calculate Lyapunov exponent\r\n                const lyapunov = this.calculateLyapunovExponent(a, b);\r\n                \r\n                // Color based on Lyapunov exponent\r\n                if (isNaN(lyapunov)) {\r\n                    // Black for undefined\r\n                    this.setPixelDirectColor(data, x, y, width, 0, 0, 0);\r\n                } else if (lyapunov < 0) {\r\n                    // Stable (negative exponent) - blue to green scale\r\n                    const intensity = Math.min(1.0, Math.abs(lyapunov / 2));\r\n                    const r = 0;\r\n                    const g = Math.round(255 * intensity);\r\n                    const b = Math.round(255 * (1 - intensity));\r\n                    this.setPixelDirectColor(data, x, y, width, r, g, b);\r\n                } else {\r\n                    // Chaotic (positive exponent) - yellow to red scale\r\n                    const intensity = Math.min(1.0, lyapunov);\r\n                    const r = 255;\r\n                    const g = Math.round(255 * (1 - intensity));\r\n                    const b = 0;\r\n                    this.setPixelDirectColor(data, x, y, width, r, g, b);\r\n                }\r\n            }\r\n        }\r\n        \r\n        this.ctx.putImageData(imageData, 0, 0);\r\n    }\r\n    \r\n    /**\r\n     * Calculate the Lyapunov exponent for given parameters\r\n     */\r\n    private calculateLyapunovExponent(a: number, b: number): number {\r\n        // Initial value\r\n        let x = 0.5;\r\n        \r\n        // Parameters array based on the sequence\r\n        const rValues: number[] = [];\r\n        for (let i = 0; i < this.sequence.length; i++) {\r\n            rValues.push(this.sequence[i] === 'A' ? a : b);\r\n        }\r\n        \r\n        // Warmup iterations to get on the attractor\r\n        const warmup = Math.min(100, this.maxIterations / 2);\r\n        for (let i = 0; i < warmup; i++) {\r\n            const r = rValues[i % rValues.length];\r\n            x = r * x * (1 - x);\r\n            if (x <= 0 || x >= 1 || isNaN(x)) {\r\n                return NaN; // Diverged\r\n            }\r\n        }\r\n        \r\n        // Calculate Lyapunov exponent\r\n        let sum = 0;\r\n        for (let i = 0; i < this.maxIterations; i++) {\r\n            const r = rValues[i % rValues.length];\r\n            const derivative = Math.abs(r * (1 - 2 * x));\r\n            sum += Math.log(derivative);\r\n            \r\n            // Next iteration\r\n            x = r * x * (1 - x);\r\n            if (x <= 0 || x >= 1 || isNaN(x)) {\r\n                return NaN; // Diverged\r\n            }\r\n        }\r\n        \r\n        return sum / this.maxIterations;\r\n    }\r\n    \r\n    /**\r\n     * Returns information about the Lyapunov fractal\r\n     */\r\n    public getInfo(): FractalInfo {\r\n        return {\r\n            title: 'Lyapunov Fractal',\r\n            description: 'Maps the stability of a dynamical system with regions of chaos (positive exponents) and stability (negative exponents).',\r\n            formula: 'x_{n+1} = r·x_n·(1-x_n)\\nLyapunov exponent: λ = lim_{n→∞} (1/n)∑ln|r(1-2x_k)|'\r\n        };\r\n    }\r\n} ","import { MathFractalBase } from './MathFractalBase';\nimport { Complex } from '../Complex';\nimport { FractalInfo } from '../FractalBase';\n\n/**\n * Implementation of the Mandelbrot Set fractal\n */\nexport class MandelbrotFractal extends MathFractalBase {\n    /**\n     * Constructor for the Mandelbrot fractal\n     * \n     * @param canvasId - The ID of the canvas element to render on\n     * @param maxIterations - The maximum number of iterations to perform\n     */\n    constructor(canvasId: string, maxIterations: number = 100) {\n        super(canvasId, maxIterations);\n        this.centerX = -0.5; // Center of the Mandelbrot set\n        this.centerY = 0;\n    }\n    \n    /**\n     * Generates the Mandelbrot set fractal\n     */\n    public generate(): void {\n        this.clear();\n        \n        if (!this.canvas || !this.ctx) {\n            this.initialize();\n        }\n        \n        const width = this.canvas.width;\n        const height = this.canvas.height;\n        const imageData = this.ctx.createImageData(width, height);\n        const data = imageData.data;\n        \n        for (let y = 0; y < height; y++) {\n            for (let x = 0; x < width; x++) {\n                const c = this.mapToComplex(x, y);\n                let z = new Complex(0, 0);\n                \n                let iterations = 0;\n                let smooth = 0;\n                \n                // Mandelbrot iteration: z = z^2 + c\n                while (iterations < this.maxIterations && z.abs() < 2) {\n                    z = z.square().add(c);\n                    iterations++;\n                }\n                \n                // Smooth coloring logarithmic bands\n                if (iterations < this.maxIterations) {\n                    smooth = z.abs();\n                }\n                \n                // Get color\n                if (iterations === this.maxIterations) {\n                    // Point is in the set - black\n                    this.setPixelDirectColor(data, x, y, width, 0, 0, 0);\n                } else {\n                    // Point is outside the set - color based on how quickly it escaped\n                    const hue = (360 * iterations / this.maxIterations) % 360;\n                    const saturation = 100;\n                    const lightness = 50;\n                    \n                    // Convert HSL to RGB\n                    const [r, g, b] = this.hslToRgb(hue/360, saturation/100, lightness/100);\n                    this.setPixelDirectColor(data, x, y, width, \n                        Math.round(r * 255), \n                        Math.round(g * 255), \n                        Math.round(b * 255));\n                }\n            }\n        }\n        \n        this.ctx.putImageData(imageData, 0, 0);\n    }\n    \n    /**\n     * Returns information about the Mandelbrot fractal\n     */\n    public getInfo(): FractalInfo {\n        return {\n            title: 'Mandelbrot Set',\n            description: 'The famous Mandelbrot set is formed by iterating z = z² + c and observing which complex values of c cause the sequence to remain bounded.',\n            formula: 'z_{n+1} = z_n^2 + c\\nz_0 = 0\\nSet contains c where |z_n| remains bounded as n→∞'\n        };\n    }\n} ","import { FractalBase } from '../FractalBase';\r\nimport { Complex } from '../Complex';\r\n\r\n/**\r\n * Base class for mathematical fractals\r\n */\r\nexport abstract class MathFractalBase extends FractalBase {\r\n    protected maxIterations: number = 100;\r\n    protected zoom: number = 1.0;\r\n    protected centerX: number = 0;\r\n    protected centerY: number = 0;\r\n    protected colorMode: string = 'smooth'; // 'smooth' or 'discrete'\r\n    protected colorPalette: string[];\r\n    \r\n    /**\r\n     * Constructor for the mathematical fractal base class\r\n     * \r\n     * @param canvasId - The ID of the canvas element to render on\r\n     * @param maxIterations - The maximum number of iterations to perform\r\n     */\r\n    constructor(canvasId: string, maxIterations: number = 100) {\r\n        super(canvasId);\r\n        this.maxIterations = maxIterations;\r\n        this.colorPalette = [\r\n            '#ff0000', '#ff7f00', '#ffff00', '#00ff00', \r\n            '#0000ff', '#4b0082', '#8f00ff', '#ff00ff'\r\n        ];\r\n    }\r\n    \r\n    /**\r\n     * Sets the maximum iterations for the fractal\r\n     */\r\n    public setMaxIterations(iterations: number): void {\r\n        this.maxIterations = iterations;\r\n        this.generate();\r\n    }\r\n    \r\n    /**\r\n     * Sets the zoom level for the fractal\r\n     */\r\n    public setZoom(zoom: number): void {\r\n        this.zoom = zoom;\r\n        this.generate();\r\n    }\r\n    \r\n    /**\r\n     * Sets the center point for the fractal\r\n     */\r\n    public setCenter(x: number, y: number): void {\r\n        this.centerX = x;\r\n        this.centerY = y;\r\n        this.generate();\r\n    }\r\n    \r\n    /**\r\n     * Gets the color for a point based on iteration count\r\n     */\r\n    protected getColor(iterations: number, maxIterations: number, smooth: number = 0): string {\r\n        if (iterations === maxIterations) {\r\n            return '#000000'; // Black for points in the set\r\n        }\r\n        \r\n        if (this.colorMode === 'smooth') {\r\n            // Smooth coloring formula\r\n            let hue = 360 * (iterations + 1 - Math.log2(Math.log2(smooth))) / maxIterations;\r\n            hue = hue % 360;\r\n            return `hsl(${hue}, 100%, 50%)`;\r\n        } else {\r\n            // Discrete coloring\r\n            const colorIndex = iterations % this.colorPalette.length;\r\n            return this.colorPalette[colorIndex];\r\n        }\r\n    }\r\n    \r\n    /**\r\n     * Maps a canvas coordinate to a complex plane point\r\n     */\r\n    protected mapToComplex(x: number, y: number): Complex {\r\n        if (!this.canvas) {\r\n            this.initialize();\r\n        }\r\n        \r\n        const width = this.canvas.width;\r\n        const height = this.canvas.height;\r\n        \r\n        // Aspect ratio correction\r\n        const aspectRatio = width / height;\r\n        const scale = 2.0 / (this.zoom * Math.min(width, height));\r\n        \r\n        const real = (x - width / 2) * scale * aspectRatio + this.centerX;\r\n        const imag = (y - height / 2) * scale + this.centerY;\r\n        \r\n        return new Complex(real, imag);\r\n    }\r\n    \r\n    /**\r\n     * Helper function to convert HSL to RGB\r\n     */\r\n    protected hslToRgb(h: number, s: number, l: number): [number, number, number] {\r\n        let r, g, b;\r\n        \r\n        if (s === 0) {\r\n            r = g = b = l; // Achromatic\r\n        } else {\r\n            const hue2rgb = (p: number, q: number, t: number): number => {\r\n                if (t < 0) t += 1;\r\n                if (t > 1) t -= 1;\r\n                if (t < 1/6) return p + (q - p) * 6 * t;\r\n                if (t < 1/2) return q;\r\n                if (t < 2/3) return p + (q - p) * (2/3 - t) * 6;\r\n                return p;\r\n            };\r\n            \r\n            const q = l < 0.5 ? l * (1 + s) : l + s - l * s;\r\n            const p = 2 * l - q;\r\n            \r\n            r = hue2rgb(p, q, h + 1/3);\r\n            g = hue2rgb(p, q, h);\r\n            b = hue2rgb(p, q, h - 1/3);\r\n        }\r\n        \r\n        return [r, g, b];\r\n    }\r\n    \r\n    /**\r\n     * Helper function to set pixel color directly in image data\r\n     */\r\n    protected setPixelDirectColor(\r\n        data: Uint8ClampedArray, \r\n        x: number, \r\n        y: number, \r\n        width: number, \r\n        r: number, \r\n        g: number, \r\n        b: number\r\n    ): void {\r\n        const idx = (y * width + x) * 4;\r\n        data[idx] = r;\r\n        data[idx + 1] = g;\r\n        data[idx + 2] = b;\r\n        data[idx + 3] = 255; // Alpha\r\n    }\r\n} ","/**\n * Mathematical Fractals Module - Initializes and manages complex mathematical fractals\n */\n\nimport { MandelbrotFractal } from './MandelbrotFractal';\nimport { JuliaFractal } from './JuliaFractal';\nimport { BurningShipFractal } from './BurningShipFractal';\nimport { NewtonFractal } from './NewtonFractal';\nimport { LyapunovFractal } from './LyapunovFractal';\nimport { PhoenixFractal } from './PhoenixFractal';\nimport { SierpinskiTriangleFractal } from './SierpinskiTriangleFractal';\nimport { KochSnowflakeFractal } from './KochSnowflakeFractal';\nimport { createFractalCard } from '../../components/FractalCardFactory';\nimport { \n    createMaxIterationsControl, \n    createZoomControl, \n    createComplexParamControl, \n    FractalControlConfig \n} from '../../components/FractalControlConfig';\n\n/**\n * Initialize all mathematical fractals\n * @param container The container element where fractal cards will be added\n */\nexport function initMathFractals(container: HTMLElement): void {\n    // Mandelbrot Set\n    initMandelbrotFractal(container);\n    \n    // Julia Set\n    initJuliaFractal(container);\n    \n    // Burning Ship Fractal\n    initBurningShipFractal(container);\n    \n    // Newton Fractal\n    initNewtonFractal(container);\n    \n    // Lyapunov Fractal\n    initLyapunovFractal(container);\n    \n    // Phoenix Fractal\n    initPhoenixFractal(container);\n\n    // Sierpinski Triangle Fractal\n    initSierpinskiTriangleFractal(container);\n    \n    // Koch Snowflake Fractal\n    initKochSnowflakeFractal(container);\n}\n\n/**\n * Initialize the Mandelbrot Set fractal\n */\nfunction initMandelbrotFractal(container: HTMLElement): void {\n    const fractal = new MandelbrotFractal('mandelbrot-canvas');\n    \n    const controls: FractalControlConfig[] = [\n        createMaxIterationsControl((value) => fractal.setMaxIterations(value)),\n        createZoomControl((value) => fractal.setZoom(value))\n    ];\n    \n    createFractalCard({\n        title: 'Mandelbrot Set',\n        description: 'The famous Mandelbrot set is formed by iterating z = z² + c and observing which complex values of c cause the sequence to remain bounded.',\n        formula: 'z_{n+1} = z_n^2 + c\\nz_0 = 0\\nSet contains c where |z_n| remains bounded as n→∞',\n        controlConfigs: controls,\n        canvasId: 'mandelbrot-canvas',\n        container: container,\n        fractal: fractal\n    });\n}\n\n/**\n * Initialize the Julia Set fractal\n */\nfunction initJuliaFractal(container: HTMLElement): void {\n    const fractal = new JuliaFractal('julia-canvas');\n    \n    const controls: FractalControlConfig[] = [\n        createComplexParamControl('real', 'Real Component', -0.7, \n            (value) => fractal.setParameters(value, parseFloat(\n                (document.getElementById('julia-canvas-imag') as HTMLInputElement)?.value || '0.27'\n            ))\n        ),\n        createComplexParamControl('imag', 'Imaginary Component', 0.27, \n            (value) => fractal.setParameters(parseFloat(\n                (document.getElementById('julia-canvas-real') as HTMLInputElement)?.value || '-0.7'\n            ), value)\n        )\n    ];\n    \n    createFractalCard({\n        title: 'Julia Set',\n        description: 'Julia sets are related to the Mandelbrot set, but with a fixed complex parameter. Different parameters create wildly different patterns.',\n        formula: 'z_{n+1} = z_n^2 + c\\nwhere c is fixed and z_0 is the point being tested',\n        controlConfigs: controls,\n        canvasId: 'julia-canvas',\n        container: container,\n        fractal: fractal\n    });\n}\n\n/**\n * Initialize the Burning Ship fractal\n */\nfunction initBurningShipFractal(container: HTMLElement): void {\n    const fractal = new BurningShipFractal('burning-canvas');\n    \n    const controls: FractalControlConfig[] = [\n        createMaxIterationsControl((value) => fractal.setMaxIterations(value)),\n        createZoomControl((value) => fractal.setZoom(value))\n    ];\n    \n    createFractalCard({\n        title: 'Burning Ship Fractal',\n        description: 'The Burning Ship fractal modifies the Mandelbrot formula by taking the absolute value of real and imaginary components before squaring.',\n        formula: 'z_{n+1} = (|Re(z_n)| + i|Im(z_n)|)^2 + c\\nz_0 = 0',\n        controlConfigs: controls,\n        canvasId: 'burning-canvas',\n        container: container,\n        fractal: fractal\n    });\n}\n\n/**\n * Initialize the Newton fractal\n */\nfunction initNewtonFractal(container: HTMLElement): void {\n    const fractal = new NewtonFractal('newton-canvas');\n    \n    const controls: FractalControlConfig[] = [\n        {\n            id: 'power',\n            label: 'Polynomial Power',\n            min: 3,\n            max: 10,\n            step: 1,\n            defaultValue: 3,\n            type: 'range',\n            onChange: (value) => fractal.setPower(value)\n        },\n        createMaxIterationsControl((value) => fractal.setMaxIterations(value))\n    ];\n    \n    createFractalCard({\n        title: 'Newton Fractal',\n        description: 'Visualizes Newton\\'s method for finding roots of complex polynomials, with colors representing which root the algorithm converges to.',\n        formula: 'z_{n+1} = z_n - f(z_n)/f\\'(z_n)\\nwhere f(z) = z^n - 1',\n        controlConfigs: controls,\n        canvasId: 'newton-canvas',\n        container: container,\n        fractal: fractal\n    });\n}\n\n/**\n * Initialize the Lyapunov fractal\n */\nfunction initLyapunovFractal(container: HTMLElement): void {\n    const fractal = new LyapunovFractal('lyapunov-canvas');\n    \n    const controls: FractalControlConfig[] = [\n        {\n            id: 'sequence',\n            label: 'Sequence',\n            type: 'text' as any,\n            min: 0,\n            max: 0,\n            defaultValue: 'AB',\n            onChange: (value) => fractal.setSequence(value)\n        },\n        createMaxIterationsControl((value) => fractal.setMaxIterations(value))\n    ];\n    \n    createFractalCard({\n        title: 'Lyapunov Fractal',\n        description: 'Maps the stability of a dynamical system with regions of chaos (positive exponents) and stability (negative exponents).',\n        formula: 'x_{n+1} = r·x_n·(1-x_n)\\nLyapunov exponent: λ = lim_{n→∞} (1/n)∑ln|r(1-2x_k)|',\n        controlConfigs: controls,\n        canvasId: 'lyapunov-canvas',\n        container: container,\n        fractal: fractal\n    });\n}\n\n/**\n * Initialize the Phoenix fractal\n */\nfunction initPhoenixFractal(container: HTMLElement): void {\n    const fractal = new PhoenixFractal('phoenix-canvas');\n    \n    const controls: FractalControlConfig[] = [\n        {\n            id: 'p',\n            label: 'Parameter P',\n            min: -1,\n            max: 1,\n            step: 0.01,\n            defaultValue: 0.56,\n            type: 'range',\n            onChange: (value) => fractal.setParameter(value)\n        },\n        createMaxIterationsControl((value) => fractal.setMaxIterations(value))\n    ];\n    \n    createFractalCard({\n        title: 'Phoenix Fractal',\n        description: 'A generalization of the Mandelbrot set that incorporates previous iteration values, creating flame-like patterns.',\n        formula: 'z_{n+1} = z_n^2 + c + p·z_{n-1}\\nwhere p is a complex parameter',\n        controlConfigs: controls,\n        canvasId: 'phoenix-canvas',\n        container: container,\n        fractal: fractal\n    });\n}\n\n/**\n * Initialize the Sierpinski Triangle fractal\n */\nfunction initSierpinskiTriangleFractal(container: HTMLElement): void {\n    const fractal = new SierpinskiTriangleFractal('sierpinski-math-canvas');\n    \n    const controls: FractalControlConfig[] = [\n        {\n            id: 'depth',\n            label: 'Recursion Depth',\n            min: 1,\n            max: 9,\n            step: 1,\n            defaultValue: 6,\n            type: 'range',\n            onChange: (value) => fractal.setDepth(value)\n        },\n        createZoomControl((value) => fractal.setZoom(value))\n    ];\n    \n    createFractalCard({\n        title: 'Sierpinski Triangle',\n        description: 'A deterministic implementation of the Sierpinski Triangle that uses recursive subdivision rather than the chaos game algorithm.',\n        formula: 'Recursive subdivision: Begin with an equilateral triangle, divide into 4 equal triangles, remove center triangle, repeat for remaining triangles.',\n        controlConfigs: controls,\n        canvasId: 'sierpinski-math-canvas',\n        container: container,\n        fractal: fractal\n    });\n}\n\n/**\n * Initialize the Koch Snowflake fractal\n */\nfunction initKochSnowflakeFractal(container: HTMLElement): void {\n    const fractal = new KochSnowflakeFractal('koch-math-canvas');\n    \n    const controls: FractalControlConfig[] = [\n        {\n            id: 'depth',\n            label: 'Iterations',\n            min: 0,\n            max: 6,\n            step: 1,\n            defaultValue: 4,\n            type: 'range',\n            onChange: (value) => fractal.setMaxIterations(value)\n        },\n        {\n            id: 'size',\n            label: 'Size',\n            min: 50,\n            max: 400,\n            step: 10,\n            defaultValue: 300,\n            type: 'range',\n            onChange: (value) => fractal.setSize(value)\n        },\n        createZoomControl((value) => fractal.setZoom(value))\n    ];\n    \n    createFractalCard({\n        title: 'Koch Snowflake',\n        description: 'A classic fractal curve that starts with an equilateral triangle and recursively replaces the middle third of each line segment with a triangular bump.',\n        formula: 'Recursive geometric construction: Begin with a triangle, replace middle third of each edge with an equilateral triangle, repeat for all new edges.',\n        controlConfigs: controls,\n        canvasId: 'koch-math-canvas',\n        container: container,\n        fractal: fractal\n    });\n} ","import { MathFractalBase } from './MathFractalBase';\r\nimport { Complex } from '../Complex';\r\nimport { FractalInfo } from '../FractalBase';\r\n\r\n/**\r\n * Implementation of Newton's method fractal\r\n */\r\nexport class NewtonFractal extends MathFractalBase {\r\n    private power: number = 3;\r\n    \r\n    /**\r\n     * Constructor for the Newton fractal\r\n     * \r\n     * @param canvasId - The ID of the canvas element to render on\r\n     * @param maxIterations - The maximum number of iterations to perform\r\n     */\r\n    constructor(canvasId: string, maxIterations: number = 30) {\r\n        super(canvasId, maxIterations);\r\n        this.centerX = 0;\r\n        this.centerY = 0;\r\n    }\r\n    \r\n    /**\r\n     * Set the power for the polynomial\r\n     */\r\n    public setPower(power: number): void {\r\n        this.power = power;\r\n        this.generate();\r\n    }\r\n    \r\n    /**\r\n     * Generates the Newton fractal\r\n     */\r\n    public generate(): void {\r\n        this.clear();\r\n        \r\n        if (!this.canvas || !this.ctx) {\r\n            this.initialize();\r\n        }\r\n        \r\n        const width = this.canvas.width;\r\n        const height = this.canvas.height;\r\n        const imageData = this.ctx.createImageData(width, height);\r\n        const data = imageData.data;\r\n        \r\n        // Precompute the roots of the polynomial z^n - 1\r\n        const roots: Complex[] = [];\r\n        for (let i = 0; i < this.power; i++) {\r\n            const angle = (2 * Math.PI * i) / this.power;\r\n            roots.push(new Complex(Math.cos(angle), Math.sin(angle)));\r\n        }\r\n        \r\n        for (let y = 0; y < height; y++) {\r\n            for (let x = 0; x < width; x++) {\r\n                const z0 = this.mapToComplex(x, y);\r\n                let z = z0.copy();\r\n                \r\n                // Newton's method iterations\r\n                let iterations = 0;\r\n                let rootIndex = -1;\r\n                \r\n                for (iterations = 0; iterations < this.maxIterations; iterations++) {\r\n                    // f(z) = z^n - 1\r\n                    // f'(z) = n * z^(n-1)\r\n                    \r\n                    // Newton's method: z = z - f(z) / f'(z)\r\n                    const zPower = z.pow(this.power);\r\n                    const numerator = zPower.subtract(new Complex(1, 0));\r\n                    const denominator = new Complex(this.power, 0).multiply(z.pow(this.power - 1));\r\n                    \r\n                    const fraction = numerator.divide(denominator);\r\n                    const newZ = z.subtract(fraction);\r\n                    \r\n                    // Check if we're close to any root\r\n                    for (let i = 0; i < roots.length; i++) {\r\n                        if (newZ.subtract(roots[i]).abs() < 1e-6) {\r\n                            rootIndex = i;\r\n                            break;\r\n                        }\r\n                    }\r\n                    \r\n                    if (rootIndex != -1) break;\r\n                    \r\n                    // Check if we're converging\r\n                    if (z.subtract(newZ).abs() < 1e-10) {\r\n                        // Find closest root\r\n                        let minDist = Infinity;\r\n                        for (let i = 0; i < roots.length; i++) {\r\n                            const dist = newZ.subtract(roots[i]).abs();\r\n                            if (dist < minDist) {\r\n                                minDist = dist;\r\n                                rootIndex = i;\r\n                            }\r\n                        }\r\n                        break;\r\n                    }\r\n                    \r\n                    z = newZ;\r\n                }\r\n                \r\n                if (rootIndex != -1) {\r\n                    // Color based on which root we converged to\r\n                    const hue = (360 * rootIndex / this.power) % 360;\r\n                    const saturation = 100;\r\n                    // Adjust lightness based on iterations\r\n                    const lightness = 50 - (iterations / this.maxIterations) * 30;\r\n                    \r\n                    const [r, g, b] = this.hslToRgb(hue/360, saturation/100, lightness/100);\r\n                    this.setPixelDirectColor(data, x, y, width, \r\n                        Math.round(r * 255), \r\n                        Math.round(g * 255), \r\n                        Math.round(b * 255));\r\n                } else {\r\n                    // Black for non-converging points\r\n                    this.setPixelDirectColor(data, x, y, width, 0, 0, 0);\r\n                }\r\n            }\r\n        }\r\n        \r\n        this.ctx.putImageData(imageData, 0, 0);\r\n    }\r\n    \r\n    /**\r\n     * Returns information about the Newton fractal\r\n     */\r\n    public getInfo(): FractalInfo {\r\n        return {\r\n            title: 'Newton Fractal',\r\n            description: 'Visualizes Newton\\'s method for finding roots of complex polynomials. Colors represent which root the algorithm converges to.',\r\n            formula: 'z_{n+1} = z_n - f(z_n)/f\\'(z_n)\\nwhere f(z) = z^n - 1'\r\n        };\r\n    }\r\n} ","import { MathFractalBase } from './MathFractalBase';\r\nimport { Complex } from '../Complex';\r\nimport { FractalInfo } from '../FractalBase';\r\n\r\n/**\r\n * Implementation of the Phoenix fractal\r\n */\r\nexport class PhoenixFractal extends MathFractalBase {\r\n    private p: number = 0.56;\r\n    \r\n    /**\r\n     * Constructor for the Phoenix fractal\r\n     * \r\n     * @param canvasId - The ID of the canvas element to render on\r\n     * @param maxIterations - The maximum number of iterations to perform\r\n     */\r\n    constructor(canvasId: string, maxIterations: number = 100) {\r\n        super(canvasId, maxIterations);\r\n        this.centerX = 0;\r\n        this.centerY = 0;\r\n        this.zoom = 0.8;\r\n    }\r\n    \r\n    /**\r\n     * Set the parameter 'p' for the Phoenix fractal\r\n     */\r\n    public setParameter(p: number): void {\r\n        this.p = p;\r\n        this.generate();\r\n    }\r\n    \r\n    /**\r\n     * Generates the Phoenix fractal\r\n     */\r\n    public generate(): void {\r\n        this.clear();\r\n        \r\n        if (!this.canvas || !this.ctx) {\r\n            this.initialize();\r\n        }\r\n        \r\n        const width = this.canvas.width;\r\n        const height = this.canvas.height;\r\n        const imageData = this.ctx.createImageData(width, height);\r\n        const data = imageData.data;\r\n        \r\n        for (let y = 0; y < height; y++) {\r\n            for (let x = 0; x < width; x++) {\r\n                const c = this.mapToComplex(x, y);\r\n                \r\n                // Initial values\r\n                let z = new Complex(0, 0);\r\n                let zPrev = new Complex(0, 0);\r\n                \r\n                let iterations = 0;\r\n                let smooth = 0;\r\n                \r\n                // Phoenix iteration: z = z^2 + c + p*zPrev\r\n                while (iterations < this.maxIterations && z.abs() < 4) {\r\n                    // Store previous z for next iteration\r\n                    const zTemp = z;\r\n                    \r\n                    // Phoenix formula\r\n                    z = z.square().add(c).add(zPrev.multiply(new Complex(this.p, 0)));\r\n                    zPrev = zTemp;\r\n                    \r\n                    iterations++;\r\n                }\r\n                \r\n                // Log escape time for smooth coloring\r\n                if (iterations < this.maxIterations) {\r\n                    const log_zn = Math.log(z.abs()) / 2;\r\n                    const nu = Math.log(log_zn / Math.log(2)) / Math.log(2);\r\n                    smooth = iterations + 1 - nu;\r\n                }\r\n                \r\n                // Get color\r\n                if (iterations === this.maxIterations) {\r\n                    // Point is in the set - black\r\n                    this.setPixelDirectColor(data, x, y, width, 0, 0, 0);\r\n                } else {\r\n                    // Point is outside the set - color based on escape time\r\n                    // Use a fire-like palette for phoenix\r\n                    const t = smooth / this.maxIterations;\r\n                    \r\n                    // Fire color palette\r\n                    const r = Math.min(255, Math.round(255 * Math.pow(t, 0.5)));\r\n                    const g = Math.min(255, Math.round(128 * Math.pow(t, 0.8)));\r\n                    const b = Math.min(255, Math.round(64 * Math.pow(t, 2)));\r\n                    \r\n                    this.setPixelDirectColor(data, x, y, width, r, g, b);\r\n                }\r\n            }\r\n        }\r\n        \r\n        this.ctx.putImageData(imageData, 0, 0);\r\n    }\r\n    \r\n    /**\r\n     * Returns information about the Phoenix fractal\r\n     */\r\n    public getInfo(): FractalInfo {\r\n        return {\r\n            title: 'Phoenix Fractal',\r\n            description: 'A generalization of the Mandelbrot set that incorporates previous iteration values, creating flame-like patterns.',\r\n            formula: 'z_{n+1} = z_n^2 + c + p·z_{n-1}\\nwhere p is a complex parameter'\r\n        };\r\n    }\r\n} ","import { MathFractalBase } from './MathFractalBase';\nimport { Complex } from '../Complex';\nimport { FractalInfo } from '../FractalBase';\n\n/**\n * Implementation of the Sierpinski Triangle fractal using a deterministic approach\n */\nexport class SierpinskiTriangleFractal extends MathFractalBase {\n    private depth: number = 6;\n    \n    /**\n     * Constructor for the Sierpinski Triangle fractal\n     * \n     * @param canvasId - The ID of the canvas element to render on\n     * @param maxIterations - The maximum depth of the recursion\n     */\n    constructor(canvasId: string, maxDepth: number = 6) {\n        super(canvasId, maxDepth);\n        this.depth = maxDepth;\n        this.zoom = 0.9; // Default zoom level\n    }\n    \n    /**\n     * Sets the depth for the Sierpinski Triangle\n     */\n    public setDepth(depth: number): void {\n        this.depth = depth;\n        this.generate();\n    }\n    \n    /**\n     * Helper method to draw a filled triangle\n     */\n    private drawTriangle(p1: [number, number], p2: [number, number], p3: [number, number], fillColor: string): void {\n        this.ctx.beginPath();\n        this.ctx.moveTo(p1[0], p1[1]);\n        this.ctx.lineTo(p2[0], p2[1]);\n        this.ctx.lineTo(p3[0], p3[1]);\n        this.ctx.closePath();\n        this.ctx.fillStyle = fillColor;\n        this.ctx.fill();\n    }\n    \n    /**\n     * Calculates the midpoint between two points\n     */\n    private midpoint(p1: [number, number], p2: [number, number]): [number, number] {\n        return [\n            (p1[0] + p2[0]) / 2,\n            (p1[1] + p2[1]) / 2\n        ];\n    }\n    \n    /**\n     * Recursively draws the Sierpinski triangle\n     */\n    private sierpinski(p1: [number, number], p2: [number, number], p3: [number, number], depth: number): void {\n        if (depth === 0) {\n            // Generate a color based on position for visual appeal\n            const hue = (p1[0] * 0.7 + p1[1] * 0.3) % 360;\n            const color = `hsl(${hue}, 100%, 50%)`;\n            this.drawTriangle(p1, p2, p3, color);\n            return;\n        }\n        \n        const p12 = this.midpoint(p1, p2);\n        const p23 = this.midpoint(p2, p3);\n        const p31 = this.midpoint(p3, p1);\n        \n        // Recursively draw three smaller triangles\n        this.sierpinski(p1, p12, p31, depth - 1);\n        this.sierpinski(p12, p2, p23, depth - 1);\n        this.sierpinski(p31, p23, p3, depth - 1);\n    }\n    \n    /**\n     * Generates the Sierpinski Triangle fractal\n     */\n    public generate(): void {\n        this.clear();\n        \n        if (!this.canvas || !this.ctx) {\n            this.initialize();\n        }\n        \n        const width = this.canvas.width;\n        const height = this.canvas.height;\n        \n        // Calculate the size based on zoom\n        const size = Math.min(width, height) * 0.85 * this.zoom;\n        \n        // Calculate the vertices of the main triangle\n        // Centered in the canvas\n        const centerX = width / 2;\n        const centerY = height / 2;\n        const halfSize = size / 2;\n        const height30 = size * Math.sin(Math.PI / 3); // Height of equilateral triangle\n        \n        const vertices: [number, number][] = [\n            [centerX, centerY - height30 / 1.5], // Top vertex\n            [centerX - halfSize, centerY + height30 / 3], // Bottom left\n            [centerX + halfSize, centerY + height30 / 3]  // Bottom right\n        ];\n        \n        // Draw the Sierpinski triangle recursively\n        this.sierpinski(vertices[0], vertices[1], vertices[2], this.depth);\n    }\n    \n    /**\n     * Returns information about the Sierpinski Triangle fractal\n     */\n    public getInfo(): FractalInfo {\n        return {\n            title: 'Sierpinski Triangle',\n            description: 'The Sierpinski Triangle is a fractal pattern created by recursively removing the center triangle from equilateral triangles.',\n            formula: 'Recursive subdivision: Begin with an equilateral triangle, divide into 4 equal triangles, remove center triangle, repeat for remaining triangles.'\n        };\n    }\n} ","/**\r\n * Navigation Service - Handles navigation between pages\r\n */\r\n\r\n/**\r\n * Navigate to a fractal editor page\r\n * @param fractalId The ID of the fractal to edit\r\n */\r\nexport function navigateToFractalEditor(fractalId: string): void {\r\n  // Special cases to fix URLs\r\n  if (fractalId === 'burning-ship-fractal') {\r\n    fractalId = 'burning-ship';\r\n  }\r\n  \r\n  // Fix for non-repeat square fractal\r\n  if (fractalId === 'non-repeat-square') {\r\n    fractalId = 'nonrepeat-square';\r\n  }\r\n  \r\n  const editorUrl = `pages/${fractalId}.html`;\r\n  window.open(editorUrl, '_blank');\r\n}\r\n\r\n/**\r\n * Get a URL for a fractal editor page\r\n * @param fractalId The ID of the fractal\r\n * @returns The URL to the fractal editor page\r\n */\r\nexport function getFractalEditorUrl(fractalId: string): string {\r\n  // Special cases to fix URLs\r\n  if (fractalId === 'burning-ship-fractal') {\r\n    fractalId = 'burning-ship';\r\n  }\r\n  \r\n  // Fix for non-repeat square fractal\r\n  if (fractalId === 'non-repeat-square-fractal') {\r\n    fractalId = 'nonrepeat-square';\r\n  }\r\n  \r\n  return `pages/${fractalId}.html`;\r\n} ","import api from \"!../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n            import content from \"!!../node_modules/css-loader/dist/cjs.js!./components.css\";\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nexport default content.locals || {};","import api from \"!../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n            import content from \"!!../node_modules/css-loader/dist/cjs.js!./main.css\";\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nexport default content.locals || {};"],"sourceRoot":""}